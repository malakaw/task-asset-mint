[2021-06-15 14:18:47,059][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                           sum(orderI.sku_pay) as payment , 
                           (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                           (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           AVG(zorder.order_pay) as avg_order_pay,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(orderI.sku_id)) as sku_distinct_count,
                           count(distinct(zorder.customer_key)) as user_count
                   from order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
		   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 23:59:59'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-15 14:18:47,080][INFO][com.mchange.v2.log.MLog] MLog clients using log4j logging.
[2021-06-15 14:18:47,250][INFO][com.mchange.v2.c3p0.C3P0Registry] Initializing c3p0-0.9.2.1 [built 20-March-2013 10:47:27 +0000; debug? true; trace: 10]
[2021-06-15 14:18:47,306][INFO][com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource] Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 2, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 2t22jlai3z28cl9jd60f|f3b5233, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> null, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 2t22jlai3z28cl9jd60f|f3b5233, idleConnectionTestPeriod -> 10, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://127.0.0.1:3306/zmaxx_001?zeroDateTimeBehavior=convertToNull, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 50, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 50, maxStatements -> 5, maxStatementsPerConnection -> 100, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> select 1, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, userOverrides -> {}, usesTraditionalReflectiveProxies -> false ]
[2021-06-15 14:18:50,038][INFO][zmaxx-etl.db-client] 
    select market,sum(kcsl)  as kcsl from rd_product_stock where kcsl > 0 group by market 


[2021-06-15 14:18:50,173][INFO][zmaxx-etl.db-client] 
select  store_key, sum(CAST(sku_qty AS DECIMAL(12,2)) ) as sale_qty_30  from order_item where order_create > DATE_SUB('2021-05-11',INTERVAL 30 DAY)  group by store_key
[2021-06-15 14:18:50,627][INFO][zmaxx-etl.db-client] 
select store_key,count(order_id) as user_null_count from zmaxx_001.order 
where customer_key = 0  and order_create >=  '2021-05-11 00:00:00'  and   order_create  <= '2021-05-11 23:59:59'
group by store_key;


[2021-06-15 14:18:50,635][INFO][zmaxx-etl.db-client] 
select store_key,COUNT(DISTINCT(customer_key)) as new_u,sum(order_pay) as new_u_pay from zmaxx_001.order 
where  customer_key not in
(
select distinct(customer_key) as old_key from zmaxx_001.order   where      order_create  <= '2021-05-11 00:00:00'
)
and order_create >=  '2021-05-11 00:00:00'  and   order_create  <= '2021-05-11 23:59:59'
group by store_key 


[2021-06-15 14:18:51,217][INFO][zmaxx-etl.db-client] 
select store_key,COUNT(DISTINCT(customer_key)) as old_u,sum(order_pay) as old_u_pay from zmaxx_001.order 
where  customer_key   in
(
select distinct(customer_key) as old_key from zmaxx_001.order   where      order_create  <= '2021-05-11 00:00:00'
)
and order_create >=  '2021-05-11 00:00:00'  and   order_create  <= '2021-05-11 23:59:59'
group by store_key 

[2021-06-15 14:18:51,687][INFO][zmaxx-etl.sale] in...insert.....
[2021-06-15 14:18:51,692][INFO][zmaxx-etl.sale] 15
[2021-06-15 14:18:51,692][INFO][zmaxx-etl.db-client] 
 INSERT INTO `rb_sale` (             `store_key`,
				     `store_name`, 
                                     `payment`,
                                     `payment_per_day`,
                                     `gross_rate`, 
                                     `gross`,
                                     `sale_qty`,
                                     `purchase_qty`,
                                     `kcsl`,
                                     `stock_turnover_days`, 
                                     `unit_goods_price`, 
                                     `sku_distinct_count`,
                                     `order_count`,
                                     `avg_order_pay`,
                                     `joint_rate`,
                                     `buy_user_count`,
                                     `per_user_pay`,
                                     `new_user_count`,
                                     `new_user_rate`,
                                     `old_user_count`,
                                     `old_user_rate`,
                                     `userless_order_rate`,
                                     `userless_order_count`,
                                     `calculate_begin_date`,
                                     `calculate_end_date`
                                     )
                                     VALUES
                                     (10, '上海（诺亚新天地店）', 13247.779999999868, 13247.779999999868, 0.44018092272691195, 5831.420024483072, 2716.0, 3062256.0, 25619.0, 48.050640825257894, 4.8776804123710855, 97,
                                      56,   32.429771, 48.5, 15, 883.18536, 5, 0.01507422375673524, 10, 0.9849257762432647, 0.0, 0,
                                     '2021-05-11', '2021-05-11');


[2021-06-15 14:18:51,722][ERROR][zmaxx-etl.db-client] Duplicate entry '2021-05-11-2021-05-11-10' for key 'idx_cd'
[2021-06-15 14:18:51,722][INFO][zmaxx-etl.db-client] 
 INSERT INTO `rb_sale` (             `store_key`,
				     `store_name`, 
                                     `payment`,
                                     `payment_per_day`,
                                     `gross_rate`, 
                                     `gross`,
                                     `sale_qty`,
                                     `purchase_qty`,
                                     `kcsl`,
                                     `stock_turnover_days`, 
                                     `unit_goods_price`, 
                                     `sku_distinct_count`,
                                     `order_count`,
                                     `avg_order_pay`,
                                     `joint_rate`,
                                     `buy_user_count`,
                                     `per_user_pay`,
                                     `new_user_count`,
                                     `new_user_rate`,
                                     `old_user_count`,
                                     `old_user_rate`,
                                     `userless_order_rate`,
                                     `userless_order_count`,
                                     `calculate_begin_date`,
                                     `calculate_end_date`
                                     )
                                     VALUES
                                     (11, '浙江（杭州工联大厦店）', 50139.050000002535, 50139.050000002535, 0.437419136256846, 21931.779943739923, 8762.0, 1.772182E7, 31726.0, 24.33348673109373, 5.722329376854889, 151,
                                      165,   40.974043, 53.1030303030303, 101, 496.42624, 64, 0.04573481148924609, 37, 0.9542651885107539, 0.0, 0,
                                     '2021-05-11', '2021-05-11');


[2021-06-15 14:18:51,727][ERROR][zmaxx-etl.db-client] Duplicate entry '2021-05-11-2021-05-11-11' for key 'idx_cd'
[2021-06-15 14:18:51,727][INFO][zmaxx-etl.db-client] 
 INSERT INTO `rb_sale` (             `store_key`,
				     `store_name`, 
                                     `payment`,
                                     `payment_per_day`,
                                     `gross_rate`, 
                                     `gross`,
                                     `sale_qty`,
                                     `purchase_qty`,
                                     `kcsl`,
                                     `stock_turnover_days`, 
                                     `unit_goods_price`, 
                                     `sku_distinct_count`,
                                     `order_count`,
                                     `avg_order_pay`,
                                     `joint_rate`,
                                     `buy_user_count`,
                                     `per_user_pay`,
                                     `new_user_count`,
                                     `new_user_rate`,
                                     `old_user_count`,
                                     `old_user_rate`,
                                     `userless_order_rate`,
                                     `userless_order_count`,
                                     `calculate_begin_date`,
                                     `calculate_end_date`
                                     )
                                     VALUES
                                     (12, '浙江（杭州古墩印象城店）', 12090.419999999975, 12090.419999999975, 0.5345571105892061, 6463.019981009935, 960.0, 424128.0, 26201.0, 116.84703433922998, 12.594187499999974, 76,
                                      39,   58.928125, 24.615384615384617, 39, 310.01077, 3, 0.02925456683886918, 2, 0.9707454331611308, 0.8717949, 34,
                                     '2021-05-11', '2021-05-11');


[2021-06-15 14:18:51,734][ERROR][zmaxx-etl.db-client] Duplicate entry '2021-05-11-2021-05-11-12' for key 'idx_cd'
[2021-06-15 14:18:51,734][INFO][zmaxx-etl.db-client] 
 INSERT INTO `rb_sale` (             `store_key`,
				     `store_name`, 
                                     `payment`,
                                     `payment_per_day`,
                                     `gross_rate`, 
                                     `gross`,
                                     `sale_qty`,
                                     `purchase_qty`,
                                     `kcsl`,
                                     `stock_turnover_days`, 
                                     `unit_goods_price`, 
                                     `sku_distinct_count`,
                                     `order_count`,
                                     `avg_order_pay`,
                                     `joint_rate`,
                                     `buy_user_count`,
                                     `per_user_pay`,
                                     `new_user_count`,
                                     `new_user_rate`,
                                     `old_user_count`,
                                     `old_user_rate`,
                                     `userless_order_rate`,
                                     `userless_order_count`,
                                     `calculate_begin_date`,
                                     `calculate_end_date`
                                     )
                                     VALUES
                                     (13, '浙江（杭州绿地店）', 7300.600000000012, 7300.600000000012, 0.4593047150761405, 3353.200002884877, 1060.0, 890014.0, 28707.0, 106.17802983602515, 6.887358490566049, 64,
                                      27,   36.54557, 39.25925925925926, 20, 365.03, 3, 0.026011560693641574, 5, 0.9739884393063585, 0.44444445, 12,
                                     '2021-05-11', '2021-05-11');


[2021-06-15 14:18:51,739][ERROR][zmaxx-etl.db-client] Duplicate entry '2021-05-11-2021-05-11-13' for key 'idx_cd'
[2021-06-15 14:18:51,739][INFO][zmaxx-etl.db-client] 
 INSERT INTO `rb_sale` (             `store_key`,
				     `store_name`, 
                                     `payment`,
                                     `payment_per_day`,
                                     `gross_rate`, 
                                     `gross`,
                                     `sale_qty`,
                                     `purchase_qty`,
                                     `kcsl`,
                                     `stock_turnover_days`, 
                                     `unit_goods_price`, 
                                     `sku_distinct_count`,
                                     `order_count`,
                                     `avg_order_pay`,
                                     `joint_rate`,
                                     `buy_user_count`,
                                     `per_user_pay`,
                                     `new_user_count`,
                                     `new_user_rate`,
                                     `old_user_count`,
                                     `old_user_rate`,
                                     `userless_order_rate`,
                                     `userless_order_count`,
                                     `calculate_begin_date`,
                                     `calculate_end_date`
                                     )
                                     VALUES
                                     (14, '浙江（杭州in77店）', 31096.00000000037, 31096.00000000037, 0.42854097007734004, 13325.910005525126, 5798.0, 7816402.0, 28819.0, 24.919870871043983, 5.363228699551634, 140,
                                      104,   47.32346, 55.75, 105, 296.15237, 0, 0.0, 8, 1.0, 0.9326923, 97,
                                     '2021-05-11', '2021-05-11');


[2021-06-15 14:18:51,744][ERROR][zmaxx-etl.db-client] Duplicate entry '2021-05-11-2021-05-11-14' for key 'idx_cd'
[2021-06-15 14:18:51,746][INFO][zmaxx-etl.db-client] 
 INSERT INTO `rb_sale` (             `store_key`,
				     `store_name`, 
                                     `payment`,
                                     `payment_per_day`,
                                     `gross_rate`, 
                                     `gross`,
                                     `sale_qty`,
                                     `purchase_qty`,
                                     `kcsl`,
                                     `stock_turnover_days`, 
                                     `unit_goods_price`, 
                                     `sku_distinct_count`,
                                     `order_count`,
                                     `avg_order_pay`,
                                     `joint_rate`,
                                     `buy_user_count`,
                                     `per_user_pay`,
                                     `new_user_count`,
                                     `new_user_rate`,
                                     `old_user_count`,
                                     `old_user_rate`,
                                     `userless_order_rate`,
                                     `userless_order_count`,
                                     `calculate_begin_date`,
                                     `calculate_end_date`
                                     )
                                     VALUES
                                     (17, '江苏（泰州姜堰店）', 767.5999999999999, 767.5999999999999, -0.7360604486470426, -565.0000003814698, 12.0, 1248.0, 4433.0, 361.3858695652174, 63.96666666666666, 6,
                                      5,   88.783331, 2.4, 5, 153.52, 0, 0.0, 3, 1.0, 0.4, 2,
                                     '2021-05-11', '2021-05-11');


[2021-06-15 14:18:51,750][ERROR][zmaxx-etl.db-client] Duplicate entry '2021-05-11-2021-05-11-17' for key 'idx_cd'
[2021-06-15 14:18:51,750][INFO][zmaxx-etl.db-client] 
 INSERT INTO `rb_sale` (             `store_key`,
				     `store_name`, 
                                     `payment`,
                                     `payment_per_day`,
                                     `gross_rate`, 
                                     `gross`,
                                     `sale_qty`,
                                     `purchase_qty`,
                                     `kcsl`,
                                     `stock_turnover_days`, 
                                     `unit_goods_price`, 
                                     `sku_distinct_count`,
                                     `order_count`,
                                     `avg_order_pay`,
                                     `joint_rate`,
                                     `buy_user_count`,
                                     `per_user_pay`,
                                     `new_user_count`,
                                     `new_user_rate`,
                                     `old_user_count`,
                                     `old_user_rate`,
                                     `userless_order_rate`,
                                     `userless_order_count`,
                                     `calculate_begin_date`,
                                     `calculate_end_date`
                                     )
                                     VALUES
                                     (18, '浙江（慈溪保利店）', 10400.999999999995, 10400.999999999995, 0.3164464897197569, 3291.35993957519, 96.0, 50624.0, 7712.0, 126.63382594417078, 108.34374999999994, 16,
                                      10,   226.800005, 9.6, 11, 945.5455, 0, 0.0, 1, 1.0, 1.0, 10,
                                     '2021-05-11', '2021-05-11');


[2021-06-15 14:18:51,754][ERROR][zmaxx-etl.db-client] Duplicate entry '2021-05-11-2021-05-11-18' for key 'idx_cd'
[2021-06-15 14:18:51,754][INFO][zmaxx-etl.db-client] 
 INSERT INTO `rb_sale` (             `store_key`,
				     `store_name`, 
                                     `payment`,
                                     `payment_per_day`,
                                     `gross_rate`, 
                                     `gross`,
                                     `sale_qty`,
                                     `purchase_qty`,
                                     `kcsl`,
                                     `stock_turnover_days`, 
                                     `unit_goods_price`, 
                                     `sku_distinct_count`,
                                     `order_count`,
                                     `avg_order_pay`,
                                     `joint_rate`,
                                     `buy_user_count`,
                                     `per_user_pay`,
                                     `new_user_count`,
                                     `new_user_rate`,
                                     `old_user_count`,
                                     `old_user_rate`,
                                     `userless_order_rate`,
                                     `userless_order_count`,
                                     `calculate_begin_date`,
                                     `calculate_end_date`
                                     )
                                     VALUES
                                     (19, '安徽（蚌埠金鹏广场店）', 10081.59999999999, 10081.59999999999, -0.28727583104969057, -2896.2000183105574, 108.0, 7738.0, 5728.0, 91.9914346895075, 93.34814814814806, 51,
                                      20,   276.009432, 5.4, 21, 480.0762, 5, 0.2359843675607049, 11, 0.764015632439295, 0.25, 5,
                                     '2021-05-11', '2021-05-11');


[2021-06-15 14:18:51,757][ERROR][zmaxx-etl.db-client] Duplicate entry '2021-05-11-2021-05-11-19' for key 'idx_cd'
[2021-06-15 14:18:51,757][INFO][zmaxx-etl.db-client] 
 INSERT INTO `rb_sale` (             `store_key`,
				     `store_name`, 
                                     `payment`,
                                     `payment_per_day`,
                                     `gross_rate`, 
                                     `gross`,
                                     `sale_qty`,
                                     `purchase_qty`,
                                     `kcsl`,
                                     `stock_turnover_days`, 
                                     `unit_goods_price`, 
                                     `sku_distinct_count`,
                                     `order_count`,
                                     `avg_order_pay`,
                                     `joint_rate`,
                                     `buy_user_count`,
                                     `per_user_pay`,
                                     `new_user_count`,
                                     `new_user_rate`,
                                     `old_user_count`,
                                     `old_user_rate`,
                                     `userless_order_rate`,
                                     `userless_order_count`,
                                     `calculate_begin_date`,
                                     `calculate_end_date`
                                     )
                                     VALUES
                                     (21, '江苏（淮安玖珑汇店）', 4059.250000000003, 4059.250000000003, 0.17231015224589594, 699.4499855041536, 55.0, 17424.0, 7697.0, 172.32089552238807, 73.80454545454552, 10,
                                      8,   120.345454, 6.875, 9, 451.02777, 0, 0.0, 1, 1.0, 1.0, 8,
                                     '2021-05-11', '2021-05-11');


[2021-06-15 14:18:51,761][ERROR][zmaxx-etl.db-client] Duplicate entry '2021-05-11-2021-05-11-21' for key 'idx_cd'
[2021-06-15 14:18:51,761][INFO][zmaxx-etl.db-client] 
 INSERT INTO `rb_sale` (             `store_key`,
				     `store_name`, 
                                     `payment`,
                                     `payment_per_day`,
                                     `gross_rate`, 
                                     `gross`,
                                     `sale_qty`,
                                     `purchase_qty`,
                                     `kcsl`,
                                     `stock_turnover_days`, 
                                     `unit_goods_price`, 
                                     `sku_distinct_count`,
                                     `order_count`,
                                     `avg_order_pay`,
                                     `joint_rate`,
                                     `buy_user_count`,
                                     `per_user_pay`,
                                     `new_user_count`,
                                     `new_user_rate`,
                                     `old_user_count`,
                                     `old_user_rate`,
                                     `userless_order_rate`,
                                     `userless_order_count`,
                                     `calculate_begin_date`,
                                     `calculate_end_date`
                                     )
                                     VALUES
                                     (26, '上海（北上海广场店）', 66301.64000000058, 66301.64000000058, 0.29260995467604467, 19400.5198753476, 2128.0, 1067230.0, 26236.0, 80.759285860866, 31.156785714285988, 82,
                                      38,   103.610528, 56.0, 1, 66301.64, 0, 0.0, 1, 1.0, 0.0, 0,
                                     '2021-05-11', '2021-05-11');


[2021-06-15 14:18:51,765][ERROR][zmaxx-etl.db-client] Duplicate entry '2021-05-11-2021-05-11-26' for key 'idx_cd'
[2021-06-15 14:18:51,766][INFO][zmaxx-etl.db-client] 
 INSERT INTO `rb_sale` (             `store_key`,
				     `store_name`, 
                                     `payment`,
                                     `payment_per_day`,
                                     `gross_rate`, 
                                     `gross`,
                                     `sale_qty`,
                                     `purchase_qty`,
                                     `kcsl`,
                                     `stock_turnover_days`, 
                                     `unit_goods_price`, 
                                     `sku_distinct_count`,
                                     `order_count`,
                                     `avg_order_pay`,
                                     `joint_rate`,
                                     `buy_user_count`,
                                     `per_user_pay`,
                                     `new_user_count`,
                                     `new_user_rate`,
                                     `old_user_count`,
                                     `old_user_rate`,
                                     `userless_order_rate`,
                                     `userless_order_count`,
                                     `calculate_begin_date`,
                                     `calculate_end_date`
                                     )
                                     VALUES
                                     (27, '浙江（杭州新天地店）', 13042.399999999834, 13042.399999999834, 0.4313347250673696, 5625.64001821859, 2720.0, 4073580.0, 27173.0, 67.56091496767777, 4.794999999999939, 70,
                                      33,   38.732075, 82.42424242424242, 1, 13042.4, 0, 0.0, 1, 1.0, 0.0, 0,
                                     '2021-05-11', '2021-05-11');


[2021-06-15 14:18:51,769][ERROR][zmaxx-etl.db-client] Duplicate entry '2021-05-11-2021-05-11-27' for key 'idx_cd'
[2021-06-15 14:18:51,770][INFO][zmaxx-etl.db-client] 
 INSERT INTO `rb_sale` (             `store_key`,
				     `store_name`, 
                                     `payment`,
                                     `payment_per_day`,
                                     `gross_rate`, 
                                     `gross`,
                                     `sale_qty`,
                                     `purchase_qty`,
                                     `kcsl`,
                                     `stock_turnover_days`, 
                                     `unit_goods_price`, 
                                     `sku_distinct_count`,
                                     `order_count`,
                                     `avg_order_pay`,
                                     `joint_rate`,
                                     `buy_user_count`,
                                     `per_user_pay`,
                                     `new_user_count`,
                                     `new_user_rate`,
                                     `old_user_count`,
                                     `old_user_rate`,
                                     `userless_order_rate`,
                                     `userless_order_count`,
                                     `calculate_begin_date`,
                                     `calculate_end_date`
                                     )
                                     VALUES
                                     (32, '江苏（南京新街口店）', 10704.78999999984, 10704.78999999984, 0.40711681635320274, 4358.100024529536, 2276.0, null, 26447.0, 16.489182617370158, 4.7033347978909665, 229,
                                      539,   41.069255, 4.222634508348794, 545, 19.641817, 2, 0.020682330059721237, 2, 0.9793176699402788, 1.0037106, 541,
                                     '2021-05-11', '2021-05-11');


[2021-06-15 14:18:51,773][ERROR][zmaxx-etl.db-client] Duplicate entry '2021-05-11-2021-05-11-32' for key 'idx_cd'
[2021-06-15 14:18:51,774][INFO][zmaxx-etl.db-client] 
 INSERT INTO `rb_sale` (             `store_key`,
				     `store_name`, 
                                     `payment`,
                                     `payment_per_day`,
                                     `gross_rate`, 
                                     `gross`,
                                     `sale_qty`,
                                     `purchase_qty`,
                                     `kcsl`,
                                     `stock_turnover_days`, 
                                     `unit_goods_price`, 
                                     `sku_distinct_count`,
                                     `order_count`,
                                     `avg_order_pay`,
                                     `joint_rate`,
                                     `buy_user_count`,
                                     `per_user_pay`,
                                     `new_user_count`,
                                     `new_user_rate`,
                                     `old_user_count`,
                                     `old_user_rate`,
                                     `userless_order_rate`,
                                     `userless_order_count`,
                                     `calculate_begin_date`,
                                     `calculate_end_date`
                                     )
                                     VALUES
                                     (4, '上海（七宝凯德店）', 42248.16000000086, 42248.16000000086, 0.5241752525775476, 22145.439938937096, 4752.0, 4074900.0, 26829.0, 35.09658570618759, 8.890606060606242, 160,
                                      97,   42.244255, 48.98969072164948, 98, 431.10367, 1, 0.005593142991315958, 4, 0.994406857008684, 0.9587629, 93,
                                     '2021-05-11', '2021-05-11');


[2021-06-15 14:18:51,777][ERROR][zmaxx-etl.db-client] Duplicate entry '2021-05-11-2021-05-11-4' for key 'idx_cd'
[2021-06-15 14:18:51,778][INFO][zmaxx-etl.db-client] 
 INSERT INTO `rb_sale` (             `store_key`,
				     `store_name`, 
                                     `payment`,
                                     `payment_per_day`,
                                     `gross_rate`, 
                                     `gross`,
                                     `sale_qty`,
                                     `purchase_qty`,
                                     `kcsl`,
                                     `stock_turnover_days`, 
                                     `unit_goods_price`, 
                                     `sku_distinct_count`,
                                     `order_count`,
                                     `avg_order_pay`,
                                     `joint_rate`,
                                     `buy_user_count`,
                                     `per_user_pay`,
                                     `new_user_count`,
                                     `new_user_rate`,
                                     `old_user_count`,
                                     `old_user_rate`,
                                     `userless_order_rate`,
                                     `userless_order_count`,
                                     `calculate_begin_date`,
                                     `calculate_end_date`
                                     )
                                     VALUES
                                     (5, '上海（宝山新业坊店）', 5783.259999999997, 5783.259999999997, 0.4434142665217308, 2564.3799910044636, 1176.0, 1464900.0, 11293.0, 33.01081555100848, 4.917738095238092, 48,
                                      25,   26.822807, 47.04, 26, 222.43307, 1, 0.006674436217635041, 4, 0.9933255637823649, 0.84, 21,
                                     '2021-05-11', '2021-05-11');


[2021-06-15 14:18:51,781][ERROR][zmaxx-etl.db-client] Duplicate entry '2021-05-11-2021-05-11-5' for key 'idx_cd'
[2021-06-15 14:18:51,781][INFO][zmaxx-etl.db-client] 
 INSERT INTO `rb_sale` (             `store_key`,
				     `store_name`, 
                                     `payment`,
                                     `payment_per_day`,
                                     `gross_rate`, 
                                     `gross`,
                                     `sale_qty`,
                                     `purchase_qty`,
                                     `kcsl`,
                                     `stock_turnover_days`, 
                                     `unit_goods_price`, 
                                     `sku_distinct_count`,
                                     `order_count`,
                                     `avg_order_pay`,
                                     `joint_rate`,
                                     `buy_user_count`,
                                     `per_user_pay`,
                                     `new_user_count`,
                                     `new_user_rate`,
                                     `old_user_count`,
                                     `old_user_rate`,
                                     `userless_order_rate`,
                                     `userless_order_count`,
                                     `calculate_begin_date`,
                                     `calculate_end_date`
                                     )
                                     VALUES
                                     (6, '上海（桃浦新邻天地店）', 22848.599999999708, 22848.599999999708, 0.3830694211165453, 8752.599975323385, 3560.0, 3691298.0, 27843.0, 58.62507018528916, 6.418146067415648, 85,
                                      52,   36.873134, 68.46153846153847, 53, 431.10565, 0, 0.0, 4, 1.0, 0.9423077, 49,
                                     '2021-05-11', '2021-05-11');


[2021-06-15 14:18:51,785][ERROR][zmaxx-etl.db-client] Duplicate entry '2021-05-11-2021-05-11-6' for key 'idx_cd'
[2021-06-15 14:19:32,930][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                           sum(orderI.sku_pay) as payment , 
                           (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                           (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           AVG(zorder.order_pay) as avg_order_pay,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(orderI.sku_id)) as sku_distinct_count,
                           count(distinct(zorder.customer_key)) as user_count
                   from order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
		   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 23:59:59'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-15 14:19:33,926][INFO][zmaxx-etl.db-client] 
    select market,sum(kcsl)  as kcsl from rd_product_stock where kcsl > 0 group by market 


[2021-06-15 14:19:34,117][INFO][zmaxx-etl.db-client] 
select  store_key, sum(CAST(sku_qty AS DECIMAL(12,2)) ) as sale_qty_30  from order_item where order_create > DATE_SUB('2021-05-11',INTERVAL 30 DAY)  group by store_key
[2021-06-15 14:19:34,480][INFO][zmaxx-etl.db-client] 
select store_key,count(order_id) as user_null_count from zmaxx_001.order 
where customer_key = 0  and order_create >=  '2021-05-11 00:00:00'  and   order_create  <= '2021-05-11 23:59:59'
group by store_key;


[2021-06-15 14:19:34,492][INFO][zmaxx-etl.db-client] 
select store_key,COUNT(DISTINCT(customer_key)) as new_u,sum(order_pay) as new_u_pay from zmaxx_001.order 
where  customer_key not in
(
select distinct(customer_key) as old_key from zmaxx_001.order   where      order_create  <= '2021-05-11 00:00:00'
)
and order_create >=  '2021-05-11 00:00:00'  and   order_create  <= '2021-05-11 23:59:59'
group by store_key 


[2021-06-15 14:19:34,930][INFO][zmaxx-etl.db-client] 
select store_key,COUNT(DISTINCT(customer_key)) as old_u,sum(order_pay) as old_u_pay from zmaxx_001.order 
where  customer_key   in
(
select distinct(customer_key) as old_key from zmaxx_001.order   where      order_create  <= '2021-05-11 00:00:00'
)
and order_create >=  '2021-05-11 00:00:00'  and   order_create  <= '2021-05-11 23:59:59'
group by store_key 

[2021-06-15 14:19:35,369][INFO][zmaxx-etl.sale] in...insert.....
[2021-06-15 14:19:35,371][INFO][zmaxx-etl.sale] 15
[2021-06-15 14:19:35,371][INFO][zmaxx-etl.db-client] 
 INSERT INTO `rb_sale` (             `store_key`,
				     `store_name`, 
                                     `payment`,
                                     `payment_per_day`,
                                     `gross_rate`, 
                                     `gross`,
                                     `sale_qty`,
                                     `purchase_qty`,
                                     `kcsl`,
                                     `stock_turnover_days`, 
                                     `unit_goods_price`, 
                                     `sku_distinct_count`,
                                     `order_count`,
                                     `avg_order_pay`,
                                     `joint_rate`,
                                     `buy_user_count`,
                                     `per_user_pay`,
                                     `new_user_count`,
                                     `new_user_rate`,
                                     `old_user_count`,
                                     `old_user_rate`,
                                     `userless_order_rate`,
                                     `userless_order_count`,
                                     `calculate_begin_date`,
                                     `calculate_end_date`
                                     )
                                     VALUES
                                     (10, '上海（诺亚新天地店）', 13247.779999999868, 13247.779999999868, 0.44018092272691195, 5831.420024483072, 2716.0, 3062256.0, 25619.0, 48.050640825257894, 4.8776804123710855, 97,
                                      56,   32.429771, 48.5, 15, 883.18536, 5, 0.01507422375673524, 10, 0.9849257762432647, 0.0, 0,
                                     '2021-05-11', '2021-05-11');


[2021-06-15 14:19:35,375][INFO][zmaxx-etl.db-client] 
 INSERT INTO `rb_sale` (             `store_key`,
				     `store_name`, 
                                     `payment`,
                                     `payment_per_day`,
                                     `gross_rate`, 
                                     `gross`,
                                     `sale_qty`,
                                     `purchase_qty`,
                                     `kcsl`,
                                     `stock_turnover_days`, 
                                     `unit_goods_price`, 
                                     `sku_distinct_count`,
                                     `order_count`,
                                     `avg_order_pay`,
                                     `joint_rate`,
                                     `buy_user_count`,
                                     `per_user_pay`,
                                     `new_user_count`,
                                     `new_user_rate`,
                                     `old_user_count`,
                                     `old_user_rate`,
                                     `userless_order_rate`,
                                     `userless_order_count`,
                                     `calculate_begin_date`,
                                     `calculate_end_date`
                                     )
                                     VALUES
                                     (11, '浙江（杭州工联大厦店）', 50139.050000002535, 50139.050000002535, 0.437419136256846, 21931.779943739923, 8762.0, 1.772182E7, 31726.0, 24.33348673109373, 5.722329376854889, 151,
                                      165,   40.974043, 53.1030303030303, 101, 496.42624, 64, 0.04573481148924609, 37, 0.9542651885107539, 0.0, 0,
                                     '2021-05-11', '2021-05-11');


[2021-06-15 14:19:35,379][INFO][zmaxx-etl.db-client] 
 INSERT INTO `rb_sale` (             `store_key`,
				     `store_name`, 
                                     `payment`,
                                     `payment_per_day`,
                                     `gross_rate`, 
                                     `gross`,
                                     `sale_qty`,
                                     `purchase_qty`,
                                     `kcsl`,
                                     `stock_turnover_days`, 
                                     `unit_goods_price`, 
                                     `sku_distinct_count`,
                                     `order_count`,
                                     `avg_order_pay`,
                                     `joint_rate`,
                                     `buy_user_count`,
                                     `per_user_pay`,
                                     `new_user_count`,
                                     `new_user_rate`,
                                     `old_user_count`,
                                     `old_user_rate`,
                                     `userless_order_rate`,
                                     `userless_order_count`,
                                     `calculate_begin_date`,
                                     `calculate_end_date`
                                     )
                                     VALUES
                                     (12, '浙江（杭州古墩印象城店）', 12090.419999999975, 12090.419999999975, 0.5345571105892061, 6463.019981009935, 960.0, 424128.0, 26201.0, 116.84703433922998, 12.594187499999974, 76,
                                      39,   58.928125, 24.615384615384617, 39, 310.01077, 3, 0.02925456683886918, 2, 0.9707454331611308, 0.8717949, 34,
                                     '2021-05-11', '2021-05-11');


[2021-06-15 14:19:35,383][INFO][zmaxx-etl.db-client] 
 INSERT INTO `rb_sale` (             `store_key`,
				     `store_name`, 
                                     `payment`,
                                     `payment_per_day`,
                                     `gross_rate`, 
                                     `gross`,
                                     `sale_qty`,
                                     `purchase_qty`,
                                     `kcsl`,
                                     `stock_turnover_days`, 
                                     `unit_goods_price`, 
                                     `sku_distinct_count`,
                                     `order_count`,
                                     `avg_order_pay`,
                                     `joint_rate`,
                                     `buy_user_count`,
                                     `per_user_pay`,
                                     `new_user_count`,
                                     `new_user_rate`,
                                     `old_user_count`,
                                     `old_user_rate`,
                                     `userless_order_rate`,
                                     `userless_order_count`,
                                     `calculate_begin_date`,
                                     `calculate_end_date`
                                     )
                                     VALUES
                                     (13, '浙江（杭州绿地店）', 7300.600000000012, 7300.600000000012, 0.4593047150761405, 3353.200002884877, 1060.0, 890014.0, 28707.0, 106.17802983602515, 6.887358490566049, 64,
                                      27,   36.54557, 39.25925925925926, 20, 365.03, 3, 0.026011560693641574, 5, 0.9739884393063585, 0.44444445, 12,
                                     '2021-05-11', '2021-05-11');


[2021-06-15 14:19:35,386][INFO][zmaxx-etl.db-client] 
 INSERT INTO `rb_sale` (             `store_key`,
				     `store_name`, 
                                     `payment`,
                                     `payment_per_day`,
                                     `gross_rate`, 
                                     `gross`,
                                     `sale_qty`,
                                     `purchase_qty`,
                                     `kcsl`,
                                     `stock_turnover_days`, 
                                     `unit_goods_price`, 
                                     `sku_distinct_count`,
                                     `order_count`,
                                     `avg_order_pay`,
                                     `joint_rate`,
                                     `buy_user_count`,
                                     `per_user_pay`,
                                     `new_user_count`,
                                     `new_user_rate`,
                                     `old_user_count`,
                                     `old_user_rate`,
                                     `userless_order_rate`,
                                     `userless_order_count`,
                                     `calculate_begin_date`,
                                     `calculate_end_date`
                                     )
                                     VALUES
                                     (14, '浙江（杭州in77店）', 31096.00000000037, 31096.00000000037, 0.42854097007734004, 13325.910005525126, 5798.0, 7816402.0, 28819.0, 24.919870871043983, 5.363228699551634, 140,
                                      104,   47.32346, 55.75, 105, 296.15237, 0, 0.0, 8, 1.0, 0.9326923, 97,
                                     '2021-05-11', '2021-05-11');


[2021-06-15 14:19:35,389][INFO][zmaxx-etl.db-client] 
 INSERT INTO `rb_sale` (             `store_key`,
				     `store_name`, 
                                     `payment`,
                                     `payment_per_day`,
                                     `gross_rate`, 
                                     `gross`,
                                     `sale_qty`,
                                     `purchase_qty`,
                                     `kcsl`,
                                     `stock_turnover_days`, 
                                     `unit_goods_price`, 
                                     `sku_distinct_count`,
                                     `order_count`,
                                     `avg_order_pay`,
                                     `joint_rate`,
                                     `buy_user_count`,
                                     `per_user_pay`,
                                     `new_user_count`,
                                     `new_user_rate`,
                                     `old_user_count`,
                                     `old_user_rate`,
                                     `userless_order_rate`,
                                     `userless_order_count`,
                                     `calculate_begin_date`,
                                     `calculate_end_date`
                                     )
                                     VALUES
                                     (17, '江苏（泰州姜堰店）', 767.5999999999999, 767.5999999999999, -0.7360604486470426, -565.0000003814698, 12.0, 1248.0, 4433.0, 361.3858695652174, 63.96666666666666, 6,
                                      5,   88.783331, 2.4, 5, 153.52, 0, 0.0, 3, 1.0, 0.4, 2,
                                     '2021-05-11', '2021-05-11');


[2021-06-15 14:19:35,392][INFO][zmaxx-etl.db-client] 
 INSERT INTO `rb_sale` (             `store_key`,
				     `store_name`, 
                                     `payment`,
                                     `payment_per_day`,
                                     `gross_rate`, 
                                     `gross`,
                                     `sale_qty`,
                                     `purchase_qty`,
                                     `kcsl`,
                                     `stock_turnover_days`, 
                                     `unit_goods_price`, 
                                     `sku_distinct_count`,
                                     `order_count`,
                                     `avg_order_pay`,
                                     `joint_rate`,
                                     `buy_user_count`,
                                     `per_user_pay`,
                                     `new_user_count`,
                                     `new_user_rate`,
                                     `old_user_count`,
                                     `old_user_rate`,
                                     `userless_order_rate`,
                                     `userless_order_count`,
                                     `calculate_begin_date`,
                                     `calculate_end_date`
                                     )
                                     VALUES
                                     (18, '浙江（慈溪保利店）', 10400.999999999995, 10400.999999999995, 0.3164464897197569, 3291.35993957519, 96.0, 50624.0, 7712.0, 126.63382594417078, 108.34374999999994, 16,
                                      10,   226.800005, 9.6, 11, 945.5455, 0, 0.0, 1, 1.0, 1.0, 10,
                                     '2021-05-11', '2021-05-11');


[2021-06-15 14:19:35,395][INFO][zmaxx-etl.db-client] 
 INSERT INTO `rb_sale` (             `store_key`,
				     `store_name`, 
                                     `payment`,
                                     `payment_per_day`,
                                     `gross_rate`, 
                                     `gross`,
                                     `sale_qty`,
                                     `purchase_qty`,
                                     `kcsl`,
                                     `stock_turnover_days`, 
                                     `unit_goods_price`, 
                                     `sku_distinct_count`,
                                     `order_count`,
                                     `avg_order_pay`,
                                     `joint_rate`,
                                     `buy_user_count`,
                                     `per_user_pay`,
                                     `new_user_count`,
                                     `new_user_rate`,
                                     `old_user_count`,
                                     `old_user_rate`,
                                     `userless_order_rate`,
                                     `userless_order_count`,
                                     `calculate_begin_date`,
                                     `calculate_end_date`
                                     )
                                     VALUES
                                     (19, '安徽（蚌埠金鹏广场店）', 10081.59999999999, 10081.59999999999, -0.28727583104969057, -2896.2000183105574, 108.0, 7738.0, 5728.0, 91.9914346895075, 93.34814814814806, 51,
                                      20,   276.009432, 5.4, 21, 480.0762, 5, 0.2359843675607049, 11, 0.764015632439295, 0.25, 5,
                                     '2021-05-11', '2021-05-11');


[2021-06-15 14:19:35,398][INFO][zmaxx-etl.db-client] 
 INSERT INTO `rb_sale` (             `store_key`,
				     `store_name`, 
                                     `payment`,
                                     `payment_per_day`,
                                     `gross_rate`, 
                                     `gross`,
                                     `sale_qty`,
                                     `purchase_qty`,
                                     `kcsl`,
                                     `stock_turnover_days`, 
                                     `unit_goods_price`, 
                                     `sku_distinct_count`,
                                     `order_count`,
                                     `avg_order_pay`,
                                     `joint_rate`,
                                     `buy_user_count`,
                                     `per_user_pay`,
                                     `new_user_count`,
                                     `new_user_rate`,
                                     `old_user_count`,
                                     `old_user_rate`,
                                     `userless_order_rate`,
                                     `userless_order_count`,
                                     `calculate_begin_date`,
                                     `calculate_end_date`
                                     )
                                     VALUES
                                     (21, '江苏（淮安玖珑汇店）', 4059.250000000003, 4059.250000000003, 0.17231015224589594, 699.4499855041536, 55.0, 17424.0, 7697.0, 172.32089552238807, 73.80454545454552, 10,
                                      8,   120.345454, 6.875, 9, 451.02777, 0, 0.0, 1, 1.0, 1.0, 8,
                                     '2021-05-11', '2021-05-11');


[2021-06-15 14:19:35,400][INFO][zmaxx-etl.db-client] 
 INSERT INTO `rb_sale` (             `store_key`,
				     `store_name`, 
                                     `payment`,
                                     `payment_per_day`,
                                     `gross_rate`, 
                                     `gross`,
                                     `sale_qty`,
                                     `purchase_qty`,
                                     `kcsl`,
                                     `stock_turnover_days`, 
                                     `unit_goods_price`, 
                                     `sku_distinct_count`,
                                     `order_count`,
                                     `avg_order_pay`,
                                     `joint_rate`,
                                     `buy_user_count`,
                                     `per_user_pay`,
                                     `new_user_count`,
                                     `new_user_rate`,
                                     `old_user_count`,
                                     `old_user_rate`,
                                     `userless_order_rate`,
                                     `userless_order_count`,
                                     `calculate_begin_date`,
                                     `calculate_end_date`
                                     )
                                     VALUES
                                     (26, '上海（北上海广场店）', 66301.64000000058, 66301.64000000058, 0.29260995467604467, 19400.5198753476, 2128.0, 1067230.0, 26236.0, 80.759285860866, 31.156785714285988, 82,
                                      38,   103.610528, 56.0, 1, 66301.64, 0, 0.0, 1, 1.0, 0.0, 0,
                                     '2021-05-11', '2021-05-11');


[2021-06-15 14:19:35,403][INFO][zmaxx-etl.db-client] 
 INSERT INTO `rb_sale` (             `store_key`,
				     `store_name`, 
                                     `payment`,
                                     `payment_per_day`,
                                     `gross_rate`, 
                                     `gross`,
                                     `sale_qty`,
                                     `purchase_qty`,
                                     `kcsl`,
                                     `stock_turnover_days`, 
                                     `unit_goods_price`, 
                                     `sku_distinct_count`,
                                     `order_count`,
                                     `avg_order_pay`,
                                     `joint_rate`,
                                     `buy_user_count`,
                                     `per_user_pay`,
                                     `new_user_count`,
                                     `new_user_rate`,
                                     `old_user_count`,
                                     `old_user_rate`,
                                     `userless_order_rate`,
                                     `userless_order_count`,
                                     `calculate_begin_date`,
                                     `calculate_end_date`
                                     )
                                     VALUES
                                     (27, '浙江（杭州新天地店）', 13042.399999999834, 13042.399999999834, 0.4313347250673696, 5625.64001821859, 2720.0, 4073580.0, 27173.0, 67.56091496767777, 4.794999999999939, 70,
                                      33,   38.732075, 82.42424242424242, 1, 13042.4, 0, 0.0, 1, 1.0, 0.0, 0,
                                     '2021-05-11', '2021-05-11');


[2021-06-15 14:19:35,406][INFO][zmaxx-etl.db-client] 
 INSERT INTO `rb_sale` (             `store_key`,
				     `store_name`, 
                                     `payment`,
                                     `payment_per_day`,
                                     `gross_rate`, 
                                     `gross`,
                                     `sale_qty`,
                                     `purchase_qty`,
                                     `kcsl`,
                                     `stock_turnover_days`, 
                                     `unit_goods_price`, 
                                     `sku_distinct_count`,
                                     `order_count`,
                                     `avg_order_pay`,
                                     `joint_rate`,
                                     `buy_user_count`,
                                     `per_user_pay`,
                                     `new_user_count`,
                                     `new_user_rate`,
                                     `old_user_count`,
                                     `old_user_rate`,
                                     `userless_order_rate`,
                                     `userless_order_count`,
                                     `calculate_begin_date`,
                                     `calculate_end_date`
                                     )
                                     VALUES
                                     (32, '江苏（南京新街口店）', 10704.78999999984, 10704.78999999984, 0.40711681635320274, 4358.100024529536, 2276.0, null, 26447.0, 16.489182617370158, 4.7033347978909665, 229,
                                      539,   41.069255, 4.222634508348794, 545, 19.641817, 2, 0.020682330059721237, 2, 0.9793176699402788, 1.0037106, 541,
                                     '2021-05-11', '2021-05-11');


[2021-06-15 14:19:35,409][INFO][zmaxx-etl.db-client] 
 INSERT INTO `rb_sale` (             `store_key`,
				     `store_name`, 
                                     `payment`,
                                     `payment_per_day`,
                                     `gross_rate`, 
                                     `gross`,
                                     `sale_qty`,
                                     `purchase_qty`,
                                     `kcsl`,
                                     `stock_turnover_days`, 
                                     `unit_goods_price`, 
                                     `sku_distinct_count`,
                                     `order_count`,
                                     `avg_order_pay`,
                                     `joint_rate`,
                                     `buy_user_count`,
                                     `per_user_pay`,
                                     `new_user_count`,
                                     `new_user_rate`,
                                     `old_user_count`,
                                     `old_user_rate`,
                                     `userless_order_rate`,
                                     `userless_order_count`,
                                     `calculate_begin_date`,
                                     `calculate_end_date`
                                     )
                                     VALUES
                                     (4, '上海（七宝凯德店）', 42248.16000000086, 42248.16000000086, 0.5241752525775476, 22145.439938937096, 4752.0, 4074900.0, 26829.0, 35.09658570618759, 8.890606060606242, 160,
                                      97,   42.244255, 48.98969072164948, 98, 431.10367, 1, 0.005593142991315958, 4, 0.994406857008684, 0.9587629, 93,
                                     '2021-05-11', '2021-05-11');


[2021-06-15 14:19:35,412][INFO][zmaxx-etl.db-client] 
 INSERT INTO `rb_sale` (             `store_key`,
				     `store_name`, 
                                     `payment`,
                                     `payment_per_day`,
                                     `gross_rate`, 
                                     `gross`,
                                     `sale_qty`,
                                     `purchase_qty`,
                                     `kcsl`,
                                     `stock_turnover_days`, 
                                     `unit_goods_price`, 
                                     `sku_distinct_count`,
                                     `order_count`,
                                     `avg_order_pay`,
                                     `joint_rate`,
                                     `buy_user_count`,
                                     `per_user_pay`,
                                     `new_user_count`,
                                     `new_user_rate`,
                                     `old_user_count`,
                                     `old_user_rate`,
                                     `userless_order_rate`,
                                     `userless_order_count`,
                                     `calculate_begin_date`,
                                     `calculate_end_date`
                                     )
                                     VALUES
                                     (5, '上海（宝山新业坊店）', 5783.259999999997, 5783.259999999997, 0.4434142665217308, 2564.3799910044636, 1176.0, 1464900.0, 11293.0, 33.01081555100848, 4.917738095238092, 48,
                                      25,   26.822807, 47.04, 26, 222.43307, 1, 0.006674436217635041, 4, 0.9933255637823649, 0.84, 21,
                                     '2021-05-11', '2021-05-11');


[2021-06-15 14:19:35,415][INFO][zmaxx-etl.db-client] 
 INSERT INTO `rb_sale` (             `store_key`,
				     `store_name`, 
                                     `payment`,
                                     `payment_per_day`,
                                     `gross_rate`, 
                                     `gross`,
                                     `sale_qty`,
                                     `purchase_qty`,
                                     `kcsl`,
                                     `stock_turnover_days`, 
                                     `unit_goods_price`, 
                                     `sku_distinct_count`,
                                     `order_count`,
                                     `avg_order_pay`,
                                     `joint_rate`,
                                     `buy_user_count`,
                                     `per_user_pay`,
                                     `new_user_count`,
                                     `new_user_rate`,
                                     `old_user_count`,
                                     `old_user_rate`,
                                     `userless_order_rate`,
                                     `userless_order_count`,
                                     `calculate_begin_date`,
                                     `calculate_end_date`
                                     )
                                     VALUES
                                     (6, '上海（桃浦新邻天地店）', 22848.599999999708, 22848.599999999708, 0.3830694211165453, 8752.599975323385, 3560.0, 3691298.0, 27843.0, 58.62507018528916, 6.418146067415648, 85,
                                      52,   36.873134, 68.46153846153847, 53, 431.10565, 0, 0.0, 4, 1.0, 0.9423077, 49,
                                     '2021-05-11', '2021-05-11');


[2021-06-15 14:25:31,472][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                           sum(zorder.order_prioce) as payment , 
                           (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                           (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           AVG(zorder.order_pay) as avg_order_pay,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(orderI.sku_id)) as sku_distinct_count,
                           count(distinct(zorder.customer_key)) as user_count
                   from order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
		   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 23:59:59'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-15 14:25:31,486][ERROR][zmaxx-etl.db-client] Unknown column 'zorder.order_prioce' in 'field list'
[2021-06-15 14:25:47,049][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                           sum(zorder.order_price) as payment , 
                           (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                           (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           AVG(zorder.order_pay) as avg_order_pay,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(orderI.sku_id)) as sku_distinct_count,
                           count(distinct(zorder.customer_key)) as user_count
                   from order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
		   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 23:59:59'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-15 14:25:47,976][INFO][zmaxx-etl.db-client] 
    select market,sum(kcsl)  as kcsl from rd_product_stock where kcsl > 0 group by market 


[2021-06-15 14:25:48,115][INFO][zmaxx-etl.db-client] 
select  store_key, sum(CAST(sku_qty AS DECIMAL(12,2)) ) as sale_qty_30  from order_item where order_create > DATE_SUB('2021-05-11',INTERVAL 30 DAY)  group by store_key
[2021-06-15 14:25:48,474][INFO][zmaxx-etl.db-client] 
select store_key,count(order_id) as user_null_count from zmaxx_001.order 
where customer_key = 0  and order_create >=  '2021-05-11 00:00:00'  and   order_create  <= '2021-05-11 23:59:59'
group by store_key;


[2021-06-15 14:25:48,481][INFO][zmaxx-etl.db-client] 
select store_key,COUNT(DISTINCT(customer_key)) as new_u,sum(order_pay) as new_u_pay from zmaxx_001.order 
where  customer_key not in
(
select distinct(customer_key) as old_key from zmaxx_001.order   where      order_create  <= '2021-05-11 00:00:00'
)
and order_create >=  '2021-05-11 00:00:00'  and   order_create  <= '2021-05-11 23:59:59'
group by store_key 


[2021-06-15 14:25:48,952][INFO][zmaxx-etl.db-client] 
select store_key,COUNT(DISTINCT(customer_key)) as old_u,sum(order_pay) as old_u_pay from zmaxx_001.order 
where  customer_key   in
(
select distinct(customer_key) as old_key from zmaxx_001.order   where      order_create  <= '2021-05-11 00:00:00'
)
and order_create >=  '2021-05-11 00:00:00'  and   order_create  <= '2021-05-11 23:59:59'
group by store_key 

[2021-06-15 14:25:49,368][INFO][zmaxx-etl.sale] in...insert.....
[2021-06-15 14:25:49,371][INFO][zmaxx-etl.sale] 15
[2021-06-15 14:25:49,372][INFO][zmaxx-etl.db-client] 
 INSERT INTO `rb_sale` (             `store_key`,
				     `store_name`, 
                                     `payment`,
                                     `payment_per_day`,
                                     `gross_rate`, 
                                     `gross`,
                                     `sale_qty`,
                                     `purchase_qty`,
                                     `kcsl`,
                                     `stock_turnover_days`, 
                                     `unit_goods_price`, 
                                     `sku_distinct_count`,
                                     `order_count`,
                                     `avg_order_pay`,
                                     `joint_rate`,
                                     `buy_user_count`,
                                     `per_user_pay`,
                                     `new_user_count`,
                                     `new_user_rate`,
                                     `old_user_count`,
                                     `old_user_rate`,
                                     `userless_order_rate`,
                                     `userless_order_count`,
                                     `calculate_begin_date`,
                                     `calculate_end_date`
                                     )
                                     VALUES
                                     (10, '上海（诺亚新天地店）', 66123.54, 66123.54, 0.44018092272691195, 5831.420024483072, 2716.0, 3062256.0, 25619.0, 48.050640825257894, 4.8776804123710855, 97,
                                      56,   32.429771, 48.5, 15, 4408.236, 5, 0.0030201044892635815, 10, 0.9969798955107364, 0.0, 0,
                                     '2021-05-11', '2021-05-11');


[2021-06-15 14:25:49,378][INFO][zmaxx-etl.db-client] 
 INSERT INTO `rb_sale` (             `store_key`,
				     `store_name`, 
                                     `payment`,
                                     `payment_per_day`,
                                     `gross_rate`, 
                                     `gross`,
                                     `sale_qty`,
                                     `purchase_qty`,
                                     `kcsl`,
                                     `stock_turnover_days`, 
                                     `unit_goods_price`, 
                                     `sku_distinct_count`,
                                     `order_count`,
                                     `avg_order_pay`,
                                     `joint_rate`,
                                     `buy_user_count`,
                                     `per_user_pay`,
                                     `new_user_count`,
                                     `new_user_rate`,
                                     `old_user_count`,
                                     `old_user_rate`,
                                     `userless_order_rate`,
                                     `userless_order_count`,
                                     `calculate_begin_date`,
                                     `calculate_end_date`
                                     )
                                     VALUES
                                     (11, '浙江（杭州工联大厦店）', 249129.01, 249129.01, 0.437419136256846, 21931.779943739923, 8762.0, 1.772182E7, 31726.0, 24.33348673109373, 5.722329376854889, 151,
                                      165,   40.974043, 53.1030303030303, 101, 2466.6238, 64, 0.009204467998327453, 37, 0.9907955320016726, 0.0, 0,
                                     '2021-05-11', '2021-05-11');


[2021-06-15 14:25:49,381][INFO][zmaxx-etl.db-client] 
 INSERT INTO `rb_sale` (             `store_key`,
				     `store_name`, 
                                     `payment`,
                                     `payment_per_day`,
                                     `gross_rate`, 
                                     `gross`,
                                     `sale_qty`,
                                     `purchase_qty`,
                                     `kcsl`,
                                     `stock_turnover_days`, 
                                     `unit_goods_price`, 
                                     `sku_distinct_count`,
                                     `order_count`,
                                     `avg_order_pay`,
                                     `joint_rate`,
                                     `buy_user_count`,
                                     `per_user_pay`,
                                     `new_user_count`,
                                     `new_user_rate`,
                                     `old_user_count`,
                                     `old_user_rate`,
                                     `userless_order_rate`,
                                     `userless_order_count`,
                                     `calculate_begin_date`,
                                     `calculate_end_date`
                                     )
                                     VALUES
                                     (12, '浙江（杭州古墩印象城店）', 37070.94, 37070.94, 0.5345571105892061, 6463.019981009935, 960.0, 424128.0, 26201.0, 116.84703433922998, 12.594187499999974, 76,
                                      39,   58.928125, 24.615384615384617, 39, 950.5369, 3, 0.009541166207277182, 2, 0.9904588337927228, 0.8717949, 34,
                                     '2021-05-11', '2021-05-11');


[2021-06-15 14:25:49,384][INFO][zmaxx-etl.db-client] 
 INSERT INTO `rb_sale` (             `store_key`,
				     `store_name`, 
                                     `payment`,
                                     `payment_per_day`,
                                     `gross_rate`, 
                                     `gross`,
                                     `sale_qty`,
                                     `purchase_qty`,
                                     `kcsl`,
                                     `stock_turnover_days`, 
                                     `unit_goods_price`, 
                                     `sku_distinct_count`,
                                     `order_count`,
                                     `avg_order_pay`,
                                     `joint_rate`,
                                     `buy_user_count`,
                                     `per_user_pay`,
                                     `new_user_count`,
                                     `new_user_rate`,
                                     `old_user_count`,
                                     `old_user_rate`,
                                     `userless_order_rate`,
                                     `userless_order_count`,
                                     `calculate_begin_date`,
                                     `calculate_end_date`
                                     )
                                     VALUES
                                     (13, '浙江（杭州绿地店）', 28891.7, 28891.7, 0.4593047150761405, 3353.200002884877, 1060.0, 890014.0, 28707.0, 106.17802983602515, 6.887358490566049, 64,
                                      27,   36.54557, 39.25925925925926, 20, 1444.585, 3, 0.006572821952325408, 5, 0.9934271780476746, 0.44444445, 12,
                                     '2021-05-11', '2021-05-11');


[2021-06-15 14:25:49,388][INFO][zmaxx-etl.db-client] 
 INSERT INTO `rb_sale` (             `store_key`,
				     `store_name`, 
                                     `payment`,
                                     `payment_per_day`,
                                     `gross_rate`, 
                                     `gross`,
                                     `sale_qty`,
                                     `purchase_qty`,
                                     `kcsl`,
                                     `stock_turnover_days`, 
                                     `unit_goods_price`, 
                                     `sku_distinct_count`,
                                     `order_count`,
                                     `avg_order_pay`,
                                     `joint_rate`,
                                     `buy_user_count`,
                                     `per_user_pay`,
                                     `new_user_count`,
                                     `new_user_rate`,
                                     `old_user_count`,
                                     `old_user_rate`,
                                     `userless_order_rate`,
                                     `userless_order_count`,
                                     `calculate_begin_date`,
                                     `calculate_end_date`
                                     )
                                     VALUES
                                     (14, '浙江（杭州in77店）', 209841.19, 209841.19, 0.42854097007734004, 13325.910005525126, 5798.0, 7816402.0, 28819.0, 24.919870871043983, 5.363228699551634, 140,
                                      104,   47.32346, 55.75, 105, 1998.4875, 0, 0.0, 8, 1.0, 0.9326923, 97,
                                     '2021-05-11', '2021-05-11');


[2021-06-15 14:25:49,390][INFO][zmaxx-etl.db-client] 
 INSERT INTO `rb_sale` (             `store_key`,
				     `store_name`, 
                                     `payment`,
                                     `payment_per_day`,
                                     `gross_rate`, 
                                     `gross`,
                                     `sale_qty`,
                                     `purchase_qty`,
                                     `kcsl`,
                                     `stock_turnover_days`, 
                                     `unit_goods_price`, 
                                     `sku_distinct_count`,
                                     `order_count`,
                                     `avg_order_pay`,
                                     `joint_rate`,
                                     `buy_user_count`,
                                     `per_user_pay`,
                                     `new_user_count`,
                                     `new_user_rate`,
                                     `old_user_count`,
                                     `old_user_rate`,
                                     `userless_order_rate`,
                                     `userless_order_count`,
                                     `calculate_begin_date`,
                                     `calculate_end_date`
                                     )
                                     VALUES
                                     (17, '江苏（泰州姜堰店）', 1265.4, 1265.4, -0.7360604486470426, -565.0000003814698, 12.0, 1248.0, 4433.0, 361.3858695652174, 63.96666666666666, 6,
                                      5,   88.783331, 2.4, 5, 253.08, 0, 0.0, 3, 1.0, 0.4, 2,
                                     '2021-05-11', '2021-05-11');


[2021-06-15 14:25:49,395][INFO][zmaxx-etl.db-client] 
 INSERT INTO `rb_sale` (             `store_key`,
				     `store_name`, 
                                     `payment`,
                                     `payment_per_day`,
                                     `gross_rate`, 
                                     `gross`,
                                     `sale_qty`,
                                     `purchase_qty`,
                                     `kcsl`,
                                     `stock_turnover_days`, 
                                     `unit_goods_price`, 
                                     `sku_distinct_count`,
                                     `order_count`,
                                     `avg_order_pay`,
                                     `joint_rate`,
                                     `buy_user_count`,
                                     `per_user_pay`,
                                     `new_user_count`,
                                     `new_user_rate`,
                                     `old_user_count`,
                                     `old_user_rate`,
                                     `userless_order_rate`,
                                     `userless_order_count`,
                                     `calculate_begin_date`,
                                     `calculate_end_date`
                                     )
                                     VALUES
                                     (18, '浙江（慈溪保利店）', 23549.4, 23549.4, 0.3164464897197569, 3291.35993957519, 96.0, 50624.0, 7712.0, 126.63382594417078, 108.34374999999994, 16,
                                      10,   226.800005, 9.6, 11, 2140.8545, 0, 0.0, 1, 1.0, 1.0, 10,
                                     '2021-05-11', '2021-05-11');


[2021-06-15 14:25:49,413][INFO][zmaxx-etl.db-client] 
 INSERT INTO `rb_sale` (             `store_key`,
				     `store_name`, 
                                     `payment`,
                                     `payment_per_day`,
                                     `gross_rate`, 
                                     `gross`,
                                     `sale_qty`,
                                     `purchase_qty`,
                                     `kcsl`,
                                     `stock_turnover_days`, 
                                     `unit_goods_price`, 
                                     `sku_distinct_count`,
                                     `order_count`,
                                     `avg_order_pay`,
                                     `joint_rate`,
                                     `buy_user_count`,
                                     `per_user_pay`,
                                     `new_user_count`,
                                     `new_user_rate`,
                                     `old_user_count`,
                                     `old_user_rate`,
                                     `userless_order_rate`,
                                     `userless_order_count`,
                                     `calculate_begin_date`,
                                     `calculate_end_date`
                                     )
                                     VALUES
                                     (19, '安徽（蚌埠金鹏广场店）', 38908.4, 38908.4, -0.28727583104969057, -2896.2000183105574, 108.0, 7738.0, 5728.0, 91.9914346895075, 93.34814814814806, 51,
                                      20,   276.009432, 5.4, 21, 1852.781, 5, 0.06114617923121999, 11, 0.93885382076878, 0.25, 5,
                                     '2021-05-11', '2021-05-11');


[2021-06-15 14:25:49,426][INFO][zmaxx-etl.db-client] 
 INSERT INTO `rb_sale` (             `store_key`,
				     `store_name`, 
                                     `payment`,
                                     `payment_per_day`,
                                     `gross_rate`, 
                                     `gross`,
                                     `sale_qty`,
                                     `purchase_qty`,
                                     `kcsl`,
                                     `stock_turnover_days`, 
                                     `unit_goods_price`, 
                                     `sku_distinct_count`,
                                     `order_count`,
                                     `avg_order_pay`,
                                     `joint_rate`,
                                     `buy_user_count`,
                                     `per_user_pay`,
                                     `new_user_count`,
                                     `new_user_rate`,
                                     `old_user_count`,
                                     `old_user_rate`,
                                     `userless_order_rate`,
                                     `userless_order_count`,
                                     `calculate_begin_date`,
                                     `calculate_end_date`
                                     )
                                     VALUES
                                     (21, '江苏（淮安玖珑汇店）', 7431.0, 7431.0, 0.17231015224589594, 699.4499855041536, 55.0, 17424.0, 7697.0, 172.32089552238807, 73.80454545454552, 10,
                                      8,   120.345454, 6.875, 9, 825.6667, 0, 0.0, 1, 1.0, 1.0, 8,
                                     '2021-05-11', '2021-05-11');


[2021-06-15 14:25:49,430][INFO][zmaxx-etl.db-client] 
 INSERT INTO `rb_sale` (             `store_key`,
				     `store_name`, 
                                     `payment`,
                                     `payment_per_day`,
                                     `gross_rate`, 
                                     `gross`,
                                     `sale_qty`,
                                     `purchase_qty`,
                                     `kcsl`,
                                     `stock_turnover_days`, 
                                     `unit_goods_price`, 
                                     `sku_distinct_count`,
                                     `order_count`,
                                     `avg_order_pay`,
                                     `joint_rate`,
                                     `buy_user_count`,
                                     `per_user_pay`,
                                     `new_user_count`,
                                     `new_user_rate`,
                                     `old_user_count`,
                                     `old_user_rate`,
                                     `userless_order_rate`,
                                     `userless_order_count`,
                                     `calculate_begin_date`,
                                     `calculate_end_date`
                                     )
                                     VALUES
                                     (26, '上海（北上海广场店）', 200208.51, 200208.51, 0.29260995467604467, 19400.5198753476, 2128.0, 1067230.0, 26236.0, 80.759285860866, 31.156785714285988, 82,
                                      38,   103.610528, 56.0, 1, 200208.52, 0, 0.0, 1, 1.0, 0.0, 0,
                                     '2021-05-11', '2021-05-11');


[2021-06-15 14:25:49,433][INFO][zmaxx-etl.db-client] 
 INSERT INTO `rb_sale` (             `store_key`,
				     `store_name`, 
                                     `payment`,
                                     `payment_per_day`,
                                     `gross_rate`, 
                                     `gross`,
                                     `sale_qty`,
                                     `purchase_qty`,
                                     `kcsl`,
                                     `stock_turnover_days`, 
                                     `unit_goods_price`, 
                                     `sku_distinct_count`,
                                     `order_count`,
                                     `avg_order_pay`,
                                     `joint_rate`,
                                     `buy_user_count`,
                                     `per_user_pay`,
                                     `new_user_count`,
                                     `new_user_rate`,
                                     `old_user_count`,
                                     `old_user_rate`,
                                     `userless_order_rate`,
                                     `userless_order_count`,
                                     `calculate_begin_date`,
                                     `calculate_end_date`
                                     )
                                     VALUES
                                     (27, '浙江（杭州新天地店）', 72637.09, 72637.09, 0.4313347250673696, 5625.64001821859, 2720.0, 4073580.0, 27173.0, 67.56091496767777, 4.794999999999939, 70,
                                      33,   38.732075, 82.42424242424242, 1, 72637.09, 0, 0.0, 1, 1.0, 0.0, 0,
                                     '2021-05-11', '2021-05-11');


[2021-06-15 14:25:49,436][INFO][zmaxx-etl.db-client] 
 INSERT INTO `rb_sale` (             `store_key`,
				     `store_name`, 
                                     `payment`,
                                     `payment_per_day`,
                                     `gross_rate`, 
                                     `gross`,
                                     `sale_qty`,
                                     `purchase_qty`,
                                     `kcsl`,
                                     `stock_turnover_days`, 
                                     `unit_goods_price`, 
                                     `sku_distinct_count`,
                                     `order_count`,
                                     `avg_order_pay`,
                                     `joint_rate`,
                                     `buy_user_count`,
                                     `per_user_pay`,
                                     `new_user_count`,
                                     `new_user_rate`,
                                     `old_user_count`,
                                     `old_user_rate`,
                                     `userless_order_rate`,
                                     `userless_order_count`,
                                     `calculate_begin_date`,
                                     `calculate_end_date`
                                     )
                                     VALUES
                                     (32, '江苏（南京新街口店）', 64982.13, 64982.13, 0.40711681635320274, 4358.100024529536, 2276.0, null, 26447.0, 16.489182617370158, 4.7033347978909665, 229,
                                      539,   41.069255, 4.222634508348794, 545, 119.23327, 2, 0.0034070905339668002, 2, 0.9965929094660332, 1.0037106, 541,
                                     '2021-05-11', '2021-05-11');


[2021-06-15 14:25:49,438][INFO][zmaxx-etl.db-client] 
 INSERT INTO `rb_sale` (             `store_key`,
				     `store_name`, 
                                     `payment`,
                                     `payment_per_day`,
                                     `gross_rate`, 
                                     `gross`,
                                     `sale_qty`,
                                     `purchase_qty`,
                                     `kcsl`,
                                     `stock_turnover_days`, 
                                     `unit_goods_price`, 
                                     `sku_distinct_count`,
                                     `order_count`,
                                     `avg_order_pay`,
                                     `joint_rate`,
                                     `buy_user_count`,
                                     `per_user_pay`,
                                     `new_user_count`,
                                     `new_user_rate`,
                                     `old_user_count`,
                                     `old_user_rate`,
                                     `userless_order_rate`,
                                     `userless_order_count`,
                                     `calculate_begin_date`,
                                     `calculate_end_date`
                                     )
                                     VALUES
                                     (4, '上海（七宝凯德店）', 157218.4, 157218.4, 0.5241752525775476, 22145.439938937096, 4752.0, 4074900.0, 26829.0, 35.09658570618759, 8.890606060606242, 160,
                                      97,   42.244255, 48.98969072164948, 98, 1604.2694, 1, 0.001503004737358986, 4, 0.998496995262641, 0.9587629, 93,
                                     '2021-05-11', '2021-05-11');


[2021-06-15 14:25:49,441][INFO][zmaxx-etl.db-client] 
 INSERT INTO `rb_sale` (             `store_key`,
				     `store_name`, 
                                     `payment`,
                                     `payment_per_day`,
                                     `gross_rate`, 
                                     `gross`,
                                     `sale_qty`,
                                     `purchase_qty`,
                                     `kcsl`,
                                     `stock_turnover_days`, 
                                     `unit_goods_price`, 
                                     `sku_distinct_count`,
                                     `order_count`,
                                     `avg_order_pay`,
                                     `joint_rate`,
                                     `buy_user_count`,
                                     `per_user_pay`,
                                     `new_user_count`,
                                     `new_user_rate`,
                                     `old_user_count`,
                                     `old_user_rate`,
                                     `userless_order_rate`,
                                     `userless_order_count`,
                                     `calculate_begin_date`,
                                     `calculate_end_date`
                                     )
                                     VALUES
                                     (5, '上海（宝山新业坊店）', 21889.7, 21889.7, 0.4434142665217308, 2564.3799910044636, 1176.0, 1464900.0, 11293.0, 33.01081555100848, 4.917738095238092, 48,
                                      25,   26.822807, 47.04, 26, 841.91156, 1, 0.0017633864328885276, 4, 0.9982366135671115, 0.84, 21,
                                     '2021-05-11', '2021-05-11');


[2021-06-15 14:25:49,443][INFO][zmaxx-etl.db-client] 
 INSERT INTO `rb_sale` (             `store_key`,
				     `store_name`, 
                                     `payment`,
                                     `payment_per_day`,
                                     `gross_rate`, 
                                     `gross`,
                                     `sale_qty`,
                                     `purchase_qty`,
                                     `kcsl`,
                                     `stock_turnover_days`, 
                                     `unit_goods_price`, 
                                     `sku_distinct_count`,
                                     `order_count`,
                                     `avg_order_pay`,
                                     `joint_rate`,
                                     `buy_user_count`,
                                     `per_user_pay`,
                                     `new_user_count`,
                                     `new_user_rate`,
                                     `old_user_count`,
                                     `old_user_rate`,
                                     `userless_order_rate`,
                                     `userless_order_count`,
                                     `calculate_begin_date`,
                                     `calculate_end_date`
                                     )
                                     VALUES
                                     (6, '上海（桃浦新邻天地店）', 105865.0, 105865.0, 0.3830694211165453, 8752.599975323385, 3560.0, 3691298.0, 27843.0, 58.62507018528916, 6.418146067415648, 85,
                                      52,   36.873134, 68.46153846153847, 53, 1997.4529, 0, 0.0, 4, 1.0, 0.9423077, 49,
                                     '2021-05-11', '2021-05-11');


[2021-06-15 15:36:23,925][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                           sum(zorder.order_price) as payment , 
                           (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                           (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           AVG(zorder.order_pay) as avg_order_pay,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(orderI.sku_id)) as sku_distinct_count,
                           count(distinct(zorder.customer_key)) as user_count
                   from order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
		   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 23:00:00'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-15 15:38:15,105][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                           sum(zorder.order_price) as payment , 
                           (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                           (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           AVG(zorder.order_pay) as avg_order_pay,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(orderI.sku_id)) as sku_distinct_count,
                           count(distinct(zorder.customer_key)) as user_count
                   from order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
		   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 23:00:00'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-15 15:38:16,085][INFO][zmaxx-etl.db-client] 
select market,sum(lsjje) as payment_s ,sum(zzk) as zzk  ,sum(lsjje)-sum(zzk)  as payment
from rd_order  
where  billrq  >=  '2021-05-11 00:00:00' and billrq <=  '2021-05-11 23:00:00'
group by market;

[2021-06-15 15:42:15,932][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                           sum(zorder.order_price) as payment , 
                           (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                           (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           AVG(zorder.order_pay) as avg_order_pay,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(orderI.sku_id)) as sku_distinct_count,
                           count(distinct(zorder.customer_key)) as user_count
                   from order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
		   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 23:00:00'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-15 15:42:16,863][INFO][zmaxx-etl.db-client] 
select market,sum(lsjje) as payment_s ,sum(zzk) as zzk  ,sum(lsjje)-sum(zzk)  as payment
from rd_order  
where  billrq  >=  '2021-05-11 00:00:00' and billrq <=  '2021-05-11 23:00:00'
group by market;

[2021-06-15 15:42:37,889][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                           sum(zorder.order_price) as payment , 
                           (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                           (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           AVG(zorder.order_pay) as avg_order_pay,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(orderI.sku_id)) as sku_distinct_count,
                           count(distinct(zorder.customer_key)) as user_count
                   from order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
		   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 23:00:00'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-15 15:42:38,715][INFO][zmaxx-etl.db-client] 
select market as store_key,sum(lsjje) as payment_s ,sum(zzk) as zzk  ,sum(lsjje)-sum(zzk)  as payment
from rd_order  
where  billrq  >=  '2021-05-11 00:00:00' and billrq <=  '2021-05-11 23:00:00'
group by market;

[2021-06-15 15:45:49,243][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                          # sum(zorder.order_price) as payment , 
                          # (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                          # (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           #sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           #AVG(zorder.order_pay) as avg_order_pay,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(orderI.sku_id)) as sku_distinct_count,
                           count(distinct(zorder.customer_key)) as user_count
                   from order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
		   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 23:00:00'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-15 15:45:50,032][INFO][zmaxx-etl.db-client] 
select market as store_key,sum(lsjje) as payment_s ,sum(zzk) as zzk  ,sum(lsjje)-sum(zzk)  as payment
from rd_order  
where  billrq  >=  '2021-05-11 00:00:00' and billrq <=  '2021-05-11 23:00:00'
group by market;

[2021-06-15 15:53:48,597][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                          # sum(zorder.order_price) as payment , 
                          # (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                          # (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           #sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           #AVG(zorder.order_pay) as avg_order_pay,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(orderI.sku_id)) as sku_distinct_count,
                           count(distinct(zorder.customer_key)) as user_count
                   from order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
		   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 23:00:00'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-15 15:53:49,389][INFO][zmaxx-etl.db-client] 
select market as store_key,sum(lsjje) as payment_s ,sum(zzk) as zzk  ,sum(lsjje)-sum(zzk)  as payment
from rd_order  
where  billrq  >=  '2021-05-11 00:00:00' and billrq <=  '2021-05-11 23:00:00'
group by market;

[2021-06-15 15:53:49,692][INFO][zmaxx-etl.db-client] 
    select market,sum(kcsl)  as kcsl from rd_product_stock where kcsl > 0 group by market 


[2021-06-15 15:54:46,481][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                          # sum(zorder.order_price) as payment , 
                          # (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                          # (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           #sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           #AVG(zorder.order_pay) as avg_order_pay,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(orderI.sku_id)) as sku_distinct_count,
                           count(distinct(zorder.customer_key)) as user_count
                   from order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
		   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 23:00:00'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-15 15:54:47,266][INFO][zmaxx-etl.db-client] 
select market as store_key,sum(lsjje) as payment_s ,sum(zzk) as zzk  ,sum(lsjje)-sum(zzk)  as payment
from rd_order  
where  billrq  >=  '2021-05-11 00:00:00' and billrq <=  '2021-05-11 23:00:00'
group by market;

[2021-06-15 15:54:47,540][INFO][zmaxx-etl.db-client] 
    select market,sum(kcsl)  as kcsl from rd_product_stock where kcsl > 0 group by market 


[2021-06-15 15:56:34,186][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                          # sum(zorder.order_price) as payment , 
                          # (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                          # (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           #sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           #AVG(zorder.order_pay) as avg_order_pay,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(orderI.sku_id)) as sku_distinct_count,
                           count(distinct(zorder.customer_key)) as user_count
                   from order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
		   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 23:00:00'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-15 15:56:34,999][INFO][zmaxx-etl.db-client] 
select market as store_key,sum(lsjje) as payment_s ,sum(zzk) as zzk  ,sum(lsjje)-sum(zzk)  as payment
from rd_order  
where  billrq  >=  '2021-05-11 00:00:00' and billrq <=  '2021-05-11 23:00:00'
group by market;

[2021-06-15 15:56:35,275][INFO][zmaxx-etl.db-client] 
    select market,sum(kcsl)  as kcsl from rd_product_stock where kcsl > 0 group by market 


[2021-06-15 15:56:57,336][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                          # sum(zorder.order_price) as payment , 
                          # (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                          # (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           #sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           #AVG(zorder.order_pay) as avg_order_pay,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(orderI.sku_id)) as sku_distinct_count,
                           count(distinct(zorder.customer_key)) as user_count
                   from order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
		   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 23:00:00'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-15 15:56:58,083][INFO][zmaxx-etl.db-client] 
select market as store_key,sum(lsjje) as payment_s ,sum(zzk) as zzk  ,sum(lsjje)-sum(zzk)  as payment
from rd_order  
where  billrq  >=  '2021-05-11 00:00:00' and billrq <=  '2021-05-11 23:00:00'
group by market;

[2021-06-15 15:57:33,011][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                          # sum(zorder.order_price) as payment , 
                          # (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                          # (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           #sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           #AVG(zorder.order_pay) as avg_order_pay,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(orderI.sku_id)) as sku_distinct_count,
                           count(distinct(zorder.customer_key)) as user_count
                   from order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
		   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 23:00:00'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-15 15:57:33,775][INFO][zmaxx-etl.db-client] 
select market as store_key,sum(lsjje) as payment_s ,sum(zzk) as zzk  ,sum(lsjje)-sum(zzk)  as payment
from rd_order  
where  billrq  >=  '2021-05-11 00:00:00' and billrq <=  '2021-05-11 23:00:00'
group by market;

[2021-06-15 15:57:50,555][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                          # sum(zorder.order_price) as payment , 
                          # (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                          # (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           #sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           #AVG(zorder.order_pay) as avg_order_pay,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(orderI.sku_id)) as sku_distinct_count,
                           count(distinct(zorder.customer_key)) as user_count
                   from order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
		   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 23:00:00'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-15 15:57:51,315][INFO][zmaxx-etl.db-client] 
select market as store_key,sum(lsjje) as payment_s ,sum(zzk) as zzk  ,sum(lsjje)-sum(zzk)  as payment
from rd_order  
where  billrq  >=  '2021-05-11 00:00:00' and billrq <=  '2021-05-11 23:00:00'
group by market;

[2021-06-15 15:58:40,816][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                          # sum(zorder.order_price) as payment , 
                          # (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                          # (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           #sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           #AVG(zorder.order_pay) as avg_order_pay,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(orderI.sku_id)) as sku_distinct_count,
                           count(distinct(zorder.customer_key)) as user_count
                   from order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
		   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 23:00:00'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-15 15:58:41,665][INFO][zmaxx-etl.db-client] 
select market as store_key,sum(lsjje) as payment_s ,sum(zzk) as zzk  ,sum(lsjje)-sum(zzk)  as payment
from rd_order  
where  billrq  >=  '2021-05-11 00:00:00' and billrq <=  '2021-05-11 23:00:00'
group by market;

[2021-06-15 15:59:14,924][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                          # sum(zorder.order_price) as payment , 
                          # (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                          # (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           #sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           #AVG(zorder.order_pay) as avg_order_pay,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(orderI.sku_id)) as sku_distinct_count,
                           count(distinct(zorder.customer_key)) as user_count
                   from order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
		   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 23:00:00'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-15 15:59:15,701][INFO][zmaxx-etl.db-client] 
select market as store_key,sum(lsjje) as payment_s ,sum(zzk) as zzk  ,sum(lsjje)-sum(zzk)  as payment
from rd_order  
where  billrq  >=  '2021-05-11 00:00:00' and billrq <=  '2021-05-11 23:00:00'
group by market;

[2021-06-15 15:59:38,784][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                          # sum(zorder.order_price) as payment , 
                          # (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                          # (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           #sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           #AVG(zorder.order_pay) as avg_order_pay,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(orderI.sku_id)) as sku_distinct_count,
                           count(distinct(zorder.customer_key)) as user_count
                   from order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
		   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 23:00:00'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-15 15:59:39,516][INFO][zmaxx-etl.db-client] 
select market as store_key,sum(lsjje) as payment_s ,sum(zzk) as zzk  ,sum(lsjje)-sum(zzk)  as payment
from rd_order  
where  billrq  >=  '2021-05-11 00:00:00' and billrq <=  '2021-05-11 23:00:00'
group by market;

[2021-06-15 15:59:39,774][INFO][zmaxx-etl.db-client] 
    select market,sum(kcsl)  as kcsl from rd_product_stock where kcsl > 0 group by market 


[2021-06-15 16:00:05,420][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                          # sum(zorder.order_price) as payment , 
                          # (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                          # (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           #sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           #AVG(zorder.order_pay) as avg_order_pay,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(orderI.sku_id)) as sku_distinct_count,
                           count(distinct(zorder.customer_key)) as user_count
                   from order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
		   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 23:00:00'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-15 16:00:06,151][INFO][zmaxx-etl.db-client] 
select market as store_key,sum(lsjje) as payment_s ,sum(zzk) as zzk  ,sum(lsjje)-sum(zzk)  as payment
from rd_order  
where  billrq  >=  '2021-05-11 00:00:00' and billrq <=  '2021-05-11 23:00:00'
group by market;

[2021-06-15 16:00:06,401][INFO][zmaxx-etl.db-client] 
    select market,sum(kcsl)  as kcsl from rd_product_stock where kcsl > 0 group by market 


[2021-06-15 17:52:10,555][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                          # sum(zorder.order_price) as payment , 
                          # (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                          # (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           #sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           #AVG(zorder.order_pay) as avg_order_pay,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(orderI.sku_id)) as sku_distinct_count,
                           count(distinct(zorder.customer_key)) as user_count
                   from order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
		   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 23:00:00'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-15 17:52:11,962][INFO][zmaxx-etl.db-client] 
select market as store_key,sum(lsjje) as payment_s ,sum(zzk) as zzk  ,sum(lsjje)-sum(zzk)  as payment
from rd_order  
where  billrq  >=  '2021-05-11 00:00:00' and billrq <=  '2021-05-11 23:00:00'
group by market;

[2021-06-15 17:52:12,904][INFO][zmaxx-etl.db-client] 
    select market,sum(kcsl)  as kcsl from rd_product_stock where kcsl > 0 group by market 


[2021-06-15 18:30:30,846][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                          # sum(zorder.order_price) as payment , 
                          # (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                          # (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           #sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           #AVG(zorder.order_pay) as avg_order_pay,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(orderI.sku_id)) as sku_distinct_count,
                           count(distinct(zorder.customer_key)) as user_count
                   from order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
		   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 23:00:00'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-15 18:30:32,190][INFO][zmaxx-etl.db-client] 
select market as store_key,sum(lsjje) as payment_s ,sum(zzk) as zzk  ,sum(lsjje)-sum(zzk)  as payment
from rd_order  
where  billrq  >=  '2021-05-11 00:00:00' and billrq <=  '2021-05-11 23:00:00'
group by market;

[2021-06-15 18:30:32,563][INFO][zmaxx-etl.db-client] 
select distinct(goodsid) as goodsid ,jj from rd_pss where 
rq  >=  '%s'
and  rq <= '%s'
and ( type = 105 or type = 106)
order by goodsid desc

[2021-06-15 18:30:32,819][INFO][zmaxx-etl.db-client] 
    select market,sum(kcsl)  as kcsl from rd_product_stock where kcsl > 0 group by market 


[2021-06-15 18:31:09,775][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                          # sum(zorder.order_price) as payment , 
                          # (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                          # (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           #sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           #AVG(zorder.order_pay) as avg_order_pay,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(orderI.sku_id)) as sku_distinct_count,
                           count(distinct(zorder.customer_key)) as user_count
                   from order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
		   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 23:00:00'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-15 18:31:10,699][INFO][zmaxx-etl.db-client] 
select market as store_key,sum(lsjje) as payment_s ,sum(zzk) as zzk  ,sum(lsjje)-sum(zzk)  as payment
from rd_order  
where  billrq  >=  '2021-05-11 00:00:00' and billrq <=  '2021-05-11 23:00:00'
group by market;

[2021-06-15 18:31:11,150][INFO][zmaxx-etl.db-client] 
select distinct(goodsid) as goodsid ,jj from rd_pss where 
rq  >=  '%s'
and  rq <= '%s'
and ( type = 105 or type = 106)
order by goodsid desc

[2021-06-15 18:31:11,420][INFO][zmaxx-etl.db-client] 
    select market,sum(kcsl)  as kcsl from rd_product_stock where kcsl > 0 group by market 


[2021-06-15 18:32:32,781][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                          # sum(zorder.order_price) as payment , 
                          # (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                          # (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           #sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           #AVG(zorder.order_pay) as avg_order_pay,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(orderI.sku_id)) as sku_distinct_count,
                           count(distinct(zorder.customer_key)) as user_count
                   from order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
		   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 23:00:00'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-15 18:32:33,669][INFO][zmaxx-etl.db-client] 
select market as store_key,sum(lsjje) as payment_s ,sum(zzk) as zzk  ,sum(lsjje)-sum(zzk)  as payment
from rd_order  
where  billrq  >=  '2021-05-11 00:00:00' and billrq <=  '2021-05-11 23:00:00'
group by market;

[2021-06-15 18:32:34,008][INFO][zmaxx-etl.db-client] 
select distinct(goodsid) as goodsid ,jj from rd_pss where 
rq  >=  '2021-05-11 00:00:00'
and  rq <= '2021-05-11 23:00:00'
and ( type = 105 or type = 106)
order by goodsid desc

[2021-06-15 18:32:34,277][INFO][zmaxx-etl.db-client] 
    select market,sum(kcsl)  as kcsl from rd_product_stock where kcsl > 0 group by market 


[2021-06-15 19:09:52,086][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                          # sum(zorder.order_price) as payment , 
                          # (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                          # (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           #sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           #AVG(zorder.order_pay) as avg_order_pay,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(orderI.sku_id)) as sku_distinct_count,
                           count(distinct(zorder.customer_key)) as user_count
                   from order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
		   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 23:00:00'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-15 19:09:53,130][INFO][zmaxx-etl.db-client] 
select market,sum(lsjje)*-1 as payment ,sum(zzk)*-1 as zzk ,sum(jj) as jj  from rd_pss where 
rq  >=  '2021-05-11 00:00:00'
and  rq <= '2021-05-11 23:00:00'
and ( type = 105 or type = 106)
group by market 


[2021-06-15 19:09:53,436][INFO][zmaxx-etl.db-client] 
    select market,sum(kcsl)  as kcsl from rd_product_stock where kcsl > 0 group by market 


[2021-06-15 19:10:51,405][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                          # sum(zorder.order_price) as payment , 
                          # (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                          # (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           #sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           #AVG(zorder.order_pay) as avg_order_pay,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(orderI.sku_id)) as sku_distinct_count,
                           count(distinct(zorder.customer_key)) as user_count
                   from order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
		   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 23:00:00'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-15 19:10:52,324][INFO][zmaxx-etl.db-client] 
select market as store_key ,sum(lsjje)*-1 as payment ,sum(zzk)*-1 as zzk ,sum(jj) as jj  from rd_pss where 
rq  >=  '2021-05-11 00:00:00'
and  rq <= '2021-05-11 23:00:00'
and ( type = 105 or type = 106)
group by market 


[2021-06-15 19:10:52,663][INFO][zmaxx-etl.db-client] 
    select market,sum(kcsl)  as kcsl from rd_product_stock where kcsl > 0 group by market 


[2021-06-15 19:11:38,992][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                          # sum(zorder.order_price) as payment , 
                          # (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                          # (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           #sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           #AVG(zorder.order_pay) as avg_order_pay,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(orderI.sku_id)) as sku_distinct_count,
                           count(distinct(zorder.customer_key)) as user_count
                   from order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
		   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 23:00:00'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-15 19:11:39,876][INFO][zmaxx-etl.db-client] 
select market as store_key ,sum(lsjje)*-1 as payment ,sum(zzk)*-1 as zzk ,sum(jj) as jj  from rd_pss where 
rq  >=  '2021-05-11 00:00:00'
and  rq <= '2021-05-11 23:00:00'
and ( type = 105 or type = 106)
group by market 


[2021-06-15 19:11:40,166][INFO][zmaxx-etl.db-client] 
    select market,sum(kcsl)  as kcsl from rd_product_stock where kcsl > 0 group by market 


[2021-06-15 19:12:25,541][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                          # sum(zorder.order_price) as payment , 
                          # (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                          # (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           #sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           #AVG(zorder.order_pay) as avg_order_pay,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(orderI.sku_id)) as sku_distinct_count,
                           count(distinct(zorder.customer_key)) as user_count
                   from order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
		   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 23:00:00'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-15 19:12:26,485][INFO][zmaxx-etl.db-client] 
select market as store_key ,sum(lsjje)*-1 as payment ,sum(zzk)*-1 as zzk ,sum(jj) as jj  from rd_pss where 
rq  >=  '2021-05-11 00:00:00'
and  rq <= '2021-05-11 23:00:00'
and ( type = 105 or type = 106)
group by market 


[2021-06-15 19:12:26,788][INFO][zmaxx-etl.db-client] 
    select market,sum(kcsl)  as kcsl from rd_product_stock where kcsl > 0 group by market 


[2021-06-15 19:16:59,864][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                          # sum(zorder.order_price) as payment , 
                          # (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                          # (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           #sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           #AVG(zorder.order_pay) as avg_order_pay,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(orderI.sku_id)) as sku_distinct_count,
                           count(distinct(zorder.customer_key)) as user_count
                   from order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
		   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 23:00:00'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-15 19:17:00,808][INFO][zmaxx-etl.db-client] 
select market as store_key ,sum(lsjje)*-1 as payment ,sum(zzk)*-1 as zzk ,sum(jj) as jj  from rd_pss where 
rq  >=  '2021-05-11 00:00:00'
and  rq <= '2021-05-11 23:00:00'
and ( type = 105 or type = 106)
group by market 


[2021-06-15 19:17:01,086][INFO][zmaxx-etl.db-client] 
    select market,sum(kcsl)  as kcsl from rd_product_stock where kcsl > 0 group by market 


[2021-06-15 19:17:01,196][INFO][zmaxx-etl.db-client] 
select store_key,COUNT(DISTINCT(customer_key)) as new_u,sum(order_pay) as new_u_pay from zmaxx_001.order 
where  customer_key not in
(
select distinct(customer_key) as old_key from zmaxx_001.order   where      order_create  <= '2021-05-11 00:00:00'
)
and order_create >=  '2021-05-11 00:00:00'  and   order_create  <= '2021-05-11 23:00:00'
group by store_key 


[2021-06-15 19:28:20,807][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                          # sum(zorder.order_price) as payment , 
                          # (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                          # (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           #sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           #AVG(zorder.order_pay) as avg_order_pay,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(orderI.sku_id)) as sku_distinct_count,
                           count(distinct(zorder.customer_key)) as user_count
                   from order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
		   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 23:00:00'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-15 19:28:21,865][INFO][zmaxx-etl.db-client] 
select market as store_key ,sum(lsjje)*-1 as payment ,sum(zzk)*-1 as zzk ,sum(jj) as jj  from rd_pss where 
rq  >=  '2021-05-11 00:00:00'
and  rq <= '2021-05-11 23:00:00'
and ( type = 105 or type = 106)
group by market 


[2021-06-15 19:28:22,276][INFO][zmaxx-etl.db-client] 
    select market,sum(kcsl)  as kcsl from rd_product_stock where kcsl > 0 group by market 


[2021-06-15 19:28:22,373][INFO][zmaxx-etl.db-client] 
select store_key,COUNT(DISTINCT(customer_key)) as new_u,sum(order_price) as new_u_pay from zmaxx_001.order 
where  customer_key not in
(
select distinct(customer_key) as old_key from zmaxx_001.order   where      order_create  <= '2021-05-11 00:00:00'
)
and order_create >=  '2021-05-11 00:00:00'  and   order_create  <= '2021-05-11 23:00:00'
group by store_key 


[2021-06-15 19:30:55,034][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                          # sum(zorder.order_price) as payment , 
                          # (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                          # (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           #sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           #AVG(zorder.order_pay) as avg_order_pay,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(orderI.sku_id)) as sku_distinct_count,
                           count(distinct(zorder.customer_key)) as user_count
                   from order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
		   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 23:00:00'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-15 19:30:56,051][INFO][zmaxx-etl.db-client] 
select market as store_key ,sum(lsjje)*-1 as payment ,sum(zzk)*-1 as zzk ,sum(jj) as jj  from rd_pss where 
rq  >=  '2021-05-11 00:00:00'
and  rq <= '2021-05-11 23:00:00'
and ( type = 105 or type = 106)
group by market 


[2021-06-15 19:30:56,403][INFO][zmaxx-etl.db-client] 
    select market,sum(kcsl)  as kcsl from rd_product_stock where kcsl > 0 group by market 


[2021-06-15 19:30:56,482][INFO][zmaxx-etl.db-client] 
select store_key,COUNT(DISTINCT(customer_key)) as new_u,sum(order_price) as new_u_pay from zmaxx_001.order 
where  customer_key not in
(
select distinct(customer_key) as old_key from zmaxx_001.order   where      order_create  <= '2021-05-11 00:00:00'
)
and order_create >=  '2021-05-11 00:00:00'  and   order_create  <= '2021-05-11 23:00:00'
group by store_key 


[2021-06-15 19:32:09,059][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                          # sum(zorder.order_price) as payment , 
                          # (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                          # (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           #sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           #AVG(zorder.order_pay) as avg_order_pay,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(orderI.sku_id)) as sku_distinct_count,
                           count(distinct(zorder.customer_key)) as user_count
                   from order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
		   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 23:00:00'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-15 19:32:09,945][INFO][zmaxx-etl.db-client] 
select market as store_key ,sum(lsjje)*-1 as payment ,sum(zzk)*-1 as zzk ,sum(jj) as jj  from rd_pss where 
rq  >=  '2021-05-11 00:00:00'
and  rq <= '2021-05-11 23:00:00'
and ( type = 105 or type = 106)
group by market 


[2021-06-15 19:32:10,272][INFO][zmaxx-etl.db-client] 
    select market,sum(kcsl)  as kcsl from rd_product_stock where kcsl > 0 group by market 


[2021-06-15 19:32:10,367][INFO][zmaxx-etl.db-client] 
select store_key,COUNT(DISTINCT(customer_key)) as new_u,sum(order_price) as new_u_pay from zmaxx_001.order 
where  customer_key not in
(
select distinct(customer_key) as old_key from zmaxx_001.order   where      order_create  <= '2021-05-11 00:00:00'
)
and order_create >=  '2021-05-11 00:00:00'  and   order_create  <= '2021-05-11 23:00:00'
group by store_key 


[2021-06-15 19:32:45,001][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                          # sum(zorder.order_price) as payment , 
                          # (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                          # (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           #sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           #AVG(zorder.order_pay) as avg_order_pay,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(orderI.sku_id)) as sku_distinct_count,
                           count(distinct(zorder.customer_key)) as user_count
                   from order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
		   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 23:00:00'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-15 19:32:45,890][INFO][zmaxx-etl.db-client] 
select market as store_key ,sum(lsjje)*-1 as payment ,sum(zzk)*-1 as zzk ,sum(jj) as jj  from rd_pss where 
rq  >=  '2021-05-11 00:00:00'
and  rq <= '2021-05-11 23:00:00'
and ( type = 105 or type = 106)
group by market 


[2021-06-15 19:32:46,228][INFO][zmaxx-etl.db-client] 
    select market,sum(kcsl)  as kcsl from rd_product_stock where kcsl > 0 group by market 


[2021-06-15 19:32:46,325][INFO][zmaxx-etl.db-client] 
select store_key,COUNT(DISTINCT(customer_key)) as new_u,sum(order_price) as new_u_pay from zmaxx_001.order 
where  customer_key not in
(
select distinct(customer_key) as old_key from zmaxx_001.order   where      order_create  <= '2021-05-11 00:00:00'
)
and order_create >=  '2021-05-11 00:00:00'  and   order_create  <= '2021-05-11 23:00:00'
group by store_key 


[2021-06-15 19:33:17,025][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                          # sum(zorder.order_price) as payment , 
                          # (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                          # (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           #sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           #AVG(zorder.order_pay) as avg_order_pay,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(orderI.sku_id)) as sku_distinct_count,
                           count(distinct(zorder.customer_key)) as user_count
                   from order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
		   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 23:00:00'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-15 19:33:17,898][INFO][zmaxx-etl.db-client] 
select market as store_key ,sum(lsjje)*-1 as payment ,sum(zzk)*-1 as zzk ,sum(jj) as jj  from rd_pss where 
rq  >=  '2021-05-11 00:00:00'
and  rq <= '2021-05-11 23:00:00'
and ( type = 105 or type = 106)
group by market 


[2021-06-15 19:33:18,228][INFO][zmaxx-etl.db-client] 
    select market,sum(kcsl)  as kcsl from rd_product_stock where kcsl > 0 group by market 


[2021-06-15 19:33:18,324][INFO][zmaxx-etl.db-client] 
select store_key,COUNT(DISTINCT(customer_key)) as new_u,sum(order_price) as new_u_pay from zmaxx_001.order 
where  customer_key not in
(
select distinct(customer_key) as old_key from zmaxx_001.order   where      order_create  <= '2021-05-11 00:00:00'
)
and order_create >=  '2021-05-11 00:00:00'  and   order_create  <= '2021-05-11 23:00:00'
group by store_key 


[2021-06-15 19:33:45,583][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                          # sum(zorder.order_price) as payment , 
                          # (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                          # (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           #sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           #AVG(zorder.order_pay) as avg_order_pay,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(orderI.sku_id)) as sku_distinct_count,
                           count(distinct(zorder.customer_key)) as user_count
                   from order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
		   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 23:00:00'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-15 19:33:46,363][INFO][zmaxx-etl.db-client] 
select market as store_key ,sum(lsjje)*-1 as payment ,sum(zzk)*-1 as zzk ,sum(jj) as jj  from rd_pss where 
rq  >=  '2021-05-11 00:00:00'
and  rq <= '2021-05-11 23:00:00'
and ( type = 105 or type = 106)
group by market 


[2021-06-15 19:33:46,671][INFO][zmaxx-etl.db-client] 
    select market,sum(kcsl)  as kcsl from rd_product_stock where kcsl > 0 group by market 


[2021-06-15 19:33:46,754][INFO][zmaxx-etl.db-client] 
select store_key,COUNT(DISTINCT(customer_key)) as new_u,sum(order_price) as new_u_pay from zmaxx_001.order 
where  customer_key not in
(
select distinct(customer_key) as old_key from zmaxx_001.order   where      order_create  <= '2021-05-11 00:00:00'
)
and order_create >=  '2021-05-11 00:00:00'  and   order_create  <= '2021-05-11 23:00:00'
group by store_key 


[2021-06-15 19:34:29,053][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                          # sum(zorder.order_price) as payment , 
                          # (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                          # (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           #sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           #AVG(zorder.order_pay) as avg_order_pay,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(orderI.sku_id)) as sku_distinct_count,
                           count(distinct(zorder.customer_key)) as user_count
                   from order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
		   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 23:00:00'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-15 19:34:29,829][INFO][zmaxx-etl.db-client] 
select market as store_key ,sum(lsjje)*-1 as payment ,sum(zzk)*-1 as zzk ,sum(jj) as jj  from rd_pss where 
rq  >=  '2021-05-11 00:00:00'
and  rq <= '2021-05-11 23:00:00'
and ( type = 105 or type = 106)
group by market 


[2021-06-15 19:34:30,133][INFO][zmaxx-etl.db-client] 
    select market,sum(kcsl)  as kcsl from rd_product_stock where kcsl > 0 group by market 


[2021-06-15 19:34:30,213][INFO][zmaxx-etl.db-client] 
select store_key,COUNT(DISTINCT(customer_key)) as new_u,sum(order_price) as new_u_pay from zmaxx_001.order 
where  customer_key not in
(
select distinct(customer_key) as old_key from zmaxx_001.order   where      order_create  <= '2021-05-11 00:00:00'
)
and order_create >=  '2021-05-11 00:00:00'  and   order_create  <= '2021-05-11 23:00:00'
group by store_key 


[2021-06-15 19:35:23,613][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                          # sum(zorder.order_price) as payment , 
                          # (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                          # (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           #sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           #AVG(zorder.order_pay) as avg_order_pay,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(orderI.sku_id)) as sku_distinct_count,
                           count(distinct(zorder.customer_key)) as user_count
                   from order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
		   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 23:00:00'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-15 19:35:24,365][INFO][zmaxx-etl.db-client] 
select market as store_key ,sum(lsjje)*-1 as payment ,sum(zzk)*-1 as zzk ,sum(jj) as jj  from rd_pss where 
rq  >=  '2021-05-11 00:00:00'
and  rq <= '2021-05-11 23:00:00'
and ( type = 105 or type = 106)
group by market 


[2021-06-15 19:35:24,670][INFO][zmaxx-etl.db-client] 
    select market,sum(kcsl)  as kcsl from rd_product_stock where kcsl > 0 group by market 


[2021-06-15 19:35:24,763][INFO][zmaxx-etl.db-client] 
select store_key,COUNT(DISTINCT(customer_key)) as new_u,sum(order_price) as new_u_pay from zmaxx_001.order 
where  customer_key not in
(
select distinct(customer_key) as old_key from zmaxx_001.order   where      order_create  <= '2021-05-11 00:00:00'
)
and order_create >=  '2021-05-11 00:00:00'  and   order_create  <= '2021-05-11 23:00:00'
group by store_key 


[2021-06-15 19:36:31,032][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                          # sum(zorder.order_price) as payment , 
                          # (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                          # (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           #sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           #AVG(zorder.order_pay) as avg_order_pay,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(orderI.sku_id)) as sku_distinct_count,
                           count(distinct(zorder.customer_key)) as user_count
                   from order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
		   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 23:00:00'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-15 19:36:31,796][INFO][zmaxx-etl.db-client] 
select market as store_key ,sum(lsjje)*-1 as payment ,sum(zzk)*-1 as zzk ,sum(jj) as jj  from rd_pss where 
rq  >=  '2021-05-11 00:00:00'
and  rq <= '2021-05-11 23:00:00'
and ( type = 105 or type = 106)
group by market 


[2021-06-15 19:36:32,095][INFO][zmaxx-etl.db-client] 
    select market,sum(kcsl)  as kcsl from rd_product_stock where kcsl > 0 group by market 


[2021-06-15 19:36:32,191][INFO][zmaxx-etl.db-client] 
select store_key,COUNT(DISTINCT(customer_key)) as new_u,sum(order_price) as new_u_pay from zmaxx_001.order 
where  customer_key not in
(
select distinct(customer_key) as old_key from zmaxx_001.order   where      order_create  <= '2021-05-11 00:00:00'
)
and order_create >=  '2021-05-11 00:00:00'  and   order_create  <= '2021-05-11 23:00:00'
group by store_key 


[2021-06-15 19:37:31,933][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                          # sum(zorder.order_price) as payment , 
                          # (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                          # (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           #sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           #AVG(zorder.order_pay) as avg_order_pay,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(orderI.sku_id)) as sku_distinct_count,
                           count(distinct(zorder.customer_key)) as user_count
                   from order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
		   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 23:00:00'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-15 19:37:32,728][INFO][zmaxx-etl.db-client] 
select market as store_key ,sum(lsjje)*-1 as payment ,sum(zzk)*-1 as zzk ,sum(jj) as jj  from rd_pss where 
rq  >=  '2021-05-11 00:00:00'
and  rq <= '2021-05-11 23:00:00'
and ( type = 105 or type = 106)
group by market 


[2021-06-15 19:37:33,034][INFO][zmaxx-etl.db-client] 
    select market,sum(kcsl)  as kcsl from rd_product_stock where kcsl > 0 group by market 


[2021-06-15 19:37:33,135][INFO][zmaxx-etl.db-client] 
select store_key,COUNT(DISTINCT(customer_key)) as new_u,sum(order_price) as new_u_pay from zmaxx_001.order 
where  customer_key not in
(
select distinct(customer_key) as old_key from zmaxx_001.order   where      order_create  <= '2021-05-11 00:00:00'
)
and order_create >=  '2021-05-11 00:00:00'  and   order_create  <= '2021-05-11 23:00:00'
group by store_key 


[2021-06-15 19:37:44,705][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                          # sum(zorder.order_price) as payment , 
                          # (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                          # (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           #sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           #AVG(zorder.order_pay) as avg_order_pay,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(orderI.sku_id)) as sku_distinct_count,
                           count(distinct(zorder.customer_key)) as user_count
                   from order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
		   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 23:00:00'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-15 19:37:45,491][INFO][zmaxx-etl.db-client] 
select market as store_key ,sum(lsjje)*-1 as payment ,sum(zzk)*-1 as zzk ,sum(jj) as jj  from rd_pss where 
rq  >=  '2021-05-11 00:00:00'
and  rq <= '2021-05-11 23:00:00'
and ( type = 105 or type = 106)
group by market 


[2021-06-15 19:37:45,800][INFO][zmaxx-etl.db-client] 
    select market,sum(kcsl)  as kcsl from rd_product_stock where kcsl > 0 group by market 


[2021-06-15 19:37:45,894][INFO][zmaxx-etl.db-client] 
select store_key,COUNT(DISTINCT(customer_key)) as new_u,sum(order_price) as new_u_pay from zmaxx_001.order 
where  customer_key not in
(
select distinct(customer_key) as old_key from zmaxx_001.order   where      order_create  <= '2021-05-11 00:00:00'
)
and order_create >=  '2021-05-11 00:00:00'  and   order_create  <= '2021-05-11 23:00:00'
group by store_key 


[2021-06-15 19:39:24,532][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                          # sum(zorder.order_price) as payment , 
                          # (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                          # (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           #sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           #AVG(zorder.order_pay) as avg_order_pay,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(orderI.sku_id)) as sku_distinct_count,
                           count(distinct(zorder.customer_key)) as user_count
                   from order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
		   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 23:00:00'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-15 19:39:25,319][INFO][zmaxx-etl.db-client] 
select market as store_key ,sum(lsjje)*-1 as payment ,sum(zzk)*-1 as zzk ,sum(jj) as jj  from rd_pss where 
rq  >=  '2021-05-11 00:00:00'
and  rq <= '2021-05-11 23:00:00'
and ( type = 105 or type = 106)
group by market 


[2021-06-15 19:39:25,626][INFO][zmaxx-etl.db-client] 
    select market,sum(kcsl)  as kcsl from rd_product_stock where kcsl > 0 group by market 


[2021-06-15 19:39:25,737][INFO][zmaxx-etl.db-client] 
select store_key,COUNT(DISTINCT(customer_key)) as new_u,sum(order_price) as new_u_pay from zmaxx_001.order 
where  customer_key not in
(
select distinct(customer_key) as old_key from zmaxx_001.order   where      order_create  <= '2021-05-11 00:00:00'
)
and order_create >=  '2021-05-11 00:00:00'  and   order_create  <= '2021-05-11 23:00:00'
group by store_key 


[2021-06-15 19:43:29,591][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                          # sum(zorder.order_price) as payment , 
                          # (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                          # (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           #sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           #AVG(zorder.order_pay) as avg_order_pay,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(orderI.sku_id)) as sku_distinct_count,
                           count(distinct(zorder.customer_key)) as user_count
                   from order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
		   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 23:00:00'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-15 19:43:31,086][INFO][zmaxx-etl.db-client] 
select market as store_key ,sum(lsjje)*-1 as payment ,sum(zzk)*-1 as zzk ,sum(jj) as jj  from rd_pss where 
rq  >=  '2021-05-11 00:00:00'
and  rq <= '2021-05-11 23:00:00'
and ( type = 105 or type = 106)
group by market 


[2021-06-15 19:43:31,460][INFO][zmaxx-etl.db-client] 
    select market,sum(kcsl)  as kcsl from rd_product_stock where kcsl > 0 group by market 


[2021-06-15 19:43:31,563][INFO][zmaxx-etl.db-client] 
select store_key,COUNT(DISTINCT(customer_key)) as new_u,sum(order_price) as new_u_pay from zmaxx_001.order 
where  customer_key not in
(
select distinct(customer_key) as old_key from zmaxx_001.order   where      order_create  <= '2021-05-11 00:00:00'
)
and order_create >=  '2021-05-11 00:00:00'  and   order_create  <= '2021-05-11 23:00:00'
group by store_key 


[2021-06-15 19:43:55,202][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                          # sum(zorder.order_price) as payment , 
                          # (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                          # (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           #sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           #AVG(zorder.order_pay) as avg_order_pay,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(orderI.sku_id)) as sku_distinct_count,
                           count(distinct(zorder.customer_key)) as user_count
                   from order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
		   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 23:00:00'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-15 19:43:56,057][INFO][zmaxx-etl.db-client] 
select market as store_key ,sum(lsjje)*-1 as payment ,sum(zzk)*-1 as zzk ,sum(jj) as jj  from rd_pss where 
rq  >=  '2021-05-11 00:00:00'
and  rq <= '2021-05-11 23:00:00'
and ( type = 105 or type = 106)
group by market 


[2021-06-15 19:43:56,380][INFO][zmaxx-etl.db-client] 
    select market,sum(kcsl)  as kcsl from rd_product_stock where kcsl > 0 group by market 


[2021-06-15 19:43:56,474][INFO][zmaxx-etl.db-client] 
select store_key,COUNT(DISTINCT(customer_key)) as new_u,sum(order_price) as new_u_pay from zmaxx_001.order 
where  customer_key not in
(
select distinct(customer_key) as old_key from zmaxx_001.order   where      order_create  <= '2021-05-11 00:00:00'
)
and order_create >=  '2021-05-11 00:00:00'  and   order_create  <= '2021-05-11 23:00:00'
group by store_key 


[2021-06-15 19:45:43,197][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                          # sum(zorder.order_price) as payment , 
                          # (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                          # (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           #sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           #AVG(zorder.order_pay) as avg_order_pay,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(orderI.sku_id)) as sku_distinct_count,
                           count(distinct(zorder.customer_key)) as user_count
                   from order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
		   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 23:00:00'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-15 19:45:43,975][INFO][zmaxx-etl.db-client] 
select market as store_key ,sum(lsjje)*-1 as payment ,sum(zzk)*-1 as zzk ,sum(jj) as jj  from rd_pss where 
rq  >=  '2021-05-11 00:00:00'
and  rq <= '2021-05-11 23:00:00'
and ( type = 105 or type = 106)
group by market 


[2021-06-15 19:45:44,281][INFO][zmaxx-etl.db-client] 
    select market,sum(kcsl)  as kcsl from rd_product_stock where kcsl > 0 group by market 


[2021-06-15 19:45:44,369][INFO][zmaxx-etl.db-client] 
select store_key,COUNT(DISTINCT(customer_key)) as new_u,sum(order_price) as new_u_pay from zmaxx_001.order 
where  customer_key not in
(
select distinct(customer_key) as old_key from zmaxx_001.order   where      order_create  <= '2021-05-11 00:00:00'
)
and order_create >=  '2021-05-11 00:00:00'  and   order_create  <= '2021-05-11 23:00:00'
group by store_key 


[2021-06-15 19:46:21,091][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                          # sum(zorder.order_price) as payment , 
                          # (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                          # (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           #sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           #AVG(zorder.order_pay) as avg_order_pay,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(orderI.sku_id)) as sku_distinct_count,
                           count(distinct(zorder.customer_key)) as user_count
                   from order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
		   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 23:00:00'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-15 19:46:21,894][INFO][zmaxx-etl.db-client] 
select market as store_key ,sum(lsjje)*-1 as payment ,sum(zzk)*-1 as zzk ,sum(jj) as jj  from rd_pss where 
rq  >=  '2021-05-11 00:00:00'
and  rq <= '2021-05-11 23:00:00'
and ( type = 105 or type = 106)
group by market 


[2021-06-15 19:46:22,196][INFO][zmaxx-etl.db-client] 
    select market,sum(kcsl)  as kcsl from rd_product_stock where kcsl > 0 group by market 


[2021-06-15 19:46:22,293][INFO][zmaxx-etl.db-client] 
select store_key,COUNT(DISTINCT(customer_key)) as new_u,sum(order_price) as new_u_pay from zmaxx_001.order 
where  customer_key not in
(
select distinct(customer_key) as old_key from zmaxx_001.order   where      order_create  <= '2021-05-11 00:00:00'
)
and order_create >=  '2021-05-11 00:00:00'  and   order_create  <= '2021-05-11 23:00:00'
group by store_key 


[2021-06-15 19:47:03,150][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                          # sum(zorder.order_price) as payment , 
                          # (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                          # (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           #sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           #AVG(zorder.order_pay) as avg_order_pay,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(orderI.sku_id)) as sku_distinct_count,
                           count(distinct(zorder.customer_key)) as user_count
                   from order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
		   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 23:00:00'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-15 19:47:03,927][INFO][zmaxx-etl.db-client] 
select market as store_key ,sum(lsjje)*-1 as payment ,sum(zzk)*-1 as zzk ,sum(jj) as jj  from rd_pss where 
rq  >=  '2021-05-11 00:00:00'
and  rq <= '2021-05-11 23:00:00'
and ( type = 105 or type = 106)
group by market 


[2021-06-15 19:47:04,226][INFO][zmaxx-etl.db-client] 
    select market,sum(kcsl)  as kcsl from rd_product_stock where kcsl > 0 group by market 


[2021-06-15 19:47:04,322][INFO][zmaxx-etl.db-client] 
select store_key,COUNT(DISTINCT(customer_key)) as new_u,sum(order_price) as new_u_pay from zmaxx_001.order 
where  customer_key not in
(
select distinct(customer_key) as old_key from zmaxx_001.order   where      order_create  <= '2021-05-11 00:00:00'
)
and order_create >=  '2021-05-11 00:00:00'  and   order_create  <= '2021-05-11 23:00:00'
group by store_key 


[2021-06-15 19:48:18,305][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                          # sum(zorder.order_price) as payment , 
                          # (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                          # (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           #sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           #AVG(zorder.order_pay) as avg_order_pay,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(orderI.sku_id)) as sku_distinct_count,
                           count(distinct(zorder.customer_key)) as user_count
                   from order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
		   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 23:00:00'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-15 19:48:19,125][INFO][zmaxx-etl.db-client] 
select market as store_key ,sum(lsjje)*-1 as payment ,sum(zzk)*-1 as zzk ,sum(jj) as jj  from rd_pss where 
rq  >=  '2021-05-11 00:00:00'
and  rq <= '2021-05-11 23:00:00'
and ( type = 105 or type = 106)
group by market 


[2021-06-15 19:48:19,427][INFO][zmaxx-etl.db-client] 
    select market,sum(kcsl)  as kcsl from rd_product_stock where kcsl > 0 group by market 


[2021-06-15 19:48:19,526][INFO][zmaxx-etl.db-client] 
select store_key,COUNT(DISTINCT(customer_key)) as new_u,sum(order_price) as new_u_pay from zmaxx_001.order 
where  customer_key not in
(
select distinct(customer_key) as old_key from zmaxx_001.order   where      order_create  <= '2021-05-11 00:00:00'
)
and order_create >=  '2021-05-11 00:00:00'  and   order_create  <= '2021-05-11 23:00:00'
group by store_key 


[2021-06-15 19:49:37,960][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                          # sum(zorder.order_price) as payment , 
                          # (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                          # (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           #sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           #AVG(zorder.order_pay) as avg_order_pay,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(orderI.sku_id)) as sku_distinct_count,
                           count(distinct(zorder.customer_key)) as user_count
                   from order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
		   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 23:00:00'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-15 19:49:39,017][INFO][zmaxx-etl.db-client] 
select market as store_key ,sum(lsjje)*-1 as payment ,sum(zzk)*-1 as zzk ,sum(jj) as jj  from rd_pss where 
rq  >=  '2021-05-11 00:00:00'
and  rq <= '2021-05-11 23:00:00'
and ( type = 105 or type = 106)
group by market 


[2021-06-15 19:49:39,393][INFO][zmaxx-etl.db-client] 
    select market,sum(kcsl)  as kcsl from rd_product_stock where kcsl > 0 group by market 


[2021-06-15 19:49:39,483][INFO][zmaxx-etl.db-client] 
select store_key,COUNT(DISTINCT(customer_key)) as new_u,sum(order_price) as new_u_pay from zmaxx_001.order 
where  customer_key not in
(
select distinct(customer_key) as old_key from zmaxx_001.order   where      order_create  <= '2021-05-11 00:00:00'
)
and order_create >=  '2021-05-11 00:00:00'  and   order_create  <= '2021-05-11 23:00:00'
group by store_key 


[2021-06-15 19:50:36,283][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                          # sum(zorder.order_price) as payment , 
                          # (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                          # (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           #sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           #AVG(zorder.order_pay) as avg_order_pay,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(orderI.sku_id)) as sku_distinct_count,
                           count(distinct(zorder.customer_key)) as user_count
                   from order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
		   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 23:00:00'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-15 19:50:37,067][INFO][zmaxx-etl.db-client] 
select market as store_key ,sum(lsjje)*-1 as payment ,sum(zzk)*-1 as zzk ,sum(jj) as jj  from rd_pss where 
rq  >=  '2021-05-11 00:00:00'
and  rq <= '2021-05-11 23:00:00'
and ( type = 105 or type = 106)
group by market 


[2021-06-15 19:50:37,363][INFO][zmaxx-etl.db-client] 
    select market,sum(kcsl)  as kcsl from rd_product_stock where kcsl > 0 group by market 


[2021-06-15 19:50:37,457][INFO][zmaxx-etl.db-client] 
select store_key,COUNT(DISTINCT(customer_key)) as new_u,sum(order_price) as new_u_pay from zmaxx_001.order 
where  customer_key not in
(
select distinct(customer_key) as old_key from zmaxx_001.order   where      order_create  <= '2021-05-11 00:00:00'
)
and order_create >=  '2021-05-11 00:00:00'  and   order_create  <= '2021-05-11 23:00:00'
group by store_key 


[2021-06-15 19:51:01,381][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                          # sum(zorder.order_price) as payment , 
                          # (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                          # (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           #sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           #AVG(zorder.order_pay) as avg_order_pay,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(orderI.sku_id)) as sku_distinct_count,
                           count(distinct(zorder.customer_key)) as user_count
                   from order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
		   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 23:00:00'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-15 19:51:02,173][INFO][zmaxx-etl.db-client] 
select market as store_key ,sum(lsjje)*-1 as payment ,sum(zzk)*-1 as zzk ,sum(jj) as jj  from rd_pss where 
rq  >=  '2021-05-11 00:00:00'
and  rq <= '2021-05-11 23:00:00'
and ( type = 105 or type = 106)
group by market 


[2021-06-15 19:51:02,471][INFO][zmaxx-etl.db-client] 
    select market,sum(kcsl)  as kcsl from rd_product_stock where kcsl > 0 group by market 


[2021-06-15 19:51:02,565][INFO][zmaxx-etl.db-client] 
select store_key,COUNT(DISTINCT(customer_key)) as new_u,sum(order_price) as new_u_pay from zmaxx_001.order 
where  customer_key not in
(
select distinct(customer_key) as old_key from zmaxx_001.order   where      order_create  <= '2021-05-11 00:00:00'
)
and order_create >=  '2021-05-11 00:00:00'  and   order_create  <= '2021-05-11 23:00:00'
group by store_key 


[2021-06-15 19:51:20,364][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                          # sum(zorder.order_price) as payment , 
                          # (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                          # (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           #sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           #AVG(zorder.order_pay) as avg_order_pay,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(orderI.sku_id)) as sku_distinct_count,
                           count(distinct(zorder.customer_key)) as user_count
                   from order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
		   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 23:00:00'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-15 19:51:21,188][INFO][zmaxx-etl.db-client] 
select market as store_key ,sum(lsjje)*-1 as payment ,sum(zzk)*-1 as zzk ,sum(jj) as jj  from rd_pss where 
rq  >=  '2021-05-11 00:00:00'
and  rq <= '2021-05-11 23:00:00'
and ( type = 105 or type = 106)
group by market 


[2021-06-15 19:51:21,488][INFO][zmaxx-etl.db-client] 
    select market,sum(kcsl)  as kcsl from rd_product_stock where kcsl > 0 group by market 


[2021-06-15 19:51:21,586][INFO][zmaxx-etl.db-client] 
select store_key,COUNT(DISTINCT(customer_key)) as new_u,sum(order_price) as new_u_pay from zmaxx_001.order 
where  customer_key not in
(
select distinct(customer_key) as old_key from zmaxx_001.order   where      order_create  <= '2021-05-11 00:00:00'
)
and order_create >=  '2021-05-11 00:00:00'  and   order_create  <= '2021-05-11 23:00:00'
group by store_key 


[2021-06-15 19:51:43,652][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                          # sum(zorder.order_price) as payment , 
                          # (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                          # (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           #sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           #AVG(zorder.order_pay) as avg_order_pay,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(orderI.sku_id)) as sku_distinct_count,
                           count(distinct(zorder.customer_key)) as user_count
                   from order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
		   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 23:00:00'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-15 19:51:44,434][INFO][zmaxx-etl.db-client] 
select market as store_key ,sum(lsjje)*-1 as payment ,sum(zzk)*-1 as zzk ,sum(jj) as jj  from rd_pss where 
rq  >=  '2021-05-11 00:00:00'
and  rq <= '2021-05-11 23:00:00'
and ( type = 105 or type = 106)
group by market 


[2021-06-15 19:51:44,740][INFO][zmaxx-etl.db-client] 
    select market,sum(kcsl)  as kcsl from rd_product_stock where kcsl > 0 group by market 


[2021-06-15 19:51:44,831][INFO][zmaxx-etl.db-client] 
select store_key,COUNT(DISTINCT(customer_key)) as new_u,sum(order_price) as new_u_pay from zmaxx_001.order 
where  customer_key not in
(
select distinct(customer_key) as old_key from zmaxx_001.order   where      order_create  <= '2021-05-11 00:00:00'
)
and order_create >=  '2021-05-11 00:00:00'  and   order_create  <= '2021-05-11 23:00:00'
group by store_key 


[2021-06-15 19:52:25,318][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                          # sum(zorder.order_price) as payment , 
                          # (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                          # (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           #sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           #AVG(zorder.order_pay) as avg_order_pay,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(orderI.sku_id)) as sku_distinct_count,
                           count(distinct(zorder.customer_key)) as user_count
                   from order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
		   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 23:00:00'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-15 19:52:26,126][INFO][zmaxx-etl.db-client] 
select market as store_key ,sum(lsjje)*-1 as payment ,sum(zzk)*-1 as zzk ,sum(jj) as jj  from rd_pss where 
rq  >=  '2021-05-11 00:00:00'
and  rq <= '2021-05-11 23:00:00'
and ( type = 105 or type = 106)
group by market 


[2021-06-15 19:52:26,429][INFO][zmaxx-etl.db-client] 
    select market,sum(kcsl)  as kcsl from rd_product_stock where kcsl > 0 group by market 


[2021-06-15 19:52:26,521][INFO][zmaxx-etl.db-client] 
select store_key,COUNT(DISTINCT(customer_key)) as new_u,sum(order_price) as new_u_pay from zmaxx_001.order 
where  customer_key not in
(
select distinct(customer_key) as old_key from zmaxx_001.order   where      order_create  <= '2021-05-11 00:00:00'
)
and order_create >=  '2021-05-11 00:00:00'  and   order_create  <= '2021-05-11 23:00:00'
group by store_key 


[2021-06-15 19:52:47,236][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                          # sum(zorder.order_price) as payment , 
                          # (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                          # (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           #sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           #AVG(zorder.order_pay) as avg_order_pay,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(orderI.sku_id)) as sku_distinct_count,
                           count(distinct(zorder.customer_key)) as user_count
                   from order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
		   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 23:00:00'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-15 19:52:48,008][INFO][zmaxx-etl.db-client] 
select market as store_key ,sum(lsjje)*-1 as payment ,sum(zzk)*-1 as zzk ,sum(jj) as jj  from rd_pss where 
rq  >=  '2021-05-11 00:00:00'
and  rq <= '2021-05-11 23:00:00'
and ( type = 105 or type = 106)
group by market 


[2021-06-15 19:52:48,307][INFO][zmaxx-etl.db-client] 
    select market,sum(kcsl)  as kcsl from rd_product_stock where kcsl > 0 group by market 


[2021-06-15 19:52:48,400][INFO][zmaxx-etl.db-client] 
select store_key,COUNT(DISTINCT(customer_key)) as new_u,sum(order_price) as new_u_pay from zmaxx_001.order 
where  customer_key not in
(
select distinct(customer_key) as old_key from zmaxx_001.order   where      order_create  <= '2021-05-11 00:00:00'
)
and order_create >=  '2021-05-11 00:00:00'  and   order_create  <= '2021-05-11 23:00:00'
group by store_key 


[2021-06-15 19:55:53,774][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                          # sum(zorder.order_price) as payment , 
                          # (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                          # (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           #sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           #AVG(zorder.order_pay) as avg_order_pay,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(orderI.sku_id)) as sku_distinct_count,
                           count(distinct(zorder.customer_key)) as user_count
                   from order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
		   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 23:00:00'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-15 19:55:54,539][INFO][zmaxx-etl.db-client] 
select market as store_key ,sum(lsjje)*-1 as payment ,sum(zzk)*-1 as zzk ,sum(jj) as jj  from rd_pss where 
rq  >=  '2021-05-11 00:00:00'
and  rq <= '2021-05-11 23:00:00'
and ( type = 105 or type = 106)
group by market 


[2021-06-15 19:55:54,848][INFO][zmaxx-etl.db-client] 
    select market,sum(kcsl)  as kcsl from rd_product_stock where kcsl > 0 group by market 


[2021-06-15 19:55:54,949][INFO][zmaxx-etl.db-client] 
select store_key,COUNT(DISTINCT(customer_key)) as new_u,sum(order_price) as new_u_pay from zmaxx_001.order 
where  customer_key not in
(
select distinct(customer_key) as old_key from zmaxx_001.order   where      order_create  <= '2021-05-11 00:00:00'
)
and order_create >=  '2021-05-11 00:00:00'  and   order_create  <= '2021-05-11 23:00:00'
group by store_key 


[2021-06-15 19:56:27,955][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                          # sum(zorder.order_price) as payment , 
                          # (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                          # (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           #sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           #AVG(zorder.order_pay) as avg_order_pay,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(orderI.sku_id)) as sku_distinct_count,
                           count(distinct(zorder.customer_key)) as user_count
                   from order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
		   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 23:00:00'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-15 19:56:28,743][INFO][zmaxx-etl.db-client] 
select market as store_key ,sum(lsjje)*-1 as payment ,sum(zzk)*-1 as zzk ,sum(jj) as jj  from rd_pss where 
rq  >=  '2021-05-11 00:00:00'
and  rq <= '2021-05-11 23:00:00'
and ( type = 105 or type = 106)
group by market 


[2021-06-15 19:56:29,054][INFO][zmaxx-etl.db-client] 
    select market,sum(kcsl)  as kcsl from rd_product_stock where kcsl > 0 group by market 


[2021-06-15 19:56:29,158][INFO][zmaxx-etl.db-client] 
select store_key,COUNT(DISTINCT(customer_key)) as new_u,sum(order_price) as new_u_pay from zmaxx_001.order 
where  customer_key not in
(
select distinct(customer_key) as old_key from zmaxx_001.order   where      order_create  <= '2021-05-11 00:00:00'
)
and order_create >=  '2021-05-11 00:00:00'  and   order_create  <= '2021-05-11 23:00:00'
group by store_key 


[2021-06-15 19:58:35,242][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                          # sum(zorder.order_price) as payment , 
                          # (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                          # (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           #sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           #AVG(zorder.order_pay) as avg_order_pay,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(orderI.sku_id)) as sku_distinct_count,
                           count(distinct(zorder.customer_key)) as user_count
                   from order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
		   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 23:00:00'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-15 19:58:36,002][INFO][zmaxx-etl.db-client] 
    select market,sum(kcsl)  as kcsl from rd_product_stock where kcsl > 0 group by market 


[2021-06-15 19:58:36,092][INFO][zmaxx-etl.db-client] 
select  store_key, sum(CAST(sku_qty AS DECIMAL(12,2)) ) as sale_qty_30  from order_item where order_create > DATE_SUB('2021-05-11',INTERVAL 30 DAY)  group by store_key
[2021-06-15 19:58:36,500][INFO][zmaxx-etl.db-client] 
select store_key,count(order_id) as user_null_count from zmaxx_001.order 
where customer_key = 0  and order_create >=  '2021-05-11 00:00:00'  and   order_create  <= '2021-05-11 23:00:00'
group by store_key;


[2021-06-15 19:58:36,506][INFO][zmaxx-etl.db-client] 
select store_key,COUNT(DISTINCT(customer_key)) as new_u,sum(order_price) as new_u_pay from zmaxx_001.order 
where  customer_key not in
(
select distinct(customer_key) as old_key from zmaxx_001.order   where      order_create  <= '2021-05-11 00:00:00'
)
and order_create >=  '2021-05-11 00:00:00'  and   order_create  <= '2021-05-11 23:00:00'
group by store_key 


[2021-06-15 19:58:36,941][INFO][zmaxx-etl.db-client] 
select store_key,COUNT(DISTINCT(customer_key)) as old_u,sum(order_pay) as old_u_pay from zmaxx_001.order 
where  customer_key   in
(
select distinct(customer_key) as old_key from zmaxx_001.order   where      order_create  <= '2021-05-11 00:00:00'
)
and order_create >=  '2021-05-11 00:00:00'  and   order_create  <= '2021-05-11 23:00:00'
group by store_key 

[2021-06-15 19:59:54,750][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                          # sum(zorder.order_price) as payment , 
                          # (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                          # (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           #sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           #AVG(zorder.order_pay) as avg_order_pay,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(orderI.sku_id)) as sku_distinct_count,
                           count(distinct(zorder.customer_key)) as user_count
                   from order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
		   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 23:00:00'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-15 19:59:55,551][INFO][zmaxx-etl.db-client] 
select market as store_key ,sum(lsjje)*-1 as payment ,sum(zzk)*-1 as zzk ,sum(jj) as jj  from rd_pss where 
rq  >=  '2021-05-11 00:00:00'
and  rq <= '2021-05-11 23:00:00'
and ( type = 105 or type = 106)
group by market 


[2021-06-15 19:59:55,856][INFO][zmaxx-etl.db-client] 
    select market,sum(kcsl)  as kcsl from rd_product_stock where kcsl > 0 group by market 


[2021-06-15 19:59:55,945][INFO][zmaxx-etl.db-client] 
select store_key,COUNT(DISTINCT(customer_key)) as new_u,sum(order_price) as new_u_pay from zmaxx_001.order 
where  customer_key not in
(
select distinct(customer_key) as old_key from zmaxx_001.order   where      order_create  <= '2021-05-11 00:00:00'
)
and order_create >=  '2021-05-11 00:00:00'  and   order_create  <= '2021-05-11 23:00:00'
group by store_key 


[2021-06-15 20:01:04,856][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                          # sum(zorder.order_price) as payment , 
                          # (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                          # (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           #sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           #AVG(zorder.order_pay) as avg_order_pay,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(orderI.sku_id)) as sku_distinct_count,
                           count(distinct(zorder.customer_key)) as user_count
                   from order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
		   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 23:00:00'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-15 20:01:05,599][INFO][zmaxx-etl.db-client] 
select market as store_key ,sum(lsjje)*-1 as payment ,sum(zzk)*-1 as zzk ,sum(jj) as jj  from rd_pss where 
rq  >=  '2021-05-11 00:00:00'
and  rq <= '2021-05-11 23:00:00'
and ( type = 105 or type = 106)
group by market 


[2021-06-15 20:01:05,912][INFO][zmaxx-etl.db-client] 
    select market,sum(kcsl)  as kcsl from rd_product_stock where kcsl > 0 group by market 


[2021-06-15 20:01:05,989][INFO][zmaxx-etl.db-client] 
select store_key,COUNT(DISTINCT(customer_key)) as new_u,sum(order_price) as new_u_pay from zmaxx_001.order 
where  customer_key not in
(
select distinct(customer_key) as old_key from zmaxx_001.order   where      order_create  <= '2021-05-11 00:00:00'
)
and order_create >=  '2021-05-11 00:00:00'  and   order_create  <= '2021-05-11 23:00:00'
group by store_key 


[2021-06-15 20:05:10,035][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                          # sum(zorder.order_price) as payment , 
                          # (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                          # (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           #sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           #AVG(zorder.order_pay) as avg_order_pay,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(orderI.sku_id)) as sku_distinct_count,
                           count(distinct(zorder.customer_key)) as user_count
                   from order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
		   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 23:00:00'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-15 20:05:10,955][INFO][zmaxx-etl.db-client] 
select market as store_key ,sum(lsjje)*-1 as payment ,sum(zzk)*-1 as zzk ,sum(jj) as jj  from rd_pss where 
rq  >=  '2021-05-11 00:00:00'
and  rq <= '2021-05-11 23:00:00'
and ( type = 105 or type = 106)
group by market 


[2021-06-15 20:05:11,296][INFO][zmaxx-etl.db-client] 
    select market,sum(kcsl)  as kcsl from rd_product_stock where kcsl > 0 group by market 


[2021-06-15 20:05:11,390][INFO][zmaxx-etl.db-client] 
select store_key,COUNT(DISTINCT(customer_key)) as new_u,sum(order_price) as new_u_pay from zmaxx_001.order 
where  customer_key not in
(
select distinct(customer_key) as old_key from zmaxx_001.order   where      order_create  <= '2021-05-11 00:00:00'
)
and order_create >=  '2021-05-11 00:00:00'  and   order_create  <= '2021-05-11 23:00:00'
group by store_key 


[2021-06-15 20:05:59,902][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                          # sum(zorder.order_price) as payment , 
                          # (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                          # (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           #sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           #AVG(zorder.order_pay) as avg_order_pay,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(orderI.sku_id)) as sku_distinct_count,
                           count(distinct(zorder.customer_key)) as user_count
                   from order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
		   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 23:00:00'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-15 20:06:00,722][INFO][zmaxx-etl.db-client] 
select market as store_key ,sum(lsjje)*-1 as payment ,sum(zzk)*-1 as zzk ,sum(jj) as jj  from rd_pss where 
rq  >=  '2021-05-11 00:00:00'
and  rq <= '2021-05-11 23:00:00'
and ( type = 105 or type = 106)
group by market 


[2021-06-15 20:06:01,042][INFO][zmaxx-etl.db-client] 
    select market,sum(kcsl)  as kcsl from rd_product_stock where kcsl > 0 group by market 


[2021-06-15 20:06:01,126][INFO][zmaxx-etl.db-client] 
select store_key,COUNT(DISTINCT(customer_key)) as new_u,sum(order_price) as new_u_pay from zmaxx_001.order 
where  customer_key not in
(
select distinct(customer_key) as old_key from zmaxx_001.order   where      order_create  <= '2021-05-11 00:00:00'
)
and order_create >=  '2021-05-11 00:00:00'  and   order_create  <= '2021-05-11 23:00:00'
group by store_key 


[2021-06-15 20:06:01,571][INFO][zmaxx-etl.sale] clojure.lang.PersistentVector
[2021-06-15 20:06:01,582][INFO][zmaxx-etl.sale] clojure.lang.PersistentVector
[2021-06-15 20:06:01,592][INFO][zmaxx-etl.sale] clojure.lang.PersistentVector
[2021-06-15 20:06:01,601][INFO][zmaxx-etl.sale] clojure.lang.PersistentVector
[2021-06-15 20:06:01,613][INFO][zmaxx-etl.sale] clojure.lang.PersistentVector
[2021-06-15 20:06:01,626][INFO][zmaxx-etl.sale] clojure.lang.PersistentVector
[2021-06-15 20:06:01,636][INFO][zmaxx-etl.sale] clojure.lang.PersistentVector
[2021-06-15 20:06:01,645][INFO][zmaxx-etl.sale] clojure.lang.PersistentVector
[2021-06-15 20:06:01,654][INFO][zmaxx-etl.sale] clojure.lang.PersistentVector
[2021-06-15 20:06:01,666][INFO][zmaxx-etl.sale] clojure.lang.PersistentVector
[2021-06-15 20:06:01,675][INFO][zmaxx-etl.sale] clojure.lang.PersistentVector
[2021-06-15 20:06:01,687][INFO][zmaxx-etl.sale] clojure.lang.PersistentVector
[2021-06-15 20:06:01,697][INFO][zmaxx-etl.sale] clojure.lang.PersistentVector
[2021-06-15 20:06:01,705][INFO][zmaxx-etl.sale] clojure.lang.PersistentVector
[2021-06-15 20:06:01,714][INFO][zmaxx-etl.sale] clojure.lang.PersistentVector
[2021-06-15 20:06:36,033][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                          # sum(zorder.order_price) as payment , 
                          # (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                          # (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           #sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           #AVG(zorder.order_pay) as avg_order_pay,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(orderI.sku_id)) as sku_distinct_count,
                           count(distinct(zorder.customer_key)) as user_count
                   from order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
		   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 23:00:00'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-15 20:06:36,817][INFO][zmaxx-etl.db-client] 
select market as store_key ,sum(lsjje)*-1 as payment ,sum(zzk)*-1 as zzk ,sum(jj) as jj  from rd_pss where 
rq  >=  '2021-05-11 00:00:00'
and  rq <= '2021-05-11 23:00:00'
and ( type = 105 or type = 106)
group by market 


[2021-06-15 20:06:37,137][INFO][zmaxx-etl.db-client] 
    select market,sum(kcsl)  as kcsl from rd_product_stock where kcsl > 0 group by market 


[2021-06-15 20:06:37,227][INFO][zmaxx-etl.db-client] 
select store_key,COUNT(DISTINCT(customer_key)) as new_u,sum(order_price) as new_u_pay from zmaxx_001.order 
where  customer_key not in
(
select distinct(customer_key) as old_key from zmaxx_001.order   where      order_create  <= '2021-05-11 00:00:00'
)
and order_create >=  '2021-05-11 00:00:00'  and   order_create  <= '2021-05-11 23:00:00'
group by store_key 


[2021-06-15 20:06:37,684][INFO][zmaxx-etl.sale] [5 222.2]
[2021-06-15 20:06:37,691][INFO][zmaxx-etl.sale] [64 2289.66]
[2021-06-15 20:06:37,699][INFO][zmaxx-etl.sale] [3 393.2]
[2021-06-15 20:06:37,708][INFO][zmaxx-etl.sale] [3 189.9]
[2021-06-15 20:06:37,722][INFO][zmaxx-etl.sale] [0 0]
[2021-06-15 20:06:37,734][INFO][zmaxx-etl.sale] [0 0]
[2021-06-15 20:06:37,744][INFO][zmaxx-etl.sale] [0 0]
[2021-06-15 20:06:37,758][INFO][zmaxx-etl.sale] [5 2893.7]
[2021-06-15 20:06:37,771][INFO][zmaxx-etl.sale] [0 0]
[2021-06-15 20:06:37,781][INFO][zmaxx-etl.sale] [0 0]
[2021-06-15 20:06:37,793][INFO][zmaxx-etl.sale] [0 0]
[2021-06-15 20:06:37,807][INFO][zmaxx-etl.sale] [2 319.4]
[2021-06-15 20:06:37,823][INFO][zmaxx-etl.sale] [1 276.7]
[2021-06-15 20:06:37,840][INFO][zmaxx-etl.sale] [1 43.6]
[2021-06-15 20:06:37,853][INFO][zmaxx-etl.sale] [0 0]
[2021-06-15 20:07:32,642][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                          # sum(zorder.order_price) as payment , 
                          # (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                          # (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           #sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           #AVG(zorder.order_pay) as avg_order_pay,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(orderI.sku_id)) as sku_distinct_count,
                           count(distinct(zorder.customer_key)) as user_count
                   from order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
		   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 23:00:00'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-15 20:07:33,419][INFO][zmaxx-etl.db-client] 
select market as store_key ,sum(lsjje)*-1 as payment ,sum(zzk)*-1 as zzk ,sum(jj) as jj  from rd_pss where 
rq  >=  '2021-05-11 00:00:00'
and  rq <= '2021-05-11 23:00:00'
and ( type = 105 or type = 106)
group by market 


[2021-06-15 20:07:33,741][INFO][zmaxx-etl.db-client] 
    select market,sum(kcsl)  as kcsl from rd_product_stock where kcsl > 0 group by market 


[2021-06-15 20:07:33,870][INFO][zmaxx-etl.db-client] 
select store_key,COUNT(DISTINCT(customer_key)) as new_u,sum(order_price) as new_u_pay from zmaxx_001.order 
where  customer_key not in
(
select distinct(customer_key) as old_key from zmaxx_001.order   where      order_create  <= '2021-05-11 00:00:00'
)
and order_create >=  '2021-05-11 00:00:00'  and   order_create  <= '2021-05-11 23:00:00'
group by store_key 


[2021-06-15 20:07:34,305][INFO][zmaxx-etl.sale] [5 222.2]
[2021-06-15 20:07:34,305][INFO][zmaxx-etl.sale] 222.2
[2021-06-15 20:07:34,316][INFO][zmaxx-etl.sale] [64 2289.66]
[2021-06-15 20:07:34,316][INFO][zmaxx-etl.sale] 2289.66
[2021-06-15 20:07:34,324][INFO][zmaxx-etl.sale] [3 393.2]
[2021-06-15 20:07:34,325][INFO][zmaxx-etl.sale] 393.2
[2021-06-15 20:07:34,335][INFO][zmaxx-etl.sale] [3 189.9]
[2021-06-15 20:07:34,335][INFO][zmaxx-etl.sale] 189.9
[2021-06-15 20:07:34,343][INFO][zmaxx-etl.sale] [0 0]
[2021-06-15 20:07:34,344][INFO][zmaxx-etl.sale] 0
[2021-06-15 20:07:34,358][INFO][zmaxx-etl.sale] [0 0]
[2021-06-15 20:07:34,358][INFO][zmaxx-etl.sale] 0
[2021-06-15 20:07:34,370][INFO][zmaxx-etl.sale] [0 0]
[2021-06-15 20:07:34,370][INFO][zmaxx-etl.sale] 0
[2021-06-15 20:07:34,384][INFO][zmaxx-etl.sale] [5 2893.7]
[2021-06-15 20:07:34,384][INFO][zmaxx-etl.sale] 2893.7
[2021-06-15 20:07:34,393][INFO][zmaxx-etl.sale] [0 0]
[2021-06-15 20:07:34,393][INFO][zmaxx-etl.sale] 0
[2021-06-15 20:07:34,404][INFO][zmaxx-etl.sale] [0 0]
[2021-06-15 20:07:34,404][INFO][zmaxx-etl.sale] 0
[2021-06-15 20:07:34,414][INFO][zmaxx-etl.sale] [0 0]
[2021-06-15 20:07:34,414][INFO][zmaxx-etl.sale] 0
[2021-06-15 20:07:34,424][INFO][zmaxx-etl.sale] [2 319.4]
[2021-06-15 20:07:34,424][INFO][zmaxx-etl.sale] 319.4
[2021-06-15 20:07:34,431][INFO][zmaxx-etl.sale] [1 276.7]
[2021-06-15 20:07:34,431][INFO][zmaxx-etl.sale] 276.7
[2021-06-15 20:07:34,439][INFO][zmaxx-etl.sale] [1 43.6]
[2021-06-15 20:07:34,439][INFO][zmaxx-etl.sale] 43.6
[2021-06-15 20:07:34,448][INFO][zmaxx-etl.sale] [0 0]
[2021-06-15 20:07:34,448][INFO][zmaxx-etl.sale] 0
[2021-06-15 20:09:39,739][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                          # sum(zorder.order_price) as payment , 
                          # (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                          # (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           #sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           #AVG(zorder.order_pay) as avg_order_pay,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(orderI.sku_id)) as sku_distinct_count,
                           count(distinct(zorder.customer_key)) as user_count
                   from order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
		   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 23:00:00'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-15 20:09:40,494][INFO][zmaxx-etl.db-client] 
select market as store_key ,sum(lsjje)*-1 as payment ,sum(zzk)*-1 as zzk ,sum(jj) as jj  from rd_pss where 
rq  >=  '2021-05-11 00:00:00'
and  rq <= '2021-05-11 23:00:00'
and ( type = 105 or type = 106)
group by market 


[2021-06-15 20:09:40,820][INFO][zmaxx-etl.db-client] 
    select market,sum(kcsl)  as kcsl from rd_product_stock where kcsl > 0 group by market 


[2021-06-15 20:09:40,981][INFO][zmaxx-etl.db-client] 
select store_key,COUNT(DISTINCT(customer_key)) as new_u,sum(order_price) as new_u_pay from zmaxx_001.order 
where  customer_key not in
(
select distinct(customer_key) as old_key from zmaxx_001.order   where      order_create  <= '2021-05-11 00:00:00'
)
and order_create >=  '2021-05-11 00:00:00'  and   order_create  <= '2021-05-11 23:00:00'
group by store_key 


[2021-06-15 20:09:41,501][INFO][zmaxx-etl.sale] [5 222.2]
[2021-06-15 20:09:41,501][INFO][zmaxx-etl.sale] 222.2
[2021-06-15 20:09:41,501][INFO][zmaxx-etl.sale] 0.23473484048172405
[2021-06-15 20:09:41,505][INFO][zmaxx-etl.sale] [64 2289.66]
[2021-06-15 20:09:41,505][INFO][zmaxx-etl.sale] 2289.66
[2021-06-15 20:09:41,505][INFO][zmaxx-etl.sale] 0.5938993074468912
[2021-06-15 20:09:41,510][INFO][zmaxx-etl.sale] [3 393.2]
[2021-06-15 20:09:41,510][INFO][zmaxx-etl.sale] 393.2
[2021-06-15 20:09:41,511][INFO][zmaxx-etl.sale] 0.1948270736299673
[2021-06-15 20:09:41,515][INFO][zmaxx-etl.sale] [3 189.9]
[2021-06-15 20:09:41,515][INFO][zmaxx-etl.sale] 189.9
[2021-06-15 20:09:41,515][INFO][zmaxx-etl.sale] 0.2602439358640537
[2021-06-15 20:09:41,523][INFO][zmaxx-etl.sale] [0 0]
[2021-06-15 20:09:41,523][INFO][zmaxx-etl.sale] 0
[2021-06-15 20:09:41,523][INFO][zmaxx-etl.sale] 0.0
[2021-06-15 20:09:41,532][INFO][zmaxx-etl.sale] [0 0]
[2021-06-15 20:09:41,532][INFO][zmaxx-etl.sale] 0
[2021-06-15 20:09:41,532][INFO][zmaxx-etl.sale] 0.0
[2021-06-15 20:09:41,537][INFO][zmaxx-etl.sale] [0 0]
[2021-06-15 20:09:41,537][INFO][zmaxx-etl.sale] 0
[2021-06-15 20:09:41,537][INFO][zmaxx-etl.sale] 0.0
[2021-06-15 20:09:41,542][INFO][zmaxx-etl.sale] [5 2893.7]
[2021-06-15 20:09:41,542][INFO][zmaxx-etl.sale] 2893.7
[2021-06-15 20:09:41,542][INFO][zmaxx-etl.sale] 0.6152881139698064
[2021-06-15 20:09:41,547][INFO][zmaxx-etl.sale] [0 0]
[2021-06-15 20:09:41,547][INFO][zmaxx-etl.sale] 0
[2021-06-15 20:09:41,547][INFO][zmaxx-etl.sale] 0.0
[2021-06-15 20:09:41,551][INFO][zmaxx-etl.sale] [0 0]
[2021-06-15 20:09:41,551][INFO][zmaxx-etl.sale] 0
[2021-06-15 20:09:41,551][INFO][zmaxx-etl.sale] 0.0
[2021-06-15 20:09:41,557][INFO][zmaxx-etl.sale] [0 0]
[2021-06-15 20:09:41,557][INFO][zmaxx-etl.sale] 0
[2021-06-15 20:09:41,557][INFO][zmaxx-etl.sale] 0.0
[2021-06-15 20:09:41,566][INFO][zmaxx-etl.sale] [2 319.4]
[2021-06-15 20:09:41,566][INFO][zmaxx-etl.sale] 319.4
[2021-06-15 20:09:41,566][INFO][zmaxx-etl.sale] 0.03082595016117513
[2021-06-15 20:09:41,570][INFO][zmaxx-etl.sale] [1 276.7]
[2021-06-15 20:09:41,570][INFO][zmaxx-etl.sale] 276.7
[2021-06-15 20:09:41,570][INFO][zmaxx-etl.sale] 0.10485032209170139
[2021-06-15 20:09:41,575][INFO][zmaxx-etl.sale] [1 43.6]
[2021-06-15 20:09:41,575][INFO][zmaxx-etl.sale] 43.6
[2021-06-15 20:09:41,575][INFO][zmaxx-etl.sale] 0.1055434519486807
[2021-06-15 20:09:41,579][INFO][zmaxx-etl.sale] [0 0]
[2021-06-15 20:09:41,579][INFO][zmaxx-etl.sale] 0
[2021-06-15 20:09:41,579][INFO][zmaxx-etl.sale] 0.0
[2021-06-15 20:10:08,425][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                          # sum(zorder.order_price) as payment , 
                          # (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                          # (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           #sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           #AVG(zorder.order_pay) as avg_order_pay,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(orderI.sku_id)) as sku_distinct_count,
                           count(distinct(zorder.customer_key)) as user_count
                   from order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
		   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 23:00:00'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-15 20:10:09,228][INFO][zmaxx-etl.db-client] 
select market as store_key ,sum(lsjje)*-1 as payment ,sum(zzk)*-1 as zzk ,sum(jj) as jj  from rd_pss where 
rq  >=  '2021-05-11 00:00:00'
and  rq <= '2021-05-11 23:00:00'
and ( type = 105 or type = 106)
group by market 


[2021-06-15 20:10:09,544][INFO][zmaxx-etl.db-client] 
    select market,sum(kcsl)  as kcsl from rd_product_stock where kcsl > 0 group by market 


[2021-06-15 20:10:09,667][INFO][zmaxx-etl.db-client] 
select store_key,COUNT(DISTINCT(customer_key)) as new_u,sum(order_price) as new_u_pay from zmaxx_001.order 
where  customer_key not in
(
select distinct(customer_key) as old_key from zmaxx_001.order   where      order_create  <= '2021-05-11 00:00:00'
)
and order_create >=  '2021-05-11 00:00:00'  and   order_create  <= '2021-05-11 23:00:00'
group by store_key 


[2021-06-15 20:10:10,122][INFO][zmaxx-etl.sale] [5 222.2]
[2021-06-15 20:10:10,122][INFO][zmaxx-etl.sale] 222.2
[2021-06-15 20:10:10,122][INFO][zmaxx-etl.sale] 0.23473484048172405
[2021-06-15 20:10:10,127][INFO][zmaxx-etl.sale] [64 2289.66]
[2021-06-15 20:10:10,127][INFO][zmaxx-etl.sale] 2289.66
[2021-06-15 20:10:10,127][INFO][zmaxx-etl.sale] 0.5938993074468912
[2021-06-15 20:10:10,133][INFO][zmaxx-etl.sale] [3 393.2]
[2021-06-15 20:10:10,133][INFO][zmaxx-etl.sale] 393.2
[2021-06-15 20:10:10,133][INFO][zmaxx-etl.sale] 0.1948270736299673
[2021-06-15 20:10:10,138][INFO][zmaxx-etl.sale] [3 189.9]
[2021-06-15 20:10:10,138][INFO][zmaxx-etl.sale] 189.9
[2021-06-15 20:10:10,138][INFO][zmaxx-etl.sale] 0.2602439358640537
[2021-06-15 20:10:10,143][INFO][zmaxx-etl.sale] [0 0]
[2021-06-15 20:10:10,143][INFO][zmaxx-etl.sale] 0
[2021-06-15 20:10:10,143][INFO][zmaxx-etl.sale] 0.0
[2021-06-15 20:10:10,149][INFO][zmaxx-etl.sale] [0 0]
[2021-06-15 20:10:10,149][INFO][zmaxx-etl.sale] 0
[2021-06-15 20:10:10,149][INFO][zmaxx-etl.sale] 0.0
[2021-06-15 20:10:10,158][INFO][zmaxx-etl.sale] [0 0]
[2021-06-15 20:10:10,158][INFO][zmaxx-etl.sale] 0
[2021-06-15 20:10:10,158][INFO][zmaxx-etl.sale] 0.0
[2021-06-15 20:10:10,163][INFO][zmaxx-etl.sale] [5 2893.7]
[2021-06-15 20:10:10,163][INFO][zmaxx-etl.sale] 2893.7
[2021-06-15 20:10:10,163][INFO][zmaxx-etl.sale] 0.6152881139698064
[2021-06-15 20:10:10,168][INFO][zmaxx-etl.sale] [0 0]
[2021-06-15 20:10:10,168][INFO][zmaxx-etl.sale] 0
[2021-06-15 20:10:10,168][INFO][zmaxx-etl.sale] 0.0
[2021-06-15 20:10:10,173][INFO][zmaxx-etl.sale] [0 0]
[2021-06-15 20:10:10,173][INFO][zmaxx-etl.sale] 0
[2021-06-15 20:10:10,173][INFO][zmaxx-etl.sale] 0.0
[2021-06-15 20:10:10,179][INFO][zmaxx-etl.sale] [0 0]
[2021-06-15 20:10:10,179][INFO][zmaxx-etl.sale] 0
[2021-06-15 20:10:10,179][INFO][zmaxx-etl.sale] 0.0
[2021-06-15 20:10:10,184][INFO][zmaxx-etl.sale] [2 319.4]
[2021-06-15 20:10:10,184][INFO][zmaxx-etl.sale] 319.4
[2021-06-15 20:10:10,184][INFO][zmaxx-etl.sale] 0.03082595016117513
[2021-06-15 20:10:10,192][INFO][zmaxx-etl.sale] [1 276.7]
[2021-06-15 20:10:10,192][INFO][zmaxx-etl.sale] 276.7
[2021-06-15 20:10:10,192][INFO][zmaxx-etl.sale] 0.10485032209170139
[2021-06-15 20:10:10,197][INFO][zmaxx-etl.sale] [1 43.6]
[2021-06-15 20:10:10,197][INFO][zmaxx-etl.sale] 43.6
[2021-06-15 20:10:10,197][INFO][zmaxx-etl.sale] 0.1055434519486807
[2021-06-15 20:10:10,202][INFO][zmaxx-etl.sale] [0 0]
[2021-06-15 20:10:10,202][INFO][zmaxx-etl.sale] 0
[2021-06-15 20:10:10,202][INFO][zmaxx-etl.sale] 0.0
[2021-06-15 20:11:10,227][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                          # sum(zorder.order_price) as payment , 
                          # (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                          # (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           #sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           #AVG(zorder.order_pay) as avg_order_pay,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(orderI.sku_id)) as sku_distinct_count,
                           count(distinct(zorder.customer_key)) as user_count
                   from order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
		   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 23:00:00'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-15 20:11:10,984][INFO][zmaxx-etl.db-client] 
select market as store_key ,sum(lsjje)*-1 as payment ,sum(zzk)*-1 as zzk ,sum(jj) as jj  from rd_pss where 
rq  >=  '2021-05-11 00:00:00'
and  rq <= '2021-05-11 23:00:00'
and ( type = 105 or type = 106)
group by market 


[2021-06-15 20:11:11,295][INFO][zmaxx-etl.db-client] 
    select market,sum(kcsl)  as kcsl from rd_product_stock where kcsl > 0 group by market 


[2021-06-15 20:11:11,416][INFO][zmaxx-etl.db-client] 
select store_key,COUNT(DISTINCT(customer_key)) as new_u,sum(order_price) as new_u_pay from zmaxx_001.order 
where  customer_key not in
(
select distinct(customer_key) as old_key from zmaxx_001.order   where      order_create  <= '2021-05-11 00:00:00'
)
and order_create >=  '2021-05-11 00:00:00'  and   order_create  <= '2021-05-11 23:00:00'
group by store_key 


[2021-06-15 20:11:11,857][INFO][zmaxx-etl.sale] [5 222.2]
[2021-06-15 20:11:11,857][INFO][zmaxx-etl.sale] 222.2
[2021-06-15 20:11:11,857][INFO][zmaxx-etl.sale] 0.23473484048172405
[2021-06-15 20:11:11,862][INFO][zmaxx-etl.sale] [64 2289.66]
[2021-06-15 20:11:11,862][INFO][zmaxx-etl.sale] 2289.66
[2021-06-15 20:11:11,862][INFO][zmaxx-etl.sale] 0.5938993074468912
[2021-06-15 20:11:11,867][INFO][zmaxx-etl.sale] [3 393.2]
[2021-06-15 20:11:11,867][INFO][zmaxx-etl.sale] 393.2
[2021-06-15 20:11:11,867][INFO][zmaxx-etl.sale] 0.1948270736299673
[2021-06-15 20:11:11,872][INFO][zmaxx-etl.sale] [3 189.9]
[2021-06-15 20:11:11,872][INFO][zmaxx-etl.sale] 189.9
[2021-06-15 20:11:11,872][INFO][zmaxx-etl.sale] 0.2602439358640537
[2021-06-15 20:11:11,877][INFO][zmaxx-etl.sale] [0 0]
[2021-06-15 20:11:11,878][INFO][zmaxx-etl.sale] 0
[2021-06-15 20:11:11,878][INFO][zmaxx-etl.sale] 0.0
[2021-06-15 20:11:11,888][INFO][zmaxx-etl.sale] [0 0]
[2021-06-15 20:11:11,888][INFO][zmaxx-etl.sale] 0
[2021-06-15 20:11:11,888][INFO][zmaxx-etl.sale] 0.0
[2021-06-15 20:11:11,894][INFO][zmaxx-etl.sale] [0 0]
[2021-06-15 20:11:11,894][INFO][zmaxx-etl.sale] 0
[2021-06-15 20:11:11,894][INFO][zmaxx-etl.sale] 0.0
[2021-06-15 20:11:11,899][INFO][zmaxx-etl.sale] [5 2893.7]
[2021-06-15 20:11:11,899][INFO][zmaxx-etl.sale] 2893.7
[2021-06-15 20:11:11,899][INFO][zmaxx-etl.sale] 0.6152881139698064
[2021-06-15 20:11:11,905][INFO][zmaxx-etl.sale] [0 0]
[2021-06-15 20:11:11,905][INFO][zmaxx-etl.sale] 0
[2021-06-15 20:11:11,905][INFO][zmaxx-etl.sale] 0.0
[2021-06-15 20:11:11,910][INFO][zmaxx-etl.sale] [0 0]
[2021-06-15 20:11:11,910][INFO][zmaxx-etl.sale] 0
[2021-06-15 20:11:11,910][INFO][zmaxx-etl.sale] 0.0
[2021-06-15 20:11:11,921][INFO][zmaxx-etl.sale] [0 0]
[2021-06-15 20:11:11,921][INFO][zmaxx-etl.sale] 0
[2021-06-15 20:11:11,921][INFO][zmaxx-etl.sale] 0.0
[2021-06-15 20:11:11,927][INFO][zmaxx-etl.sale] [2 319.4]
[2021-06-15 20:11:11,927][INFO][zmaxx-etl.sale] 319.4
[2021-06-15 20:11:11,927][INFO][zmaxx-etl.sale] 0.03082595016117513
[2021-06-15 20:11:11,932][INFO][zmaxx-etl.sale] [1 276.7]
[2021-06-15 20:11:11,932][INFO][zmaxx-etl.sale] 276.7
[2021-06-15 20:11:11,932][INFO][zmaxx-etl.sale] 0.10485032209170139
[2021-06-15 20:11:11,939][INFO][zmaxx-etl.sale] [1 43.6]
[2021-06-15 20:11:11,939][INFO][zmaxx-etl.sale] 43.6
[2021-06-15 20:11:11,939][INFO][zmaxx-etl.sale] 0.1055434519486807
[2021-06-15 20:11:11,944][INFO][zmaxx-etl.sale] [0 0]
[2021-06-15 20:11:11,944][INFO][zmaxx-etl.sale] 0
[2021-06-15 20:11:11,945][INFO][zmaxx-etl.sale] 0.0
[2021-06-15 20:12:14,816][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                          # sum(zorder.order_price) as payment , 
                          # (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                          # (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           #sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           #AVG(zorder.order_pay) as avg_order_pay,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(orderI.sku_id)) as sku_distinct_count,
                           count(distinct(zorder.customer_key)) as user_count
                   from order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
		   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 23:00:00'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-15 20:12:15,608][INFO][zmaxx-etl.db-client] 
select market as store_key ,sum(lsjje)*-1 as payment ,sum(zzk)*-1 as zzk ,sum(jj) as jj  from rd_pss where 
rq  >=  '2021-05-11 00:00:00'
and  rq <= '2021-05-11 23:00:00'
and ( type = 105 or type = 106)
group by market 


[2021-06-15 20:12:15,915][INFO][zmaxx-etl.db-client] 
    select market,sum(kcsl)  as kcsl from rd_product_stock where kcsl > 0 group by market 


[2021-06-15 20:12:16,076][INFO][zmaxx-etl.db-client] 
select store_key,COUNT(DISTINCT(customer_key)) as new_u,sum(order_price) as new_u_pay from zmaxx_001.order 
where  customer_key not in
(
select distinct(customer_key) as old_key from zmaxx_001.order   where      order_create  <= '2021-05-11 00:00:00'
)
and order_create >=  '2021-05-11 00:00:00'  and   order_create  <= '2021-05-11 23:00:00'
group by store_key 


[2021-06-15 20:12:16,528][INFO][zmaxx-etl.sale] [5 222.2]
[2021-06-15 20:12:16,528][INFO][zmaxx-etl.sale] 222.2
[2021-06-15 20:12:16,528][INFO][zmaxx-etl.sale] 0.23473484048172405
[2021-06-15 20:12:16,542][INFO][zmaxx-etl.sale] [64 2289.66]
[2021-06-15 20:12:16,542][INFO][zmaxx-etl.sale] 2289.66
[2021-06-15 20:12:16,542][INFO][zmaxx-etl.sale] 0.5938993074468912
[2021-06-15 20:12:16,553][INFO][zmaxx-etl.sale] [3 393.2]
[2021-06-15 20:12:16,553][INFO][zmaxx-etl.sale] 393.2
[2021-06-15 20:12:16,553][INFO][zmaxx-etl.sale] 0.1948270736299673
[2021-06-15 20:12:16,568][INFO][zmaxx-etl.sale] [3 189.9]
[2021-06-15 20:12:16,569][INFO][zmaxx-etl.sale] 189.9
[2021-06-15 20:12:16,569][INFO][zmaxx-etl.sale] 0.2602439358640537
[2021-06-15 20:12:16,642][INFO][zmaxx-etl.sale] [0 0]
[2021-06-15 20:12:16,642][INFO][zmaxx-etl.sale] 0
[2021-06-15 20:12:16,642][INFO][zmaxx-etl.sale] 0.0
[2021-06-15 20:12:16,657][INFO][zmaxx-etl.sale] [0 0]
[2021-06-15 20:12:16,657][INFO][zmaxx-etl.sale] 0
[2021-06-15 20:12:16,657][INFO][zmaxx-etl.sale] 0.0
[2021-06-15 20:12:16,668][INFO][zmaxx-etl.sale] [0 0]
[2021-06-15 20:12:16,668][INFO][zmaxx-etl.sale] 0
[2021-06-15 20:12:16,668][INFO][zmaxx-etl.sale] 0.0
[2021-06-15 20:12:16,680][INFO][zmaxx-etl.sale] [5 2893.7]
[2021-06-15 20:12:16,680][INFO][zmaxx-etl.sale] 2893.7
[2021-06-15 20:12:16,680][INFO][zmaxx-etl.sale] 0.6152881139698064
[2021-06-15 20:12:16,691][INFO][zmaxx-etl.sale] [0 0]
[2021-06-15 20:12:16,691][INFO][zmaxx-etl.sale] 0
[2021-06-15 20:12:16,691][INFO][zmaxx-etl.sale] 0.0
[2021-06-15 20:12:16,702][INFO][zmaxx-etl.sale] [0 0]
[2021-06-15 20:12:16,702][INFO][zmaxx-etl.sale] 0
[2021-06-15 20:12:16,702][INFO][zmaxx-etl.sale] 0.0
[2021-06-15 20:12:16,714][INFO][zmaxx-etl.sale] [0 0]
[2021-06-15 20:12:16,714][INFO][zmaxx-etl.sale] 0
[2021-06-15 20:12:16,714][INFO][zmaxx-etl.sale] 0.0
[2021-06-15 20:12:16,727][INFO][zmaxx-etl.sale] [2 319.4]
[2021-06-15 20:12:16,727][INFO][zmaxx-etl.sale] 319.4
[2021-06-15 20:12:16,727][INFO][zmaxx-etl.sale] 0.03082595016117513
[2021-06-15 20:12:16,739][INFO][zmaxx-etl.sale] [1 276.7]
[2021-06-15 20:12:16,739][INFO][zmaxx-etl.sale] 276.7
[2021-06-15 20:12:16,739][INFO][zmaxx-etl.sale] 0.10485032209170139
[2021-06-15 20:12:16,749][INFO][zmaxx-etl.sale] [1 43.6]
[2021-06-15 20:12:16,749][INFO][zmaxx-etl.sale] 43.6
[2021-06-15 20:12:16,749][INFO][zmaxx-etl.sale] 0.1055434519486807
[2021-06-15 20:12:16,760][INFO][zmaxx-etl.sale] [0 0]
[2021-06-15 20:12:16,760][INFO][zmaxx-etl.sale] 0
[2021-06-15 20:12:16,760][INFO][zmaxx-etl.sale] 0.0
[2021-06-15 20:12:36,732][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                          # sum(zorder.order_price) as payment , 
                          # (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                          # (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           #sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           #AVG(zorder.order_pay) as avg_order_pay,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(orderI.sku_id)) as sku_distinct_count,
                           count(distinct(zorder.customer_key)) as user_count
                   from order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
		   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 23:00:00'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-15 20:12:37,513][INFO][zmaxx-etl.db-client] 
select market as store_key ,sum(lsjje)*-1 as payment ,sum(zzk)*-1 as zzk ,sum(jj) as jj  from rd_pss where 
rq  >=  '2021-05-11 00:00:00'
and  rq <= '2021-05-11 23:00:00'
and ( type = 105 or type = 106)
group by market 


[2021-06-15 20:12:37,829][INFO][zmaxx-etl.db-client] 
    select market,sum(kcsl)  as kcsl from rd_product_stock where kcsl > 0 group by market 


[2021-06-15 20:12:37,945][INFO][zmaxx-etl.db-client] 
select store_key,COUNT(DISTINCT(customer_key)) as new_u,sum(order_price) as new_u_pay from zmaxx_001.order 
where  customer_key not in
(
select distinct(customer_key) as old_key from zmaxx_001.order   where      order_create  <= '2021-05-11 00:00:00'
)
and order_create >=  '2021-05-11 00:00:00'  and   order_create  <= '2021-05-11 23:00:00'
group by store_key 


[2021-06-15 20:12:38,375][INFO][zmaxx-etl.sale] [5 222.2]
[2021-06-15 20:12:38,375][INFO][zmaxx-etl.sale] 222.2
[2021-06-15 20:12:38,375][INFO][zmaxx-etl.sale] 0.23473484048172405
[2021-06-15 20:12:38,385][INFO][zmaxx-etl.sale] [64 2289.66]
[2021-06-15 20:12:38,385][INFO][zmaxx-etl.sale] 2289.66
[2021-06-15 20:12:38,386][INFO][zmaxx-etl.sale] 0.5938993074468912
[2021-06-15 20:12:38,397][INFO][zmaxx-etl.sale] [3 393.2]
[2021-06-15 20:12:38,397][INFO][zmaxx-etl.sale] 393.2
[2021-06-15 20:12:38,397][INFO][zmaxx-etl.sale] 0.1948270736299673
[2021-06-15 20:12:38,412][INFO][zmaxx-etl.sale] [3 189.9]
[2021-06-15 20:12:38,412][INFO][zmaxx-etl.sale] 189.9
[2021-06-15 20:12:38,412][INFO][zmaxx-etl.sale] 0.2602439358640537
[2021-06-15 20:12:38,430][INFO][zmaxx-etl.sale] [0 0]
[2021-06-15 20:12:38,430][INFO][zmaxx-etl.sale] 0
[2021-06-15 20:12:38,430][INFO][zmaxx-etl.sale] 0.0
[2021-06-15 20:12:38,443][INFO][zmaxx-etl.sale] [0 0]
[2021-06-15 20:12:38,443][INFO][zmaxx-etl.sale] 0
[2021-06-15 20:12:38,443][INFO][zmaxx-etl.sale] 0.0
[2021-06-15 20:12:38,460][INFO][zmaxx-etl.sale] [0 0]
[2021-06-15 20:12:38,460][INFO][zmaxx-etl.sale] 0
[2021-06-15 20:12:38,460][INFO][zmaxx-etl.sale] 0.0
[2021-06-15 20:12:38,475][INFO][zmaxx-etl.sale] [5 2893.7]
[2021-06-15 20:12:38,475][INFO][zmaxx-etl.sale] 2893.7
[2021-06-15 20:12:38,475][INFO][zmaxx-etl.sale] 0.6152881139698064
[2021-06-15 20:12:38,492][INFO][zmaxx-etl.sale] [0 0]
[2021-06-15 20:12:38,492][INFO][zmaxx-etl.sale] 0
[2021-06-15 20:12:38,492][INFO][zmaxx-etl.sale] 0.0
[2021-06-15 20:12:38,509][INFO][zmaxx-etl.sale] [0 0]
[2021-06-15 20:12:38,510][INFO][zmaxx-etl.sale] 0
[2021-06-15 20:12:38,510][INFO][zmaxx-etl.sale] 0.0
[2021-06-15 20:12:38,527][INFO][zmaxx-etl.sale] [0 0]
[2021-06-15 20:12:38,528][INFO][zmaxx-etl.sale] 0
[2021-06-15 20:12:38,528][INFO][zmaxx-etl.sale] 0.0
[2021-06-15 20:12:38,545][INFO][zmaxx-etl.sale] [2 319.4]
[2021-06-15 20:12:38,546][INFO][zmaxx-etl.sale] 319.4
[2021-06-15 20:12:38,546][INFO][zmaxx-etl.sale] 0.03082595016117513
[2021-06-15 20:12:38,556][INFO][zmaxx-etl.sale] [1 276.7]
[2021-06-15 20:12:38,556][INFO][zmaxx-etl.sale] 276.7
[2021-06-15 20:12:38,556][INFO][zmaxx-etl.sale] 0.10485032209170139
[2021-06-15 20:12:38,570][INFO][zmaxx-etl.sale] [1 43.6]
[2021-06-15 20:12:38,570][INFO][zmaxx-etl.sale] 43.6
[2021-06-15 20:12:38,570][INFO][zmaxx-etl.sale] 0.1055434519486807
[2021-06-15 20:12:38,580][INFO][zmaxx-etl.sale] [0 0]
[2021-06-15 20:12:38,580][INFO][zmaxx-etl.sale] 0
[2021-06-15 20:12:38,580][INFO][zmaxx-etl.sale] 0.0
[2021-06-15 20:14:56,765][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                          # sum(zorder.order_price) as payment , 
                          # (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                          # (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           #sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           #AVG(zorder.order_pay) as avg_order_pay,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(orderI.sku_id)) as sku_distinct_count,
                           count(distinct(zorder.customer_key)) as user_count
                   from order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
		   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 23:00:00'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-15 20:14:57,552][INFO][zmaxx-etl.db-client] 
select market as store_key ,sum(lsjje)*-1 as payment ,sum(zzk)*-1 as zzk ,sum(jj) as jj  from rd_pss where 
rq  >=  '2021-05-11 00:00:00'
and  rq <= '2021-05-11 23:00:00'
and ( type = 105 or type = 106)
group by market 


[2021-06-15 20:14:57,861][INFO][zmaxx-etl.db-client] 
    select market,sum(kcsl)  as kcsl from rd_product_stock where kcsl > 0 group by market 


[2021-06-15 20:14:57,984][INFO][zmaxx-etl.db-client] 
select store_key,COUNT(DISTINCT(customer_key)) as new_u,sum(order_price) as new_u_pay from zmaxx_001.order 
where  customer_key not in
(
select distinct(customer_key) as old_key from zmaxx_001.order   where      order_create  <= '2021-05-11 00:00:00'
)
and order_create >=  '2021-05-11 00:00:00'  and   order_create  <= '2021-05-11 23:00:00'
group by store_key 


[2021-06-15 20:14:58,432][INFO][zmaxx-etl.db-client] 
select store_key,count(order_id) as user_null_count from zmaxx_001.order 
where customer_key = 0  and order_create >=  '2021-05-11 00:00:00'  and   order_create  <= '2021-05-11 23:00:00'
group by store_key;


[2021-06-15 20:14:58,438][INFO][zmaxx-etl.sale] [5 222.2]
[2021-06-15 20:14:58,438][INFO][zmaxx-etl.sale] 222.2
[2021-06-15 20:14:58,438][INFO][zmaxx-etl.sale] 0.23473484048172405
[2021-06-15 20:14:58,446][INFO][zmaxx-etl.sale] [64 2289.66]
[2021-06-15 20:14:58,446][INFO][zmaxx-etl.sale] 2289.66
[2021-06-15 20:14:58,446][INFO][zmaxx-etl.sale] 0.5938993074468912
[2021-06-15 20:14:58,453][INFO][zmaxx-etl.sale] [3 393.2]
[2021-06-15 20:14:58,453][INFO][zmaxx-etl.sale] 393.2
[2021-06-15 20:14:58,453][INFO][zmaxx-etl.sale] 0.1948270736299673
[2021-06-15 20:14:58,462][INFO][zmaxx-etl.sale] [3 189.9]
[2021-06-15 20:14:58,462][INFO][zmaxx-etl.sale] 189.9
[2021-06-15 20:14:58,462][INFO][zmaxx-etl.sale] 0.2602439358640537
[2021-06-15 20:14:58,473][INFO][zmaxx-etl.sale] [0 0]
[2021-06-15 20:14:58,473][INFO][zmaxx-etl.sale] 0
[2021-06-15 20:14:58,473][INFO][zmaxx-etl.sale] 0.0
[2021-06-15 20:14:58,484][INFO][zmaxx-etl.sale] [0 0]
[2021-06-15 20:14:58,484][INFO][zmaxx-etl.sale] 0
[2021-06-15 20:14:58,484][INFO][zmaxx-etl.sale] 0.0
[2021-06-15 20:14:58,496][INFO][zmaxx-etl.sale] [0 0]
[2021-06-15 20:14:58,496][INFO][zmaxx-etl.sale] 0
[2021-06-15 20:14:58,496][INFO][zmaxx-etl.sale] 0.0
[2021-06-15 20:14:58,508][INFO][zmaxx-etl.sale] [5 2893.7]
[2021-06-15 20:14:58,508][INFO][zmaxx-etl.sale] 2893.7
[2021-06-15 20:14:58,508][INFO][zmaxx-etl.sale] 0.6152881139698064
[2021-06-15 20:14:58,519][INFO][zmaxx-etl.sale] [0 0]
[2021-06-15 20:14:58,520][INFO][zmaxx-etl.sale] 0
[2021-06-15 20:14:58,520][INFO][zmaxx-etl.sale] 0.0
[2021-06-15 20:14:58,532][INFO][zmaxx-etl.sale] [0 0]
[2021-06-15 20:14:58,532][INFO][zmaxx-etl.sale] 0
[2021-06-15 20:14:58,532][INFO][zmaxx-etl.sale] 0.0
[2021-06-15 20:14:58,545][INFO][zmaxx-etl.sale] [0 0]
[2021-06-15 20:14:58,545][INFO][zmaxx-etl.sale] 0
[2021-06-15 20:14:58,545][INFO][zmaxx-etl.sale] 0.0
[2021-06-15 20:14:58,555][INFO][zmaxx-etl.sale] [2 319.4]
[2021-06-15 20:14:58,555][INFO][zmaxx-etl.sale] 319.4
[2021-06-15 20:14:58,555][INFO][zmaxx-etl.sale] 0.03082595016117513
[2021-06-15 20:14:58,566][INFO][zmaxx-etl.sale] [1 276.7]
[2021-06-15 20:14:58,566][INFO][zmaxx-etl.sale] 276.7
[2021-06-15 20:14:58,566][INFO][zmaxx-etl.sale] 0.10485032209170139
[2021-06-15 20:14:58,577][INFO][zmaxx-etl.sale] [1 43.6]
[2021-06-15 20:14:58,577][INFO][zmaxx-etl.sale] 43.6
[2021-06-15 20:14:58,577][INFO][zmaxx-etl.sale] 0.1055434519486807
[2021-06-15 20:14:58,591][INFO][zmaxx-etl.sale] [0 0]
[2021-06-15 20:14:58,591][INFO][zmaxx-etl.sale] 0
[2021-06-15 20:14:58,591][INFO][zmaxx-etl.sale] 0.0
[2021-06-15 20:16:17,527][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                          # sum(zorder.order_price) as payment , 
                          # (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                          # (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           #sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           #AVG(zorder.order_pay) as avg_order_pay,
                           #sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(orderI.sku_id)) as sku_distinct_count,
                           count(distinct(zorder.customer_key)) as user_count
                   from order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
		   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 23:00:00'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-15 20:16:18,327][INFO][zmaxx-etl.db-client] 
select market as store_key ,sum(lsjje)*-1 as payment ,sum(zzk)*-1 as zzk ,sum(jj) as jj  from rd_pss where 
rq  >=  '2021-05-11 00:00:00'
and  rq <= '2021-05-11 23:00:00'
and ( type = 105 or type = 106)
group by market 


[2021-06-15 20:16:18,637][INFO][zmaxx-etl.db-client] 
    select market,sum(kcsl)  as kcsl from rd_product_stock where kcsl > 0 group by market 


[2021-06-15 20:16:18,765][INFO][zmaxx-etl.db-client] 
select store_key,COUNT(DISTINCT(customer_key)) as new_u,sum(order_price) as new_u_pay from zmaxx_001.order 
where  customer_key not in
(
select distinct(customer_key) as old_key from zmaxx_001.order   where      order_create  <= '2021-05-11 00:00:00'
)
and order_create >=  '2021-05-11 00:00:00'  and   order_create  <= '2021-05-11 23:00:00'
group by store_key 


[2021-06-15 20:16:19,201][INFO][zmaxx-etl.db-client] 
select store_key,count(order_id) as user_null_count from zmaxx_001.order 
where customer_key = 0  and order_create >=  '2021-05-11 00:00:00'  and   order_create  <= '2021-05-11 23:00:00'
group by store_key;


[2021-06-15 20:16:19,205][INFO][zmaxx-etl.sale] [5 222.2]
[2021-06-15 20:16:19,205][INFO][zmaxx-etl.sale] 222.2
[2021-06-15 20:16:19,206][INFO][zmaxx-etl.sale] 0.23473484048172405
[2021-06-15 20:16:19,222][INFO][zmaxx-etl.sale] [64 2289.66]
[2021-06-15 20:16:19,223][INFO][zmaxx-etl.sale] 2289.66
[2021-06-15 20:16:19,223][INFO][zmaxx-etl.sale] 0.5938993074468912
[2021-06-15 20:16:19,233][INFO][zmaxx-etl.sale] [3 393.2]
[2021-06-15 20:16:19,233][INFO][zmaxx-etl.sale] 393.2
[2021-06-15 20:16:19,233][INFO][zmaxx-etl.sale] 0.1948270736299673
[2021-06-15 20:16:19,243][INFO][zmaxx-etl.sale] [3 189.9]
[2021-06-15 20:16:19,243][INFO][zmaxx-etl.sale] 189.9
[2021-06-15 20:16:19,243][INFO][zmaxx-etl.sale] 0.2602439358640537
[2021-06-15 20:16:19,250][INFO][zmaxx-etl.sale] [0 0]
[2021-06-15 20:16:19,250][INFO][zmaxx-etl.sale] 0
[2021-06-15 20:16:19,250][INFO][zmaxx-etl.sale] 0.0
[2021-06-15 20:16:19,256][INFO][zmaxx-etl.sale] [0 0]
[2021-06-15 20:16:19,256][INFO][zmaxx-etl.sale] 0
[2021-06-15 20:16:19,256][INFO][zmaxx-etl.sale] 0.0
[2021-06-15 20:16:19,264][INFO][zmaxx-etl.sale] [0 0]
[2021-06-15 20:16:19,264][INFO][zmaxx-etl.sale] 0
[2021-06-15 20:16:19,264][INFO][zmaxx-etl.sale] 0.0
[2021-06-15 20:16:19,272][INFO][zmaxx-etl.sale] [5 2893.7]
[2021-06-15 20:16:19,272][INFO][zmaxx-etl.sale] 2893.7
[2021-06-15 20:16:19,272][INFO][zmaxx-etl.sale] 0.6152881139698064
[2021-06-15 20:16:19,279][INFO][zmaxx-etl.sale] [0 0]
[2021-06-15 20:16:19,279][INFO][zmaxx-etl.sale] 0
[2021-06-15 20:16:19,279][INFO][zmaxx-etl.sale] 0.0
[2021-06-15 20:16:19,285][INFO][zmaxx-etl.sale] [0 0]
[2021-06-15 20:16:19,285][INFO][zmaxx-etl.sale] 0
[2021-06-15 20:16:19,285][INFO][zmaxx-etl.sale] 0.0
[2021-06-15 20:16:19,292][INFO][zmaxx-etl.sale] [0 0]
[2021-06-15 20:16:19,292][INFO][zmaxx-etl.sale] 0
[2021-06-15 20:16:19,292][INFO][zmaxx-etl.sale] 0.0
[2021-06-15 20:16:19,299][INFO][zmaxx-etl.sale] [2 319.4]
[2021-06-15 20:16:19,299][INFO][zmaxx-etl.sale] 319.4
[2021-06-15 20:16:19,299][INFO][zmaxx-etl.sale] 0.03082595016117513
[2021-06-15 20:16:19,306][INFO][zmaxx-etl.sale] [1 276.7]
[2021-06-15 20:16:19,306][INFO][zmaxx-etl.sale] 276.7
[2021-06-15 20:16:19,306][INFO][zmaxx-etl.sale] 0.10485032209170139
[2021-06-15 20:16:19,314][INFO][zmaxx-etl.sale] [1 43.6]
[2021-06-15 20:16:19,314][INFO][zmaxx-etl.sale] 43.6
[2021-06-15 20:16:19,314][INFO][zmaxx-etl.sale] 0.1055434519486807
[2021-06-15 20:16:19,322][INFO][zmaxx-etl.sale] [0 0]
[2021-06-15 20:16:19,322][INFO][zmaxx-etl.sale] 0
[2021-06-15 20:16:19,322][INFO][zmaxx-etl.sale] 0.0
