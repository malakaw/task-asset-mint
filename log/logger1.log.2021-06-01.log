[2021-06-01 14:47:32,733][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                           sum(orderI.sku_pay) as payment , 
                           (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                           (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           AVG(zorder.order_pay) as avg_order_pay,
                           count(distinct(zorder.customer_key)) as user_count
                   from zmaxx_001.order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
				   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-06-01 00:00:00' 
                           and  orderI.create_dt <= '2021-06-01 24:00:00'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-01 14:47:32,753][INFO][com.mchange.v2.log.MLog] MLog clients using log4j logging.
[2021-06-01 14:47:33,168][INFO][com.mchange.v2.c3p0.C3P0Registry] Initializing c3p0-0.9.2.1 [built 20-March-2013 10:47:27 +0000; debug? true; trace: 10]
[2021-06-01 14:47:33,236][INFO][com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource] Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 2, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 2t22hnah1j11cp214k2euh|18c070fa, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> null, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 2t22hnah1j11cp214k2euh|18c070fa, idleConnectionTestPeriod -> 10, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://127.0.0.1:3306/zmaxx_001?zeroDateTimeBehavior=convertToNull, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 50, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 50, maxStatements -> 5, maxStatementsPerConnection -> 100, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> select 1, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, userOverrides -> {}, usesTraditionalReflectiveProxies -> false ]
[2021-06-01 14:47:50,226][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                           sum(orderI.sku_pay) as payment , 
                           (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                           (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           AVG(zorder.order_pay) as avg_order_pay,
                           count(distinct(zorder.customer_key)) as user_count
                   from zmaxx_001.order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
				   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-01 00:00:00' 
                           and  orderI.create_dt <= '2021-05-01 24:00:00'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-01 14:48:54,454][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                           sum(orderI.sku_pay) as payment , 
                           (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                           (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           AVG(zorder.order_pay) as avg_order_pay,
                           count(distinct(zorder.customer_key)) as user_count
                   from zmaxx_001.order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
				   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 24:00:00'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-01 16:25:38,165][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                           sum(orderI.sku_pay) as payment , 
                           (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                           (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           AVG(zorder.order_pay) as avg_order_pay,
                           count(distinct(zorder.customer_key)) as user_count
                   from zmaxx_001.order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
				   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 24:00:00'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-01 16:37:49,525][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                           sum(orderI.sku_pay) as payment , 
                           (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                           (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           AVG(zorder.order_pay) as avg_order_pay,
                           count(distinct(zorder.customer_key)) as user_count
                   from zmaxx_001.order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
				   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 24:00:00'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-01 16:43:58,998][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                           sum(orderI.sku_pay) as payment , 
                           (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                           (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           AVG(zorder.order_pay) as avg_order_pay,
                           count(distinct(zorder.customer_key)) as user_count
                   from zmaxx_001.order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
				   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 24:00:00'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-01 16:44:41,137][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                           sum(orderI.sku_pay) as payment , 
                           (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                           (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           AVG(zorder.order_pay) as avg_order_pay,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(zorder.customer_key)) as user_count
                   from zmaxx_001.order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
				   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 24:00:00'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-01 17:20:42,547][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                           sum(orderI.sku_pay) as payment , 
                           (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                           (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           AVG(zorder.order_pay) as avg_order_pay,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(zorder.customer_key)) as user_count
                   from zmaxx_001.order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
				   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 24:00:00'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-01 17:31:34,870][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                           sum(orderI.sku_pay) as payment , 
                           (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                           (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           AVG(zorder.order_pay) as avg_order_pay,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(zorder.customer_key)) as user_count
                   from zmaxx_001.order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
				   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 24:00:00'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-01 17:31:34,877][INFO][com.mchange.v2.log.MLog] MLog clients using log4j logging.
[2021-06-01 17:31:35,563][INFO][com.mchange.v2.c3p0.C3P0Registry] Initializing c3p0-0.9.2.1 [built 20-March-2013 10:47:27 +0000; debug? true; trace: 10]
[2021-06-01 17:31:35,606][INFO][com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource] Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 2, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, dataSourceName -> 2t22hnah1j6waw1promlb|79f459a2, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> null, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, identityToken -> 2t22hnah1j6waw1promlb|79f459a2, idleConnectionTestPeriod -> 10, initialPoolSize -> 1, jdbcUrl -> jdbc:mysql://127.0.0.1:3306/zmaxx_001?zeroDateTimeBehavior=convertToNull, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 50, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 50, maxStatements -> 5, maxStatementsPerConnection -> 100, minPoolSize -> 1, numHelperThreads -> 3, preferredTestQuery -> select 1, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, userOverrides -> {}, usesTraditionalReflectiveProxies -> false ]
[2021-06-01 17:32:46,159][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                           sum(orderI.sku_pay) as payment , 
                           (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                           (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           AVG(zorder.order_pay) as avg_order_pay,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(zorder.customer_key)) as user_count
                   from zmaxx_001.order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
				   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 24:00:00'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-01 17:32:46,959][INFO][zmaxx-etl.db-client] 
 INSERT INTO `rb_sale` ( `store_key`,
				     `store_name`, 
                                     `payment`,
                                     `gross_rate`, 
                                     `gross`,
                                     `sale_qty`,
                                     `purchase_qty`, 
                                     `unit_goods_price`, 
                                     `avg_order_pay`,
                                     `buy_user_count`, 
                                     `joint_rate`
                                     )
                                     VALUES
                                     (10, '上海（诺亚新天地店）', 13247.779999999868, 0.44018092272691195, 5831.420024483072, 2716.0, 4.8776804123710855, 32.429771, 15, 48.5);


[2021-06-01 17:32:46,960][ERROR][zmaxx-etl.db-client] java.lang.Character cannot be cast to java.lang.String
[2021-06-01 17:34:58,876][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                           sum(orderI.sku_pay) as payment , 
                           (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                           (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           AVG(zorder.order_pay) as avg_order_pay,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(zorder.customer_key)) as user_count
                   from zmaxx_001.order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
				   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 24:00:00'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-01 17:34:59,694][INFO][zmaxx-etl.db-client] 
 INSERT INTO `rb_sale` ( `store_key`,
				     `store_name`, 
                                     `payment`,
                                     `gross_rate`, 
                                     `gross`,
                                     `sale_qty`,
                                     `purchase_qty`, 
                                     `unit_goods_price`, 
                                     `avg_order_pay`,
                                     `buy_user_count`, 
                                     `joint_rate`
                                     )
                                     VALUES
                                     (10, '上海（诺亚新天地店）', 13247.779999999868, 0.44018092272691195, 5831.420024483072, 2716.0, 4.8776804123710855, 32.429771, 15, 48.5);


[2021-06-01 17:34:59,709][ERROR][zmaxx-etl.db-client] Column count doesn't match value count at row 1
[2021-06-01 17:39:26,499][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                           sum(orderI.sku_pay) as payment , 
                           (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                           (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           AVG(zorder.order_pay) as avg_order_pay,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(zorder.customer_key)) as user_count
                   from zmaxx_001.order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
				   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 24:00:00'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-01 17:39:27,292][INFO][zmaxx-etl.db-client] 
 INSERT INTO `rb_sale` ( `store_key`,
				     `store_name`, 
                                     `payment`,
                                     `gross_rate`, 
                                     `gross`,
                                     `sale_qty`,
                                     `purchase_qty`, 
                                     `unit_goods_price`, 
                                     `avg_order_pay`,
                                     `buy_user_count`, 
                                     `joint_rate`
                                     )
                                     VALUES
                                     (10, '上海（诺亚新天地店）', 13247.779999999868, 0.44018092272691195, 5831.420024483072, 2716.0, 3062256.0, 4.8776804123710855, 32.429771, 15);


[2021-06-01 17:39:27,295][ERROR][zmaxx-etl.db-client] Column count doesn't match value count at row 1
[2021-06-01 17:40:10,709][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                           sum(orderI.sku_pay) as payment , 
                           (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                           (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           AVG(zorder.order_pay) as avg_order_pay,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(zorder.customer_key)) as user_count
                   from zmaxx_001.order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
				   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 24:00:00'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-01 17:40:11,483][INFO][zmaxx-etl.db-client] 
 INSERT INTO `rb_sale` (             `store_key`,
				     `store_name`, 
                                     `payment`,
                                     `gross_rate`, 
                                     `gross`,
                                     `sale_qty`,
                                     `purchase_qty`, 
                                     `unit_goods_price`, 
                                     `avg_order_pay`,
                                     `buy_user_count`, 
                                     `joint_rate`
                                     )
                                     VALUES
                                     (10, '上海（诺亚新天地店）', 13247.779999999868, 0.44018092272691195, 5831.420024483072, 2716.0, 3062256.0, 4.8776804123710855, 32.429771, 15, 48.5);


[2021-06-01 17:48:48,129][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                           sum(orderI.sku_pay) as payment , 
                           (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                           (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           AVG(zorder.order_pay) as avg_order_pay,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(zorder.customer_key)) as user_count
                   from zmaxx_001.order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
				   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 24:00:00'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-01 17:48:48,959][INFO][zmaxx-etl.db-client] 
    select market,sum(kcsl)  as kcsl from rd_product_stock where kcsl > 0 group by market 


[2021-06-01 17:50:08,323][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                           sum(orderI.sku_pay) as payment , 
                           (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                           (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           AVG(zorder.order_pay) as avg_order_pay,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(zorder.customer_key)) as user_count
                   from zmaxx_001.order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
				   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 24:00:00'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-01 18:07:40,709][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                           sum(orderI.sku_pay) as payment , 
                           (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                           (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           AVG(zorder.order_pay) as avg_order_pay,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(zorder.customer_key)) as user_count
                   from zmaxx_001.order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
				   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 24:00:00'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-01 18:08:22,218][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                           sum(orderI.sku_pay) as payment , 
                           (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                           (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           AVG(zorder.order_pay) as avg_order_pay,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(zorder.customer_key)) as user_count
                   from zmaxx_001.order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
				   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 24:00:00'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-01 18:13:04,839][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                           sum(orderI.sku_pay) as payment , 
                           (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                           (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           AVG(zorder.order_pay) as avg_order_pay,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(zorder.customer_key)) as user_count
                   from zmaxx_001.order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
				   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 24:00:00'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-01 18:13:05,659][INFO][zmaxx-etl.db-client] 
    select market,sum(kcsl)  as kcsl from rd_product_stock where kcsl > 0 group by market 


[2021-06-01 18:13:35,910][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                           sum(orderI.sku_pay) as payment , 
                           (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                           (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           AVG(zorder.order_pay) as avg_order_pay,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(zorder.customer_key)) as user_count
                   from zmaxx_001.order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
				   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 24:00:00'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-01 18:13:36,694][INFO][zmaxx-etl.db-client] 
    select market,sum(kcsl)  as kcsl from rd_product_stock where kcsl > 0 group by market 


[2021-06-01 18:13:51,567][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                           sum(orderI.sku_pay) as payment , 
                           (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                           (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           AVG(zorder.order_pay) as avg_order_pay,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(zorder.customer_key)) as user_count
                   from zmaxx_001.order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
				   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 24:00:00'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-01 18:13:52,344][INFO][zmaxx-etl.db-client] 
    select market,sum(kcsl)  as kcsl from rd_product_stock where kcsl > 0 group by market 


[2021-06-01 18:14:30,503][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                           sum(orderI.sku_pay) as payment , 
                           (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                           (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           AVG(zorder.order_pay) as avg_order_pay,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(zorder.customer_key)) as user_count
                   from zmaxx_001.order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
				   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 24:00:00'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-01 18:14:31,296][INFO][zmaxx-etl.db-client] 
    select market,sum(kcsl)  as kcsl from rd_product_stock where kcsl > 0 group by market 


[2021-06-01 18:14:47,058][INFO][zmaxx-etl.db-client] 
    select market,sum(kcsl)  as kcsl from rd_product_stock where kcsl > 0 group by market 


[2021-06-01 18:14:57,303][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                           sum(orderI.sku_pay) as payment , 
                           (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                           (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           AVG(zorder.order_pay) as avg_order_pay,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(zorder.customer_key)) as user_count
                   from zmaxx_001.order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
				   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 24:00:00'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-01 18:14:58,093][INFO][zmaxx-etl.db-client] 
    select market,sum(kcsl)  as kcsl from rd_product_stock where kcsl > 0 group by market 


[2021-06-01 18:15:07,688][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                           sum(orderI.sku_pay) as payment , 
                           (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                           (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           AVG(zorder.order_pay) as avg_order_pay,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(zorder.customer_key)) as user_count
                   from zmaxx_001.order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
				   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 24:00:00'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-01 18:15:08,476][INFO][zmaxx-etl.db-client] 
    select market,sum(kcsl)  as kcsl from rd_product_stock where kcsl > 0 group by market 


[2021-06-01 18:39:45,787][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                           sum(orderI.sku_pay) as payment , 
                           (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                           (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           AVG(zorder.order_pay) as avg_order_pay,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(zorder.customer_key)) as user_count
                   from zmaxx_001.order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
				   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 24:00:00'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-01 18:39:46,763][INFO][zmaxx-etl.db-client] 
    select market,sum(kcsl)  as kcsl from rd_product_stock where kcsl > 0 group by market 


[2021-06-01 18:39:56,872][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                           sum(orderI.sku_pay) as payment , 
                           (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                           (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           AVG(zorder.order_pay) as avg_order_pay,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(zorder.customer_key)) as user_count
                   from zmaxx_001.order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
				   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 24:00:00'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-01 18:39:57,681][INFO][zmaxx-etl.db-client] 
    select market,sum(kcsl)  as kcsl from rd_product_stock where kcsl > 0 group by market 


[2021-06-01 18:44:50,747][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                           sum(orderI.sku_pay) as payment , 
                           (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                           (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           AVG(zorder.order_pay) as avg_order_pay,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(zorder.customer_key)) as user_count
                   from zmaxx_001.order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
				   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 24:00:00'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-01 18:44:51,561][INFO][zmaxx-etl.db-client] 
    select market,sum(kcsl)  as kcsl from rd_product_stock where kcsl > 0 group by market 


[2021-06-01 18:45:04,512][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                           sum(orderI.sku_pay) as payment , 
                           (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                           (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           AVG(zorder.order_pay) as avg_order_pay,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(zorder.customer_key)) as user_count
                   from zmaxx_001.order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
				   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 24:00:00'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-01 18:45:05,296][INFO][zmaxx-etl.db-client] 
    select market,sum(kcsl)  as kcsl from rd_product_stock where kcsl > 0 group by market 


[2021-06-01 19:10:15,409][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                           sum(orderI.sku_pay) as payment , 
                           (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                           (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           AVG(zorder.order_pay) as avg_order_pay,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(zorder.customer_key)) as user_count
                   from zmaxx_001.order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
				   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 24:00:00'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-01 19:10:16,225][INFO][zmaxx-etl.db-client] 
    select market,sum(kcsl)  as kcsl from rd_product_stock where kcsl > 0 group by market 


[2021-06-01 19:50:37,505][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                           sum(orderI.sku_pay) as payment , 
                           (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                           (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           AVG(zorder.order_pay) as avg_order_pay,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(zorder.customer_key)) as user_count
                   from zmaxx_001.order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
				   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 24:00:00'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-01 19:50:38,299][INFO][zmaxx-etl.db-client] 
    select market,sum(kcsl)  as kcsl from rd_product_stock where kcsl > 0 group by market 


[2021-06-01 19:51:25,312][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                           sum(orderI.sku_pay) as payment , 
                           (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                           (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           AVG(zorder.order_pay) as avg_order_pay,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(orderI.sku_id)) as sku_dictinct_count,
                           count(distinct(zorder.customer_key)) as user_count
                   from zmaxx_001.order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
				   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 24:00:00'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-01 19:51:26,121][INFO][zmaxx-etl.db-client] 
    select market,sum(kcsl)  as kcsl from rd_product_stock where kcsl > 0 group by market 


[2021-06-01 19:52:21,204][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                           sum(orderI.sku_pay) as payment , 
                           (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                           (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           AVG(zorder.order_pay) as avg_order_pay,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(orderI.sku_id)) as sku_dictinct_count,
                           count(distinct(zorder.customer_key)) as user_count
                   from zmaxx_001.order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
				   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 24:00:00'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-01 19:52:22,013][INFO][zmaxx-etl.db-client] 
    select market,sum(kcsl)  as kcsl from rd_product_stock where kcsl > 0 group by market 


[2021-06-01 19:55:13,473][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                           sum(orderI.sku_pay) as payment , 
                           (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                           (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           AVG(zorder.order_pay) as avg_order_pay,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(orderI.sku_id)) as sku_distinct_count,
                           count(distinct(zorder.customer_key)) as user_count
                   from zmaxx_001.order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
				   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 24:00:00'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-01 19:55:14,285][INFO][zmaxx-etl.db-client] 
    select market,sum(kcsl)  as kcsl from rd_product_stock where kcsl > 0 group by market 


[2021-06-01 20:04:18,189][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                           sum(orderI.sku_pay) as payment , 
                           (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                           (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           AVG(zorder.order_pay) as avg_order_pay,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(orderI.sku_id)) as sku_distinct_count,
                           count(distinct(zorder.customer_key)) as user_count
                   from zmaxx_001.order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
				   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 24:00:00'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-01 20:04:19,057][INFO][zmaxx-etl.db-client] 
    select market,sum(kcsl)  as kcsl from rd_product_stock where kcsl > 0 group by market 


[2021-06-01 20:04:41,170][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                           sum(orderI.sku_pay) as payment , 
                           (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                           (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           AVG(zorder.order_pay) as avg_order_pay,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(orderI.sku_id)) as sku_distinct_count,
                           count(distinct(zorder.customer_key)) as user_count
                   from zmaxx_001.order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
				   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 24:00:00'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-01 20:04:58,822][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                           sum(orderI.sku_pay) as payment , 
                           (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                           (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           AVG(zorder.order_pay) as avg_order_pay,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(orderI.sku_id)) as sku_distinct_count,
                           count(distinct(zorder.customer_key)) as user_count
                   from zmaxx_001.order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
				   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 24:00:00'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-01 20:05:20,785][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                           sum(orderI.sku_pay) as payment , 
                           (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                           (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           AVG(zorder.order_pay) as avg_order_pay,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(orderI.sku_id)) as sku_distinct_count,
                           count(distinct(zorder.customer_key)) as user_count
                   from zmaxx_001.order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
				   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 24:00:00'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


