[2021-06-04 14:09:29,955][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                           sum(orderI.sku_pay) as payment , 
                           (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                           (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           AVG(zorder.order_pay) as avg_order_pay,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(orderI.sku_id)) as sku_distinct_count,
                           count(distinct(zorder.customer_key)) as user_count
                   from order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
		   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 23:59:59'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-04 14:09:31,127][INFO][zmaxx-etl.db-client] 
    select market,sum(kcsl)  as kcsl from rd_product_stock where kcsl > 0 group by market 


[2021-06-04 14:09:31,256][INFO][zmaxx-etl.db-client] 
select  store_key, sum(CAST(sku_qty AS DECIMAL(12,2)) ) as sale_qty_30  from order_item where order_create > DATE_SUB('2021-05-11',INTERVAL 30 DAY)  group by store_key
[2021-06-04 14:09:31,682][INFO][zmaxx-etl.db-client] 
select store_key,count(order_id) as user_null_count from zmaxx_001.order 
where customer_key = 0  and order_create >=  '2021-05-11 00:00:00'  and   order_create  <= '2021-05-11 23:59:59'
group by store_key;


[2021-06-04 14:09:31,691][INFO][zmaxx-etl.db-client] 
select store_key,COUNT(DISTINCT(customer_key)) as new_u,sum(order_pay) as new_u_pay from zmaxx_001.order 
where  customer_key not in
(
select distinct(customer_key) as old_key from zmaxx_001.order   where      order_create  <= '2021-05-11 00:00:00'
)
and order_create >=  '2021-05-11 00:00:00'  and   order_create  <= '2021-05-11 23:59:59'
group by store_key 


[2021-06-04 14:09:32,203][INFO][zmaxx-etl.db-client] 
select store_key,COUNT(DISTINCT(customer_key)) as old_u,sum(order_pay) as old_u_pay from zmaxx_001.order 
where  customer_key   in
(
select distinct(customer_key) as old_key from zmaxx_001.order   where      order_create  <= '2021-05-11 00:00:00'
)
and order_create >=  '2021-05-11 00:00:00'  and   order_create  <= '2021-05-11 23:59:59'
group by store_key 

[2021-06-04 14:17:35,695][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                           sum(orderI.sku_pay) as payment , 
                           (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                           (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           AVG(zorder.order_pay) as avg_order_pay,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(orderI.sku_id)) as sku_distinct_count,
                           count(distinct(zorder.customer_key)) as user_count
                   from order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
		   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 23:59:59'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-04 14:17:36,758][INFO][zmaxx-etl.db-client] 
    select market,sum(kcsl)  as kcsl from rd_product_stock where kcsl > 0 group by market 


[2021-06-04 14:17:36,866][INFO][zmaxx-etl.db-client] 
select  store_key, sum(CAST(sku_qty AS DECIMAL(12,2)) ) as sale_qty_30  from order_item where order_create > DATE_SUB('2021-05-11',INTERVAL 30 DAY)  group by store_key
[2021-06-04 14:17:37,304][INFO][zmaxx-etl.db-client] 
select store_key,count(order_id) as user_null_count from zmaxx_001.order 
where customer_key = 0  and order_create >=  '2021-05-11 00:00:00'  and   order_create  <= '2021-05-11 23:59:59'
group by store_key;


[2021-06-04 14:17:37,310][INFO][zmaxx-etl.db-client] 
select store_key,COUNT(DISTINCT(customer_key)) as new_u,sum(order_pay) as new_u_pay from zmaxx_001.order 
where  customer_key not in
(
select distinct(customer_key) as old_key from zmaxx_001.order   where      order_create  <= '2021-05-11 00:00:00'
)
and order_create >=  '2021-05-11 00:00:00'  and   order_create  <= '2021-05-11 23:59:59'
group by store_key 


[2021-06-04 14:17:37,809][INFO][zmaxx-etl.db-client] 
select store_key,COUNT(DISTINCT(customer_key)) as old_u,sum(order_pay) as old_u_pay from zmaxx_001.order 
where  customer_key   in
(
select distinct(customer_key) as old_key from zmaxx_001.order   where      order_create  <= '2021-05-11 00:00:00'
)
and order_create >=  '2021-05-11 00:00:00'  and   order_create  <= '2021-05-11 23:59:59'
group by store_key 

[2021-06-04 14:18:40,552][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                           sum(orderI.sku_pay) as payment , 
                           (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                           (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           AVG(zorder.order_pay) as avg_order_pay,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(orderI.sku_id)) as sku_distinct_count,
                           count(distinct(zorder.customer_key)) as user_count
                   from order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
		   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 23:59:59'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-04 14:18:41,523][INFO][zmaxx-etl.db-client] 
    select market,sum(kcsl)  as kcsl from rd_product_stock where kcsl > 0 group by market 


[2021-06-04 14:18:41,636][INFO][zmaxx-etl.db-client] 
select  store_key, sum(CAST(sku_qty AS DECIMAL(12,2)) ) as sale_qty_30  from order_item where order_create > DATE_SUB('2021-05-11',INTERVAL 30 DAY)  group by store_key
[2021-06-04 14:18:42,120][INFO][zmaxx-etl.db-client] 
select store_key,count(order_id) as user_null_count from zmaxx_001.order 
where customer_key = 0  and order_create >=  '2021-05-11 00:00:00'  and   order_create  <= '2021-05-11 23:59:59'
group by store_key;


[2021-06-04 14:18:42,127][INFO][zmaxx-etl.db-client] 
select store_key,COUNT(DISTINCT(customer_key)) as new_u,sum(order_pay) as new_u_pay from zmaxx_001.order 
where  customer_key not in
(
select distinct(customer_key) as old_key from zmaxx_001.order   where      order_create  <= '2021-05-11 00:00:00'
)
and order_create >=  '2021-05-11 00:00:00'  and   order_create  <= '2021-05-11 23:59:59'
group by store_key 


[2021-06-04 14:18:42,601][INFO][zmaxx-etl.db-client] 
select store_key,COUNT(DISTINCT(customer_key)) as old_u,sum(order_pay) as old_u_pay from zmaxx_001.order 
where  customer_key   in
(
select distinct(customer_key) as old_key from zmaxx_001.order   where      order_create  <= '2021-05-11 00:00:00'
)
and order_create >=  '2021-05-11 00:00:00'  and   order_create  <= '2021-05-11 23:59:59'
group by store_key 

[2021-06-04 14:19:19,870][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                           sum(orderI.sku_pay) as payment , 
                           (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                           (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           AVG(zorder.order_pay) as avg_order_pay,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(orderI.sku_id)) as sku_distinct_count,
                           count(distinct(zorder.customer_key)) as user_count
                   from order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
		   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 23:59:59'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-04 14:19:20,855][INFO][zmaxx-etl.db-client] 
    select market,sum(kcsl)  as kcsl from rd_product_stock where kcsl > 0 group by market 


[2021-06-04 14:19:20,950][INFO][zmaxx-etl.db-client] 
select  store_key, sum(CAST(sku_qty AS DECIMAL(12,2)) ) as sale_qty_30  from order_item where order_create > DATE_SUB('2021-05-11',INTERVAL 30 DAY)  group by store_key
[2021-06-04 14:19:21,357][INFO][zmaxx-etl.db-client] 
select store_key,count(order_id) as user_null_count from zmaxx_001.order 
where customer_key = 0  and order_create >=  '2021-05-11 00:00:00'  and   order_create  <= '2021-05-11 23:59:59'
group by store_key;


[2021-06-04 14:19:21,365][INFO][zmaxx-etl.db-client] 
select store_key,COUNT(DISTINCT(customer_key)) as new_u,sum(order_pay) as new_u_pay from zmaxx_001.order 
where  customer_key not in
(
select distinct(customer_key) as old_key from zmaxx_001.order   where      order_create  <= '2021-05-11 00:00:00'
)
and order_create >=  '2021-05-11 00:00:00'  and   order_create  <= '2021-05-11 23:59:59'
group by store_key 


[2021-06-04 14:19:21,858][INFO][zmaxx-etl.db-client] 
select store_key,COUNT(DISTINCT(customer_key)) as old_u,sum(order_pay) as old_u_pay from zmaxx_001.order 
where  customer_key   in
(
select distinct(customer_key) as old_key from zmaxx_001.order   where      order_create  <= '2021-05-11 00:00:00'
)
and order_create >=  '2021-05-11 00:00:00'  and   order_create  <= '2021-05-11 23:59:59'
group by store_key 

[2021-06-04 14:25:18,368][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                           sum(orderI.sku_pay) as payment , 
                           (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                           (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           AVG(zorder.order_pay) as avg_order_pay,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(orderI.sku_id)) as sku_distinct_count,
                           count(distinct(zorder.customer_key)) as user_count
                   from order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
		   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 23:59:59'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-04 14:25:19,513][INFO][zmaxx-etl.db-client] 
    select market,sum(kcsl)  as kcsl from rd_product_stock where kcsl > 0 group by market 


[2021-06-04 14:25:19,639][INFO][zmaxx-etl.db-client] 
select  store_key, sum(CAST(sku_qty AS DECIMAL(12,2)) ) as sale_qty_30  from order_item where order_create > DATE_SUB('2021-05-11',INTERVAL 30 DAY)  group by store_key
[2021-06-04 14:25:20,070][INFO][zmaxx-etl.db-client] 
select store_key,count(order_id) as user_null_count from zmaxx_001.order 
where customer_key = 0  and order_create >=  '2021-05-11 00:00:00'  and   order_create  <= '2021-05-11 23:59:59'
group by store_key;


[2021-06-04 14:25:20,077][INFO][zmaxx-etl.db-client] 
select store_key,COUNT(DISTINCT(customer_key)) as new_u,sum(order_pay) as new_u_pay from zmaxx_001.order 
where  customer_key not in
(
select distinct(customer_key) as old_key from zmaxx_001.order   where      order_create  <= '2021-05-11 00:00:00'
)
and order_create >=  '2021-05-11 00:00:00'  and   order_create  <= '2021-05-11 23:59:59'
group by store_key 


[2021-06-04 14:25:20,566][INFO][zmaxx-etl.db-client] 
select store_key,COUNT(DISTINCT(customer_key)) as old_u,sum(order_pay) as old_u_pay from zmaxx_001.order 
where  customer_key   in
(
select distinct(customer_key) as old_key from zmaxx_001.order   where      order_create  <= '2021-05-11 00:00:00'
)
and order_create >=  '2021-05-11 00:00:00'  and   order_create  <= '2021-05-11 23:59:59'
group by store_key 

[2021-06-04 14:26:19,570][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                           sum(orderI.sku_pay) as payment , 
                           (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                           (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           AVG(zorder.order_pay) as avg_order_pay,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(orderI.sku_id)) as sku_distinct_count,
                           count(distinct(zorder.customer_key)) as user_count
                   from order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
		   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 23:59:59'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-04 14:26:20,559][INFO][zmaxx-etl.db-client] 
    select market,sum(kcsl)  as kcsl from rd_product_stock where kcsl > 0 group by market 


[2021-06-04 14:26:20,688][INFO][zmaxx-etl.db-client] 
select  store_key, sum(CAST(sku_qty AS DECIMAL(12,2)) ) as sale_qty_30  from order_item where order_create > DATE_SUB('2021-05-11',INTERVAL 30 DAY)  group by store_key
[2021-06-04 14:26:21,070][INFO][zmaxx-etl.db-client] 
select store_key,count(order_id) as user_null_count from zmaxx_001.order 
where customer_key = 0  and order_create >=  '2021-05-11 00:00:00'  and   order_create  <= '2021-05-11 23:59:59'
group by store_key;


[2021-06-04 14:26:21,080][INFO][zmaxx-etl.db-client] 
select store_key,COUNT(DISTINCT(customer_key)) as new_u,sum(order_pay) as new_u_pay from zmaxx_001.order 
where  customer_key not in
(
select distinct(customer_key) as old_key from zmaxx_001.order   where      order_create  <= '2021-05-11 00:00:00'
)
and order_create >=  '2021-05-11 00:00:00'  and   order_create  <= '2021-05-11 23:59:59'
group by store_key 


[2021-06-04 14:26:21,542][INFO][zmaxx-etl.db-client] 
select store_key,COUNT(DISTINCT(customer_key)) as old_u,sum(order_pay) as old_u_pay from zmaxx_001.order 
where  customer_key   in
(
select distinct(customer_key) as old_key from zmaxx_001.order   where      order_create  <= '2021-05-11 00:00:00'
)
and order_create >=  '2021-05-11 00:00:00'  and   order_create  <= '2021-05-11 23:59:59'
group by store_key 

[2021-06-04 14:30:05,445][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                           sum(orderI.sku_pay) as payment , 
                           (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                           (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           AVG(zorder.order_pay) as avg_order_pay,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(orderI.sku_id)) as sku_distinct_count,
                           count(distinct(zorder.customer_key)) as user_count
                   from order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
		   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 23:59:59'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-04 14:30:06,577][INFO][zmaxx-etl.db-client] 
    select market,sum(kcsl)  as kcsl from rd_product_stock where kcsl > 0 group by market 


[2021-06-04 14:30:06,705][INFO][zmaxx-etl.db-client] 
select  store_key, sum(CAST(sku_qty AS DECIMAL(12,2)) ) as sale_qty_30  from order_item where order_create > DATE_SUB('2021-05-11',INTERVAL 30 DAY)  group by store_key
[2021-06-04 14:30:07,116][INFO][zmaxx-etl.db-client] 
select store_key,count(order_id) as user_null_count from zmaxx_001.order 
where customer_key = 0  and order_create >=  '2021-05-11 00:00:00'  and   order_create  <= '2021-05-11 23:59:59'
group by store_key;


[2021-06-04 14:30:07,125][INFO][zmaxx-etl.db-client] 
select store_key,COUNT(DISTINCT(customer_key)) as new_u,sum(order_pay) as new_u_pay from zmaxx_001.order 
where  customer_key not in
(
select distinct(customer_key) as old_key from zmaxx_001.order   where      order_create  <= '2021-05-11 00:00:00'
)
and order_create >=  '2021-05-11 00:00:00'  and   order_create  <= '2021-05-11 23:59:59'
group by store_key 


[2021-06-04 14:30:07,616][INFO][zmaxx-etl.db-client] 
select store_key,COUNT(DISTINCT(customer_key)) as old_u,sum(order_pay) as old_u_pay from zmaxx_001.order 
where  customer_key   in
(
select distinct(customer_key) as old_key from zmaxx_001.order   where      order_create  <= '2021-05-11 00:00:00'
)
and order_create >=  '2021-05-11 00:00:00'  and   order_create  <= '2021-05-11 23:59:59'
group by store_key 

[2021-06-04 14:34:25,929][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                           sum(orderI.sku_pay) as payment , 
                           (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                           (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           AVG(zorder.order_pay) as avg_order_pay,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(orderI.sku_id)) as sku_distinct_count,
                           count(distinct(zorder.customer_key)) as user_count
                   from order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
		   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 23:59:59'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-04 14:34:27,141][INFO][zmaxx-etl.db-client] 
    select market,sum(kcsl)  as kcsl from rd_product_stock where kcsl > 0 group by market 


[2021-06-04 14:34:27,299][INFO][zmaxx-etl.db-client] 
select  store_key, sum(CAST(sku_qty AS DECIMAL(12,2)) ) as sale_qty_30  from order_item where order_create > DATE_SUB('2021-05-11',INTERVAL 30 DAY)  group by store_key
[2021-06-04 14:34:28,356][INFO][zmaxx-etl.db-client] 
select store_key,count(order_id) as user_null_count from zmaxx_001.order 
where customer_key = 0  and order_create >=  '2021-05-11 00:00:00'  and   order_create  <= '2021-05-11 23:59:59'
group by store_key;


[2021-06-04 14:34:28,367][INFO][zmaxx-etl.db-client] 
select store_key,COUNT(DISTINCT(customer_key)) as new_u,sum(order_pay) as new_u_pay from zmaxx_001.order 
where  customer_key not in
(
select distinct(customer_key) as old_key from zmaxx_001.order   where      order_create  <= '2021-05-11 00:00:00'
)
and order_create >=  '2021-05-11 00:00:00'  and   order_create  <= '2021-05-11 23:59:59'
group by store_key 


[2021-06-04 14:34:29,136][INFO][zmaxx-etl.db-client] 
select store_key,COUNT(DISTINCT(customer_key)) as old_u,sum(order_pay) as old_u_pay from zmaxx_001.order 
where  customer_key   in
(
select distinct(customer_key) as old_key from zmaxx_001.order   where      order_create  <= '2021-05-11 00:00:00'
)
and order_create >=  '2021-05-11 00:00:00'  and   order_create  <= '2021-05-11 23:59:59'
group by store_key 

[2021-06-04 14:35:52,106][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                           sum(orderI.sku_pay) as payment , 
                           (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                           (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           AVG(zorder.order_pay) as avg_order_pay,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(orderI.sku_id)) as sku_distinct_count,
                           count(distinct(zorder.customer_key)) as user_count
                   from order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
		   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 23:59:59'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-04 14:35:53,480][INFO][zmaxx-etl.db-client] 
    select market,sum(kcsl)  as kcsl from rd_product_stock where kcsl > 0 group by market 


[2021-06-04 14:35:53,610][INFO][zmaxx-etl.db-client] 
select  store_key, sum(CAST(sku_qty AS DECIMAL(12,2)) ) as sale_qty_30  from order_item where order_create > DATE_SUB('2021-05-11',INTERVAL 30 DAY)  group by store_key
[2021-06-04 14:35:54,012][INFO][zmaxx-etl.db-client] 
select store_key,count(order_id) as user_null_count from zmaxx_001.order 
where customer_key = 0  and order_create >=  '2021-05-11 00:00:00'  and   order_create  <= '2021-05-11 23:59:59'
group by store_key;


[2021-06-04 14:35:54,018][INFO][zmaxx-etl.db-client] 
select store_key,COUNT(DISTINCT(customer_key)) as new_u,sum(order_pay) as new_u_pay from zmaxx_001.order 
where  customer_key not in
(
select distinct(customer_key) as old_key from zmaxx_001.order   where      order_create  <= '2021-05-11 00:00:00'
)
and order_create >=  '2021-05-11 00:00:00'  and   order_create  <= '2021-05-11 23:59:59'
group by store_key 


[2021-06-04 14:35:54,586][INFO][zmaxx-etl.db-client] 
select store_key,COUNT(DISTINCT(customer_key)) as old_u,sum(order_pay) as old_u_pay from zmaxx_001.order 
where  customer_key   in
(
select distinct(customer_key) as old_key from zmaxx_001.order   where      order_create  <= '2021-05-11 00:00:00'
)
and order_create >=  '2021-05-11 00:00:00'  and   order_create  <= '2021-05-11 23:59:59'
group by store_key 

[2021-06-04 14:37:32,413][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                           sum(orderI.sku_pay) as payment , 
                           (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                           (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           AVG(zorder.order_pay) as avg_order_pay,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(orderI.sku_id)) as sku_distinct_count,
                           count(distinct(zorder.customer_key)) as user_count
                   from order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
		   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 23:59:59'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-04 14:37:33,627][INFO][zmaxx-etl.db-client] 
    select market,sum(kcsl)  as kcsl from rd_product_stock where kcsl > 0 group by market 


[2021-06-04 14:37:33,771][INFO][zmaxx-etl.db-client] 
select  store_key, sum(CAST(sku_qty AS DECIMAL(12,2)) ) as sale_qty_30  from order_item where order_create > DATE_SUB('2021-05-11',INTERVAL 30 DAY)  group by store_key
[2021-06-04 14:37:34,187][INFO][zmaxx-etl.db-client] 
select store_key,count(order_id) as user_null_count from zmaxx_001.order 
where customer_key = 0  and order_create >=  '2021-05-11 00:00:00'  and   order_create  <= '2021-05-11 23:59:59'
group by store_key;


[2021-06-04 14:37:34,195][INFO][zmaxx-etl.db-client] 
select store_key,COUNT(DISTINCT(customer_key)) as new_u,sum(order_pay) as new_u_pay from zmaxx_001.order 
where  customer_key not in
(
select distinct(customer_key) as old_key from zmaxx_001.order   where      order_create  <= '2021-05-11 00:00:00'
)
and order_create >=  '2021-05-11 00:00:00'  and   order_create  <= '2021-05-11 23:59:59'
group by store_key 


[2021-06-04 14:37:34,730][INFO][zmaxx-etl.db-client] 
select store_key,COUNT(DISTINCT(customer_key)) as old_u,sum(order_pay) as old_u_pay from zmaxx_001.order 
where  customer_key   in
(
select distinct(customer_key) as old_key from zmaxx_001.order   where      order_create  <= '2021-05-11 00:00:00'
)
and order_create >=  '2021-05-11 00:00:00'  and   order_create  <= '2021-05-11 23:59:59'
group by store_key 

[2021-06-04 14:38:07,639][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                           sum(orderI.sku_pay) as payment , 
                           (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                           (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           AVG(zorder.order_pay) as avg_order_pay,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(orderI.sku_id)) as sku_distinct_count,
                           count(distinct(zorder.customer_key)) as user_count
                   from order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
		   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 23:59:59'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-04 14:38:08,636][INFO][zmaxx-etl.db-client] 
    select market,sum(kcsl)  as kcsl from rd_product_stock where kcsl > 0 group by market 


[2021-06-04 14:38:08,799][INFO][zmaxx-etl.db-client] 
select  store_key, sum(CAST(sku_qty AS DECIMAL(12,2)) ) as sale_qty_30  from order_item where order_create > DATE_SUB('2021-05-11',INTERVAL 30 DAY)  group by store_key
[2021-06-04 14:38:09,198][INFO][zmaxx-etl.db-client] 
select store_key,count(order_id) as user_null_count from zmaxx_001.order 
where customer_key = 0  and order_create >=  '2021-05-11 00:00:00'  and   order_create  <= '2021-05-11 23:59:59'
group by store_key;


[2021-06-04 14:38:09,206][INFO][zmaxx-etl.db-client] 
select store_key,COUNT(DISTINCT(customer_key)) as new_u,sum(order_pay) as new_u_pay from zmaxx_001.order 
where  customer_key not in
(
select distinct(customer_key) as old_key from zmaxx_001.order   where      order_create  <= '2021-05-11 00:00:00'
)
and order_create >=  '2021-05-11 00:00:00'  and   order_create  <= '2021-05-11 23:59:59'
group by store_key 


[2021-06-04 14:38:09,701][INFO][zmaxx-etl.db-client] 
select store_key,COUNT(DISTINCT(customer_key)) as old_u,sum(order_pay) as old_u_pay from zmaxx_001.order 
where  customer_key   in
(
select distinct(customer_key) as old_key from zmaxx_001.order   where      order_create  <= '2021-05-11 00:00:00'
)
and order_create >=  '2021-05-11 00:00:00'  and   order_create  <= '2021-05-11 23:59:59'
group by store_key 

[2021-06-04 14:44:21,442][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                           sum(orderI.sku_pay) as payment , 
                           (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                           (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           AVG(zorder.order_pay) as avg_order_pay,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(orderI.sku_id)) as sku_distinct_count,
                           count(distinct(zorder.customer_key)) as user_count
                   from order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
		   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 23:59:59'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-04 14:44:22,609][INFO][zmaxx-etl.db-client] 
    select market,sum(kcsl)  as kcsl from rd_product_stock where kcsl > 0 group by market 


[2021-06-04 14:44:22,741][INFO][zmaxx-etl.db-client] 
select  store_key, sum(CAST(sku_qty AS DECIMAL(12,2)) ) as sale_qty_30  from order_item where order_create > DATE_SUB('2021-05-11',INTERVAL 30 DAY)  group by store_key
[2021-06-04 14:44:23,124][INFO][zmaxx-etl.db-client] 
select store_key,count(order_id) as user_null_count from zmaxx_001.order 
where customer_key = 0  and order_create >=  '2021-05-11 00:00:00'  and   order_create  <= '2021-05-11 23:59:59'
group by store_key;


[2021-06-04 14:44:23,130][INFO][zmaxx-etl.db-client] 
select store_key,COUNT(DISTINCT(customer_key)) as new_u,sum(order_pay) as new_u_pay from zmaxx_001.order 
where  customer_key not in
(
select distinct(customer_key) as old_key from zmaxx_001.order   where      order_create  <= '2021-05-11 00:00:00'
)
and order_create >=  '2021-05-11 00:00:00'  and   order_create  <= '2021-05-11 23:59:59'
group by store_key 


[2021-06-04 14:44:23,662][INFO][zmaxx-etl.db-client] 
select store_key,COUNT(DISTINCT(customer_key)) as old_u,sum(order_pay) as old_u_pay from zmaxx_001.order 
where  customer_key   in
(
select distinct(customer_key) as old_key from zmaxx_001.order   where      order_create  <= '2021-05-11 00:00:00'
)
and order_create >=  '2021-05-11 00:00:00'  and   order_create  <= '2021-05-11 23:59:59'
group by store_key 

[2021-06-04 14:45:26,892][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                           sum(orderI.sku_pay) as payment , 
                           (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                           (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           AVG(zorder.order_pay) as avg_order_pay,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(orderI.sku_id)) as sku_distinct_count,
                           count(distinct(zorder.customer_key)) as user_count
                   from order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
		   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 23:59:59'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-04 14:45:27,982][INFO][zmaxx-etl.db-client] 
    select market,sum(kcsl)  as kcsl from rd_product_stock where kcsl > 0 group by market 


[2021-06-04 14:45:28,124][INFO][zmaxx-etl.db-client] 
select  store_key, sum(CAST(sku_qty AS DECIMAL(12,2)) ) as sale_qty_30  from order_item where order_create > DATE_SUB('2021-05-11',INTERVAL 30 DAY)  group by store_key
[2021-06-04 14:45:28,526][INFO][zmaxx-etl.db-client] 
select store_key,count(order_id) as user_null_count from zmaxx_001.order 
where customer_key = 0  and order_create >=  '2021-05-11 00:00:00'  and   order_create  <= '2021-05-11 23:59:59'
group by store_key;


[2021-06-04 14:45:28,537][INFO][zmaxx-etl.db-client] 
select store_key,COUNT(DISTINCT(customer_key)) as new_u,sum(order_pay) as new_u_pay from zmaxx_001.order 
where  customer_key not in
(
select distinct(customer_key) as old_key from zmaxx_001.order   where      order_create  <= '2021-05-11 00:00:00'
)
and order_create >=  '2021-05-11 00:00:00'  and   order_create  <= '2021-05-11 23:59:59'
group by store_key 


[2021-06-04 14:45:29,033][INFO][zmaxx-etl.db-client] 
select store_key,COUNT(DISTINCT(customer_key)) as old_u,sum(order_pay) as old_u_pay from zmaxx_001.order 
where  customer_key   in
(
select distinct(customer_key) as old_key from zmaxx_001.order   where      order_create  <= '2021-05-11 00:00:00'
)
and order_create >=  '2021-05-11 00:00:00'  and   order_create  <= '2021-05-11 23:59:59'
group by store_key 

[2021-06-04 14:46:25,291][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                           sum(orderI.sku_pay) as payment , 
                           (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                           (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           AVG(zorder.order_pay) as avg_order_pay,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(orderI.sku_id)) as sku_distinct_count,
                           count(distinct(zorder.customer_key)) as user_count
                   from order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
		   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 23:59:59'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-04 14:46:26,315][INFO][zmaxx-etl.db-client] 
    select market,sum(kcsl)  as kcsl from rd_product_stock where kcsl > 0 group by market 


[2021-06-04 14:46:26,460][INFO][zmaxx-etl.db-client] 
select  store_key, sum(CAST(sku_qty AS DECIMAL(12,2)) ) as sale_qty_30  from order_item where order_create > DATE_SUB('2021-05-11',INTERVAL 30 DAY)  group by store_key
[2021-06-04 14:46:26,898][INFO][zmaxx-etl.db-client] 
select store_key,count(order_id) as user_null_count from zmaxx_001.order 
where customer_key = 0  and order_create >=  '2021-05-11 00:00:00'  and   order_create  <= '2021-05-11 23:59:59'
group by store_key;


[2021-06-04 14:46:26,908][INFO][zmaxx-etl.db-client] 
select store_key,COUNT(DISTINCT(customer_key)) as new_u,sum(order_pay) as new_u_pay from zmaxx_001.order 
where  customer_key not in
(
select distinct(customer_key) as old_key from zmaxx_001.order   where      order_create  <= '2021-05-11 00:00:00'
)
and order_create >=  '2021-05-11 00:00:00'  and   order_create  <= '2021-05-11 23:59:59'
group by store_key 


[2021-06-04 14:46:27,418][INFO][zmaxx-etl.db-client] 
select store_key,COUNT(DISTINCT(customer_key)) as old_u,sum(order_pay) as old_u_pay from zmaxx_001.order 
where  customer_key   in
(
select distinct(customer_key) as old_key from zmaxx_001.order   where      order_create  <= '2021-05-11 00:00:00'
)
and order_create >=  '2021-05-11 00:00:00'  and   order_create  <= '2021-05-11 23:59:59'
group by store_key 

[2021-06-04 14:51:55,651][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                           sum(orderI.sku_pay) as payment , 
                           (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                           (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           AVG(zorder.order_pay) as avg_order_pay,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(orderI.sku_id)) as sku_distinct_count,
                           count(distinct(zorder.customer_key)) as user_count
                   from order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
		   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 23:59:59'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-04 14:51:56,890][INFO][zmaxx-etl.db-client] 
    select market,sum(kcsl)  as kcsl from rd_product_stock where kcsl > 0 group by market 


[2021-06-04 14:51:57,015][INFO][zmaxx-etl.db-client] 
select  store_key, sum(CAST(sku_qty AS DECIMAL(12,2)) ) as sale_qty_30  from order_item where order_create > DATE_SUB('2021-05-11',INTERVAL 30 DAY)  group by store_key
[2021-06-04 14:51:57,433][INFO][zmaxx-etl.db-client] 
select store_key,count(order_id) as user_null_count from zmaxx_001.order 
where customer_key = 0  and order_create >=  '2021-05-11 00:00:00'  and   order_create  <= '2021-05-11 23:59:59'
group by store_key;


[2021-06-04 14:51:57,446][INFO][zmaxx-etl.db-client] 
select store_key,COUNT(DISTINCT(customer_key)) as new_u,sum(order_pay) as new_u_pay from zmaxx_001.order 
where  customer_key not in
(
select distinct(customer_key) as old_key from zmaxx_001.order   where      order_create  <= '2021-05-11 00:00:00'
)
and order_create >=  '2021-05-11 00:00:00'  and   order_create  <= '2021-05-11 23:59:59'
group by store_key 


[2021-06-04 14:51:57,971][INFO][zmaxx-etl.db-client] 
select store_key,COUNT(DISTINCT(customer_key)) as old_u,sum(order_pay) as old_u_pay from zmaxx_001.order 
where  customer_key   in
(
select distinct(customer_key) as old_key from zmaxx_001.order   where      order_create  <= '2021-05-11 00:00:00'
)
and order_create >=  '2021-05-11 00:00:00'  and   order_create  <= '2021-05-11 23:59:59'
group by store_key 

[2021-06-04 14:53:02,166][INFO][zmaxx-etl.db-client] 
select  orderI.store_key , 
			   rds.name,   
                           sum(orderI.sku_pay) as payment , 
                           (sum(orderI.sku_pay) - sum(rdp.jj))/sum(orderI.sku_pay) as gross_profit,   
                           (sum(orderI.sku_pay) - sum(rdp.jj)) as gross,                    
                           sum(orderI.sku_qty) as qty,
                           sum(rdpu.sl) as purchase_sl,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty) as unit_merchan_price,
                           sum(rdp.jj) as jj,
                           count(distinct(orderI.order_id))  as order_count,
                           sum(orderI.sku_pay)/count(distinct(orderI.order_id)) as  unit_order_price,
                           sum(orderI.sku_qty)/count(distinct(orderI.order_id))  as  joint_rate,
                           AVG(zorder.order_pay) as avg_order_pay,
                           sum(orderI.sku_pay)/sum(orderI.sku_qty)  as unit_goods_price,
                           count(distinct(orderI.sku_id)) as sku_distinct_count,
                           count(distinct(zorder.customer_key)) as user_count
                   from order_item as orderI
                   left join  rd_product as rdp on rdp.id = orderI.sku_id 
                   left join  rd_store as rds on rds.`id` =  orderI.store_key
                   left join  rd_purchase  as rdpu on rdpu.market = orderI.store_key
		   left join  zmaxx_001.order as zorder on zorder.id =   orderI.order_id 	
                   where        orderI.order_source='redian'  
                           and  orderI.sku_pay>0                    
                           and  orderI.create_dt >=  '2021-05-11 00:00:00' 
                           and  orderI.create_dt <= '2021-05-11 23:59:59'
                           #and  p_stock.kcsl > 0
                   group by orderI.store_key ;


[2021-06-04 14:53:03,399][INFO][zmaxx-etl.db-client] 
    select market,sum(kcsl)  as kcsl from rd_product_stock where kcsl > 0 group by market 


[2021-06-04 14:53:03,537][INFO][zmaxx-etl.db-client] 
select  store_key, sum(CAST(sku_qty AS DECIMAL(12,2)) ) as sale_qty_30  from order_item where order_create > DATE_SUB('2021-05-11',INTERVAL 30 DAY)  group by store_key
[2021-06-04 14:53:03,923][INFO][zmaxx-etl.db-client] 
select store_key,count(order_id) as user_null_count from zmaxx_001.order 
where customer_key = 0  and order_create >=  '2021-05-11 00:00:00'  and   order_create  <= '2021-05-11 23:59:59'
group by store_key;


[2021-06-04 14:53:03,939][INFO][zmaxx-etl.db-client] 
select store_key,COUNT(DISTINCT(customer_key)) as new_u,sum(order_pay) as new_u_pay from zmaxx_001.order 
where  customer_key not in
(
select distinct(customer_key) as old_key from zmaxx_001.order   where      order_create  <= '2021-05-11 00:00:00'
)
and order_create >=  '2021-05-11 00:00:00'  and   order_create  <= '2021-05-11 23:59:59'
group by store_key 


[2021-06-04 14:53:04,480][INFO][zmaxx-etl.db-client] 
select store_key,COUNT(DISTINCT(customer_key)) as old_u,sum(order_pay) as old_u_pay from zmaxx_001.order 
where  customer_key   in
(
select distinct(customer_key) as old_key from zmaxx_001.order   where      order_create  <= '2021-05-11 00:00:00'
)
and order_create >=  '2021-05-11 00:00:00'  and   order_create  <= '2021-05-11 23:59:59'
group by store_key 

